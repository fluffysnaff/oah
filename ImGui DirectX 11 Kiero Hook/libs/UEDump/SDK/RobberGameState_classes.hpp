#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RobberGameState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass RobberGameState.RobberGameState_C
// 0x0030 (0x02A0 - 0x0270)
class ARobberGameState_C final : public AGameStateBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Total_power;                                       // 0x0280(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinimumPower;                                      // 0x0284(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             PowerSet;                                          // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         PowerMultiplier;                                   // 0x0298(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PowerSet__DelegateSignature(int32 Total, int32 Minimum, float PowerMultiplier_0);
	void ExecuteUbergraph_RobberGameState(int32 EntryPoint);
	void SetFirepower();
	void ReceiveBeginPlay();
	void SpawnToolsWhenConnected();
	void GetTotalPlayerPower(int32* Total_power_0, int32* MinimumPower_0);
	void CheckPlayersLoaded(bool* Loaded_);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RobberGameState_C">();
	}
	static class ARobberGameState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARobberGameState_C>();
	}
};
static_assert(alignof(ARobberGameState_C) == 0x000008, "Wrong alignment on ARobberGameState_C");
static_assert(sizeof(ARobberGameState_C) == 0x0002A0, "Wrong size on ARobberGameState_C");
static_assert(offsetof(ARobberGameState_C, UberGraphFrame) == 0x000270, "Member 'ARobberGameState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ARobberGameState_C, DefaultSceneRoot) == 0x000278, "Member 'ARobberGameState_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ARobberGameState_C, Total_power) == 0x000280, "Member 'ARobberGameState_C::Total_power' has a wrong offset!");
static_assert(offsetof(ARobberGameState_C, MinimumPower) == 0x000284, "Member 'ARobberGameState_C::MinimumPower' has a wrong offset!");
static_assert(offsetof(ARobberGameState_C, PowerSet) == 0x000288, "Member 'ARobberGameState_C::PowerSet' has a wrong offset!");
static_assert(offsetof(ARobberGameState_C, PowerMultiplier) == 0x000298, "Member 'ARobberGameState_C::PowerMultiplier' has a wrong offset!");

}

