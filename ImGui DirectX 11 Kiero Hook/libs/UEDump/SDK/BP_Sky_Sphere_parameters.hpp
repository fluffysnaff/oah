#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Sky_Sphere

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Sky_Sphere.BP_Sky_Sphere_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct BP_Sky_Sphere_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Sky_Sphere_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Sky_Sphere_C_UserConstructionScript");
static_assert(sizeof(BP_Sky_Sphere_C_UserConstructionScript) == 0x000008, "Wrong size on BP_Sky_Sphere_C_UserConstructionScript");
static_assert(offsetof(BP_Sky_Sphere_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_Sky_Sphere_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_Sky_Sphere.BP_Sky_Sphere_C.UpdateSunDirection
// 0x0098 (0x0098 - 0x0000)
struct BP_Sky_Sphere_C_UpdateSunDirection final
{
public:
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_1; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_2; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Sky_Sphere_C_UpdateSunDirection) == 0x000004, "Wrong alignment on BP_Sky_Sphere_C_UpdateSunDirection");
static_assert(sizeof(BP_Sky_Sphere_C_UpdateSunDirection) == 0x000098, "Wrong size on BP_Sky_Sphere_C_UpdateSunDirection");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_Less_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000004, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_BreakRotator_Roll) == 0x000014, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_BreakRotator_Pitch) == 0x000018, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_BreakRotator_Yaw) == 0x00001C, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000024, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000028, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000034, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000044, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000050, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_Abs_ReturnValue_1) == 0x000060, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000064, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_Lerp_ReturnValue) == 0x000074, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_GetClampedLinearColorValue_ReturnValue_1) == 0x000078, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_GetClampedLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_UpdateSunDirection, CallFunc_GetClampedLinearColorValue_ReturnValue_2) == 0x000088, "Member 'BP_Sky_Sphere_C_UpdateSunDirection::CallFunc_GetClampedLinearColorValue_ReturnValue_2' has a wrong offset!");

// Function BP_Sky_Sphere.BP_Sky_Sphere_C.RefreshMaterial
// 0x00F8 (0x00F8 - 0x0000)
struct BP_Sky_Sphere_C_RefreshMaterial final
{
public:
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue_1;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_1; // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue_2; // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Sky_Sphere_C_RefreshMaterial) == 0x000004, "Wrong alignment on BP_Sky_Sphere_C_RefreshMaterial");
static_assert(sizeof(BP_Sky_Sphere_C_RefreshMaterial) == 0x0000F8, "Wrong size on BP_Sky_Sphere_C_RefreshMaterial");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_Abs_ReturnValue) == 0x000000, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000004, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_Lerp_ReturnValue) == 0x000014, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_Less_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_Abs_ReturnValue_1) == 0x00001C, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000024, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_BreakRotator_Roll) == 0x000034, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_BreakRotator_Pitch) == 0x000038, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_BreakRotator_Yaw) == 0x00003C, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000040, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_MakeRotator_ReturnValue) == 0x00004C, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_BreakRotator_Roll_1) == 0x000058, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_BreakRotator_Pitch_1) == 0x00005C, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_BreakRotator_Yaw_1) == 0x000060, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000064, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_MapRangeUnclamped_ReturnValue_1) == 0x000070, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_MapRangeUnclamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000074, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_GetClampedLinearColorValue_ReturnValue_1) == 0x000084, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_GetClampedLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_GetClampedLinearColorValue_ReturnValue_2) == 0x000094, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_GetClampedLinearColorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_FClamp_ReturnValue) == 0x0000A8, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_LinearColorLerp_ReturnValue) == 0x0000AC, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x0000BC, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_IsValid_ReturnValue) == 0x0000CC, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x0000D0, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x0000DC, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Sky_Sphere_C_RefreshMaterial, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x0000E8, "Member 'BP_Sky_Sphere_C_RefreshMaterial::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");

}

