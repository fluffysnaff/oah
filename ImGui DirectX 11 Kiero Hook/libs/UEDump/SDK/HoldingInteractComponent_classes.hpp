#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HoldingInteractComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass HoldingInteractComponent.HoldingInteractComponent_C
// 0x0038 (0x00E8 - 0x00B0)
class UHoldingInteractComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UClass*>                         InteractActors;                                    // 0x00B8(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FString                                 InteractDescription;                               // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class APawn*                                  As_Player_Character;                               // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other_Actor;                                       // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HoldingInteractComponent(int32 EntryPoint);
	void EndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnActorBeginOverlap_Event_0(class AActor* OverlappedActor, class AActor* OtherActor);
	void ReceiveBeginPlay();
	void CheckCanInteract(class AActor* Actor, bool* Can_interact);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HoldingInteractComponent_C">();
	}
	static class UHoldingInteractComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHoldingInteractComponent_C>();
	}
};
static_assert(alignof(UHoldingInteractComponent_C) == 0x000008, "Wrong alignment on UHoldingInteractComponent_C");
static_assert(sizeof(UHoldingInteractComponent_C) == 0x0000E8, "Wrong size on UHoldingInteractComponent_C");
static_assert(offsetof(UHoldingInteractComponent_C, UberGraphFrame) == 0x0000B0, "Member 'UHoldingInteractComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHoldingInteractComponent_C, InteractActors) == 0x0000B8, "Member 'UHoldingInteractComponent_C::InteractActors' has a wrong offset!");
static_assert(offsetof(UHoldingInteractComponent_C, InteractDescription) == 0x0000C8, "Member 'UHoldingInteractComponent_C::InteractDescription' has a wrong offset!");
static_assert(offsetof(UHoldingInteractComponent_C, As_Player_Character) == 0x0000D8, "Member 'UHoldingInteractComponent_C::As_Player_Character' has a wrong offset!");
static_assert(offsetof(UHoldingInteractComponent_C, Other_Actor) == 0x0000E0, "Member 'UHoldingInteractComponent_C::Other_Actor' has a wrong offset!");

}

