#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerAnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass PlayerAnimBP.PlayerAnimBP_C
// 0x1C80 (0x1F40 - 0x02C0)
class UPlayerAnimBP_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x02F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x0320(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x0348(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x0370(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x0398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x03C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x03E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x0410(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x0438(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x0460(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x0488(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x04B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x04D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x0500(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0528(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x0550(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x0578(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x05A0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x0620(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x0650(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x06D0(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0700(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x07E8(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x0818(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x0898(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x08C8(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x09B0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x09E0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0A60(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0A90(0x00E8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x0B78(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0BA8(0x00B0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x0C58(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0D60(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0D80(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x0DA0(0x0108)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0EA8(0x00C0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x0F68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x0F90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x0FB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x0FE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x1008(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x1030(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x1058(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1080(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x10A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x10D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x10F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x1120(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x1148(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x1170(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x1198(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x11C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x11E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1210(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1238(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x1260(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x1288(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x12B0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x1330(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x1360(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x13E0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x1410(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x1490(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x14C0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1540(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x1570(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x15F0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1620(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x16A0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x16D0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1750(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1780(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1800(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1830(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x18B0(0x0030)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x18E0(0x0080)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1960(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1990(0x00B0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1A40(0x0108)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1B48(0x0158)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x1CA0(0x01E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1E80(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1EA8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1EC8(0x0020)()
	float                                         ForwardSpeed;                                      // 0x1EE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightSpeed;                                        // 0x1EEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ArmRotation;                                       // 0x1EF0(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Reloading_;                                        // 0x1EFC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SwitchingGun_;                                     // 0x1EFD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EFE[0x2];                                     // 0x1EFE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGunBase_C*                             GunBP;                                             // 0x1F00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BackAttach_;                                       // 0x1F08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Falling_;                                          // 0x1F09(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Crouched_;                                         // 0x1F0A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Unarmed_;                                          // 0x1F0B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Downed_;                                           // 0x1F0C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Aimed_;                                            // 0x1F0D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F0E[0x2];                                     // 0x1F0E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter_C*                     Player;                                            // 0x1F10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vaulting;                                          // 0x1F18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F19[0x3];                                     // 0x1F19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                DraggedItemLocation;                               // 0x1F1C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HeavyGrab_;                                        // 0x1F28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Dancing_;                                          // 0x1F29(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2A[0x6];                                     // 0x1F2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      PlayerEmote;                                       // 0x1F30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocallyControlled_;                                // 0x1F38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_PlayerAnimBP(int32 EntryPoint);
	void BlueprintBeginPlay();
	void AnimNotify_FootstepNoise();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PlayerAnimBP_AnimGraphNode_BlendSpacePlayer_024EF5D94F9982FCE783379F6EA7F55A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PlayerAnimBP_AnimGraphNode_TransitionResult_63D56E7E4A0B31E292484C9B46002C7E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PlayerAnimBP_AnimGraphNode_TransitionResult_B4A14E82438DAAB61A310C9840A6FA35();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PlayerAnimBP_AnimGraphNode_TransitionResult_FDAF3C00441BCE1FA2705E96F06078FD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PlayerAnimBP_AnimGraphNode_TransitionResult_63951F1A4746AE118DCE87AF4CFBA7A7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PlayerAnimBP_AnimGraphNode_TransitionResult_1F65694B445CB24B415CE7B7374A155D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PlayerAnimBP_AnimGraphNode_TransitionResult_C379C76946DC58F0E610008EC653EDEA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PlayerAnimBP_AnimGraphNode_TransitionResult_97C55CBF4AB38A623820799E148BA965();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PlayerAnimBP_AnimGraphNode_SequencePlayer_FF6C168C4CF7FACA8E832DB861308991();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PlayerAnimBP_AnimGraphNode_ModifyBone_EDDFFF4048B4C9DECCEDEB99EE888848();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PlayerAnimBP_AnimGraphNode_ModifyBone_25396E70484FABDF4D9B04915F7E412C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PlayerAnimBP_AnimGraphNode_ModifyBone_8D96A0CD4D50AA57068B0692A8DD7E89();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PlayerAnimBP_AnimGraphNode_TwoBoneIK_5693C3554A916507C20726833016F454();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerAnimBP_C">();
	}
	static class UPlayerAnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerAnimBP_C>();
	}
};
static_assert(alignof(UPlayerAnimBP_C) == 0x000010, "Wrong alignment on UPlayerAnimBP_C");
static_assert(sizeof(UPlayerAnimBP_C) == 0x001F40, "Wrong size on UPlayerAnimBP_C");
static_assert(offsetof(UPlayerAnimBP_C, UberGraphFrame) == 0x0002C0, "Member 'UPlayerAnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UPlayerAnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_37) == 0x0002F8, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_36) == 0x000320, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_35) == 0x000348, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_34) == 0x000370, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_33) == 0x000398, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_32) == 0x0003C0, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_31) == 0x0003E8, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_30) == 0x000410, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_29) == 0x000438, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_28) == 0x000460, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_27) == 0x000488, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_26) == 0x0004B0, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_25) == 0x0004D8, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_24) == 0x000500, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_23) == 0x000528, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_22) == 0x000550, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_21) == 0x000578, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SequencePlayer_13) == 0x0005A0, "Member 'UPlayerAnimBP_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_16) == 0x000620, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SequencePlayer_12) == 0x000650, "Member 'UPlayerAnimBP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_15) == 0x0006D0, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000700, "Member 'UPlayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_14) == 0x0007E8, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SequencePlayer_11) == 0x000818, "Member 'UPlayerAnimBP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_13) == 0x000898, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_BlendSpacePlayer_1) == 0x0008C8, "Member 'UPlayerAnimBP_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_12) == 0x0009B0, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SequencePlayer_10) == 0x0009E0, "Member 'UPlayerAnimBP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_11) == 0x000A60, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x000A90, "Member 'UPlayerAnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_10) == 0x000B78, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateMachine_1) == 0x000BA8, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_ModifyBone_2) == 0x000C58, "Member 'UPlayerAnimBP_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000D60, "Member 'UPlayerAnimBP_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000D80, "Member 'UPlayerAnimBP_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_ModifyBone_1) == 0x000DA0, "Member 'UPlayerAnimBP_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x000EA8, "Member 'UPlayerAnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_20) == 0x000F68, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_19) == 0x000F90, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_18) == 0x000FB8, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_17) == 0x000FE0, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_16) == 0x001008, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_15) == 0x001030, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_14) == 0x001058, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_13) == 0x001080, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_12) == 0x0010A8, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_11) == 0x0010D0, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_10) == 0x0010F8, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_9) == 0x001120, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_8) == 0x001148, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_7) == 0x001170, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_6) == 0x001198, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_5) == 0x0011C0, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_4) == 0x0011E8, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_3) == 0x001210, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_2) == 0x001238, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult_1) == 0x001260, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TransitionResult) == 0x001288, "Member 'UPlayerAnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SequencePlayer_9) == 0x0012B0, "Member 'UPlayerAnimBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_9) == 0x001330, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x001360, "Member 'UPlayerAnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_8) == 0x0013E0, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x001410, "Member 'UPlayerAnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_7) == 0x001490, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x0014C0, "Member 'UPlayerAnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_6) == 0x001540, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x001570, "Member 'UPlayerAnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_5) == 0x0015F0, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x001620, "Member 'UPlayerAnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_4) == 0x0016A0, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x0016D0, "Member 'UPlayerAnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_3) == 0x001750, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x001780, "Member 'UPlayerAnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_2) == 0x001800, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x001830, "Member 'UPlayerAnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult_1) == 0x0018B0, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SequencePlayer) == 0x0018E0, "Member 'UPlayerAnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateResult) == 0x001960, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_StateMachine) == 0x001990, "Member 'UPlayerAnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_ModifyBone) == 0x001A40, "Member 'UPlayerAnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_SaveCachedPose) == 0x001B48, "Member 'UPlayerAnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_TwoBoneIK) == 0x001CA0, "Member 'UPlayerAnimBP_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_UseCachedPose) == 0x001E80, "Member 'UPlayerAnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x001EA8, "Member 'UPlayerAnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x001EC8, "Member 'UPlayerAnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, ForwardSpeed) == 0x001EE8, "Member 'UPlayerAnimBP_C::ForwardSpeed' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, RightSpeed) == 0x001EEC, "Member 'UPlayerAnimBP_C::RightSpeed' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, ArmRotation) == 0x001EF0, "Member 'UPlayerAnimBP_C::ArmRotation' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, Reloading_) == 0x001EFC, "Member 'UPlayerAnimBP_C::Reloading_' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, SwitchingGun_) == 0x001EFD, "Member 'UPlayerAnimBP_C::SwitchingGun_' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, GunBP) == 0x001F00, "Member 'UPlayerAnimBP_C::GunBP' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, BackAttach_) == 0x001F08, "Member 'UPlayerAnimBP_C::BackAttach_' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, Falling_) == 0x001F09, "Member 'UPlayerAnimBP_C::Falling_' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, Crouched_) == 0x001F0A, "Member 'UPlayerAnimBP_C::Crouched_' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, Unarmed_) == 0x001F0B, "Member 'UPlayerAnimBP_C::Unarmed_' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, Downed_) == 0x001F0C, "Member 'UPlayerAnimBP_C::Downed_' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, Aimed_) == 0x001F0D, "Member 'UPlayerAnimBP_C::Aimed_' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, Player) == 0x001F10, "Member 'UPlayerAnimBP_C::Player' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, Vaulting) == 0x001F18, "Member 'UPlayerAnimBP_C::Vaulting' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, DraggedItemLocation) == 0x001F1C, "Member 'UPlayerAnimBP_C::DraggedItemLocation' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, HeavyGrab_) == 0x001F28, "Member 'UPlayerAnimBP_C::HeavyGrab_' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, Dancing_) == 0x001F29, "Member 'UPlayerAnimBP_C::Dancing_' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, PlayerEmote) == 0x001F30, "Member 'UPlayerAnimBP_C::PlayerEmote' has a wrong offset!");
static_assert(offsetof(UPlayerAnimBP_C, LocallyControlled_) == 0x001F38, "Member 'UPlayerAnimBP_C::LocallyControlled_' has a wrong offset!");

}

