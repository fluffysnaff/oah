#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GuardScanPoint

#include "Basic.hpp"


namespace SDK::Params
{

// Function GuardScanPoint.GuardScanPoint_C.ExecuteUbergraph_GuardScanPoint
// 0x0030 (0x0030 - 0x0000)
struct GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGuardPhone_C*                          K2Node_CustomEvent_PhoneActor;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGuardPhone_C*                          K2Node_DynamicCast_AsGuard_Phone;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint) == 0x000008, "Wrong alignment on GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint");
static_assert(sizeof(GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint) == 0x000030, "Wrong size on GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint");
static_assert(offsetof(GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint, EntryPoint) == 0x000000, "Member 'GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint, K2Node_CustomEvent_PhoneActor) == 0x000008, "Member 'GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint::K2Node_CustomEvent_PhoneActor' has a wrong offset!");
static_assert(offsetof(GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint, K2Node_Event_OtherActor) == 0x000018, "Member 'GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint, K2Node_DynamicCast_AsGuard_Phone) == 0x000020, "Member 'GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint::K2Node_DynamicCast_AsGuard_Phone' has a wrong offset!");
static_assert(offsetof(GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint, CallFunc_IsOverlappingActor_ReturnValue) == 0x000029, "Member 'GuardScanPoint_C_ExecuteUbergraph_GuardScanPoint::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");

// Function GuardScanPoint.GuardScanPoint_C.OverlapPhone
// 0x0008 (0x0008 - 0x0000)
struct GuardScanPoint_C_OverlapPhone final
{
public:
	class AGuardPhone_C*                          PhoneActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GuardScanPoint_C_OverlapPhone) == 0x000008, "Wrong alignment on GuardScanPoint_C_OverlapPhone");
static_assert(sizeof(GuardScanPoint_C_OverlapPhone) == 0x000008, "Wrong size on GuardScanPoint_C_OverlapPhone");
static_assert(offsetof(GuardScanPoint_C_OverlapPhone, PhoneActor) == 0x000000, "Member 'GuardScanPoint_C_OverlapPhone::PhoneActor' has a wrong offset!");

// Function GuardScanPoint.GuardScanPoint_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct GuardScanPoint_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GuardScanPoint_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on GuardScanPoint_C_ReceiveActorBeginOverlap");
static_assert(sizeof(GuardScanPoint_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on GuardScanPoint_C_ReceiveActorBeginOverlap");
static_assert(offsetof(GuardScanPoint_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'GuardScanPoint_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

}

