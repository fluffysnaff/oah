#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Window_Openable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Window_Openable.Window_Openable_C
// 0x0070 (0x0290 - 0x0220)
class AWindow_Openable_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDamageComponent_C*                     DamageComponent;                                   // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box1;                                              // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULookatInfoComponent_C*                 LookatInfoComponent;                               // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractComponent_C*                   InteractComponent;                                 // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Glass_bottom;                                      // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Frame_bottom;                                      // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   GlassMinustop;                                     // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Frame_top;                                         // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Locked_;                                           // 0x0278(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          Open_;                                             // 0x0279(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Opening_;                                          // 0x027A(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2551[0x1];                                     // 0x027B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OpenLocation;                                      // 0x027C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     FrameMat;                                          // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void BreakWindow();
	void BndEvt__Window_Openable_InteractComponent_K2Node_ComponentBoundEvent_0_Interact__DelegateSignature(class AActor* Player, class UPrimitiveComponent* HitComponent);
	void OpenWindowServer();
	void OpenWindowMulti(bool Param_Open_);
	void BndEvt__Window_Openable_DamageComponent_K2Node_ComponentBoundEvent_1_Damage__DelegateSignature(int32 Amount, class FName Bone, const struct FVector& HitLocation, const struct FVector& StartLocation, class AActor* Param_Instigator);
	void TopBreak();
	void BottomBreakMulti();
	void TopBreakMulti();
	void BreakGlass();
	void ExecuteUbergraph_Window_Openable(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Window_Openable_C">();
	}
	static class AWindow_Openable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AWindow_Openable_C>();
	}
};
static_assert(alignof(AWindow_Openable_C) == 0x000008, "Wrong alignment on AWindow_Openable_C");
static_assert(sizeof(AWindow_Openable_C) == 0x000290, "Wrong size on AWindow_Openable_C");
static_assert(offsetof(AWindow_Openable_C, UberGraphFrame) == 0x000220, "Member 'AWindow_Openable_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, DamageComponent) == 0x000228, "Member 'AWindow_Openable_C::DamageComponent' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, Box1) == 0x000230, "Member 'AWindow_Openable_C::Box1' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, LookatInfoComponent) == 0x000238, "Member 'AWindow_Openable_C::LookatInfoComponent' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, Box) == 0x000240, "Member 'AWindow_Openable_C::Box' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, InteractComponent) == 0x000248, "Member 'AWindow_Openable_C::InteractComponent' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, Glass_bottom) == 0x000250, "Member 'AWindow_Openable_C::Glass_bottom' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, Frame_bottom) == 0x000258, "Member 'AWindow_Openable_C::Frame_bottom' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, GlassMinustop) == 0x000260, "Member 'AWindow_Openable_C::GlassMinustop' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, Frame_top) == 0x000268, "Member 'AWindow_Openable_C::Frame_top' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, DefaultSceneRoot) == 0x000270, "Member 'AWindow_Openable_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, Locked_) == 0x000278, "Member 'AWindow_Openable_C::Locked_' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, Open_) == 0x000279, "Member 'AWindow_Openable_C::Open_' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, Opening_) == 0x00027A, "Member 'AWindow_Openable_C::Opening_' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, OpenLocation) == 0x00027C, "Member 'AWindow_Openable_C::OpenLocation' has a wrong offset!");
static_assert(offsetof(AWindow_Openable_C, FrameMat) == 0x000288, "Member 'AWindow_Openable_C::FrameMat' has a wrong offset!");

}

