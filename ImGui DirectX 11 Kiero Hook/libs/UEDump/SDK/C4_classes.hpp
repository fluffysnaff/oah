#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: C4

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PickupItem_base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass C4.C4_C
// 0x0088 (0x02E0 - 0x0258)
class AC4_C final : public APickupItem_base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_C4_C;                               // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHighlightInRangeComponent_C*           HighlightInRangeComponent;                         // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Beep;                                              // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHighlightWhenHolding_C*                HighlightWhenHolding;                              // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAlertComponent_C*                      AlertComponent;                                    // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USusItemComponent_C*                    SusItemComponent;                                  // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UToolComponent_C*                       ToolComponent;                                     // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPawnNoiseEmitterComponent*             PawnNoiseEmitter;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDamageComponent_C*                     DamageComponent;                                   // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Picked_up_;                                        // 0x02B8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpRotation;                                        // 0x02BC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExplosionRadius;                                   // 0x02C0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExplosionDamage;                                   // 0x02C4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         HitActors;                                         // 0x02C8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         Timer;                                             // 0x02D8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_C4(int32 EntryPoint);
	void ExplodeServer();
	void ActivateC4Server();
	void ActivateC4();
	void BndEvt__C4_PickupItemComponent_K2Node_ComponentBoundEvent_3_InteractHolding__DelegateSignature(class AActor* Instigator_0, class AActor* Overlap);
	void Explode();
	void BndEvt__C4_DamageComponent_K2Node_ComponentBoundEvent_2_Damage__DelegateSignature(int32 Amount, class FName Bone, const struct FVector& HitLocation, const struct FVector& StartLocation, class AActor* Instigator_0);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"C4_C">();
	}
	static class AC4_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AC4_C>();
	}
};
static_assert(alignof(AC4_C) == 0x000008, "Wrong alignment on AC4_C");
static_assert(sizeof(AC4_C) == 0x0002E0, "Wrong size on AC4_C");
static_assert(offsetof(AC4_C, UberGraphFrame_C4_C) == 0x000258, "Member 'AC4_C::UberGraphFrame_C4_C' has a wrong offset!");
static_assert(offsetof(AC4_C, HighlightInRangeComponent) == 0x000260, "Member 'AC4_C::HighlightInRangeComponent' has a wrong offset!");
static_assert(offsetof(AC4_C, Beep) == 0x000268, "Member 'AC4_C::Beep' has a wrong offset!");
static_assert(offsetof(AC4_C, HighlightWhenHolding) == 0x000270, "Member 'AC4_C::HighlightWhenHolding' has a wrong offset!");
static_assert(offsetof(AC4_C, AlertComponent) == 0x000278, "Member 'AC4_C::AlertComponent' has a wrong offset!");
static_assert(offsetof(AC4_C, SusItemComponent) == 0x000280, "Member 'AC4_C::SusItemComponent' has a wrong offset!");
static_assert(offsetof(AC4_C, Sphere) == 0x000288, "Member 'AC4_C::Sphere' has a wrong offset!");
static_assert(offsetof(AC4_C, Arrow) == 0x000290, "Member 'AC4_C::Arrow' has a wrong offset!");
static_assert(offsetof(AC4_C, PointLight) == 0x000298, "Member 'AC4_C::PointLight' has a wrong offset!");
static_assert(offsetof(AC4_C, ToolComponent) == 0x0002A0, "Member 'AC4_C::ToolComponent' has a wrong offset!");
static_assert(offsetof(AC4_C, PawnNoiseEmitter) == 0x0002A8, "Member 'AC4_C::PawnNoiseEmitter' has a wrong offset!");
static_assert(offsetof(AC4_C, DamageComponent) == 0x0002B0, "Member 'AC4_C::DamageComponent' has a wrong offset!");
static_assert(offsetof(AC4_C, Picked_up_) == 0x0002B8, "Member 'AC4_C::Picked_up_' has a wrong offset!");
static_assert(offsetof(AC4_C, UpRotation) == 0x0002BC, "Member 'AC4_C::UpRotation' has a wrong offset!");
static_assert(offsetof(AC4_C, ExplosionRadius) == 0x0002C0, "Member 'AC4_C::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(AC4_C, ExplosionDamage) == 0x0002C4, "Member 'AC4_C::ExplosionDamage' has a wrong offset!");
static_assert(offsetof(AC4_C, HitActors) == 0x0002C8, "Member 'AC4_C::HitActors' has a wrong offset!");
static_assert(offsetof(AC4_C, Timer) == 0x0002D8, "Member 'AC4_C::Timer' has a wrong offset!");

}

