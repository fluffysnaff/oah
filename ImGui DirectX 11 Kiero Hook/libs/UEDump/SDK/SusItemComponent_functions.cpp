#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SusItemComponent

#include "Basic.hpp"

#include "SusItemComponent_classes.hpp"
#include "SusItemComponent_parameters.hpp"


namespace SDK
{

// Function SusItemComponent.SusItemComponent_C.ExecuteUbergraph_SusItemComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USusItemComponent_C::ExecuteUbergraph_SusItemComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SusItemComponent_C", "ExecuteUbergraph_SusItemComponent");

	Params::SusItemComponent_C_ExecuteUbergraph_SusItemComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SusItemComponent.SusItemComponent_C.StopSusBind
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USusItemComponent_C::StopSusBind(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SusItemComponent_C", "StopSusBind");

	Params::SusItemComponent_C_StopSusBind Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SusItemComponent.SusItemComponent_C.StartSusBind
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Pickuplocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         PickupRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USusItemComponent_C::StartSusBind(class AActor* Player, const struct FVector& Pickuplocation, const struct FRotator& PickupRotation, const struct FVector& HitLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SusItemComponent_C", "StartSusBind");

	Params::SusItemComponent_C_StartSusBind Parms{};

	Parms.Player = Player;
	Parms.Pickuplocation = std::move(Pickuplocation);
	Parms.PickupRotation = std::move(PickupRotation);
	Parms.HitLocation = std::move(HitLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SusItemComponent.SusItemComponent_C.StopSus
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void USusItemComponent_C::StopSus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SusItemComponent_C", "StopSus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SusItemComponent.SusItemComponent_C.BeginSus
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void USusItemComponent_C::BeginSus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SusItemComponent_C", "BeginSus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SusItemComponent.SusItemComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void USusItemComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SusItemComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}

