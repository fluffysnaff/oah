#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPC_ammopack

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function NPC_ammopack.NPC_ammopack_C.ExecuteUbergraph_NPC_ammopack
// 0x00E0 (0x00E0 - 0x0000)
struct NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IPoliceTargetInterface_C> K2Node_DynamicCast_AsPolice_Target_Interface;      // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddAmmoInterfaceCall_DidAddAmmo_;         // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack) == 0x000008, "Wrong alignment on NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack");
static_assert(sizeof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack) == 0x0000E0, "Wrong size on NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, EntryPoint) == 0x000000, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::EntryPoint' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, Temp_bool_IsClosed_Variable) == 0x000004, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000B0, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, K2Node_CustomEvent_Actor) == 0x0000C0, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, K2Node_DynamicCast_AsPolice_Target_Interface) == 0x0000C8, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::K2Node_DynamicCast_AsPolice_Target_Interface' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, CallFunc_DoesImplementInterface_ReturnValue) == 0x0000D9, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack, CallFunc_AddAmmoInterfaceCall_DidAddAmmo_) == 0x0000DA, "Member 'NPC_ammopack_C_ExecuteUbergraph_NPC_ammopack::CallFunc_AddAmmoInterfaceCall_DidAddAmmo_' has a wrong offset!");

// Function NPC_ammopack.NPC_ammopack_C.Check player ammo
// 0x0008 (0x0008 - 0x0000)
struct NPC_ammopack_C_Check_player_ammo final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_ammopack_C_Check_player_ammo) == 0x000008, "Wrong alignment on NPC_ammopack_C_Check_player_ammo");
static_assert(sizeof(NPC_ammopack_C_Check_player_ammo) == 0x000008, "Wrong size on NPC_ammopack_C_Check_player_ammo");
static_assert(offsetof(NPC_ammopack_C_Check_player_ammo, Actor) == 0x000000, "Member 'NPC_ammopack_C_Check_player_ammo::Actor' has a wrong offset!");

// Function NPC_ammopack.NPC_ammopack_C.BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'NPC_ammopack_C_BndEvt__NPC_ammopack_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

}

