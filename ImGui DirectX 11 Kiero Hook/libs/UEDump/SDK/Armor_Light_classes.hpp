#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Armor_Light

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Armor_Light.Armor_Light_C
// 0x0050 (0x0270 - 0x0220)
class AArmor_Light_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 ArmorMesh;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            HangingMesh;                                       // 0x0238(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArmorMaxHealth;                                    // 0x0240(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthProtection_;                                 // 0x0244(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArmorHealth;                                       // 0x0248(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArmorStage;                                        // 0x024C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Destroyed_;                                        // 0x0250(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             InitiateHeal;                                      // 0x0258(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class USkeletalMesh*                          ArmorSK_mesh;                                      // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void InitiateHeal__DelegateSignature();
	void ExecuteUbergraph_Armor_Light(int32 EntryPoint);
	void HealArmor();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void DamageArmor(int32 Damage, int32* HealthDamage);
	void ChangeState(int32 State);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Armor_Light_C">();
	}
	static class AArmor_Light_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AArmor_Light_C>();
	}
};
static_assert(alignof(AArmor_Light_C) == 0x000008, "Wrong alignment on AArmor_Light_C");
static_assert(sizeof(AArmor_Light_C) == 0x000270, "Wrong size on AArmor_Light_C");
static_assert(offsetof(AArmor_Light_C, UberGraphFrame) == 0x000220, "Member 'AArmor_Light_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AArmor_Light_C, ArmorMesh) == 0x000228, "Member 'AArmor_Light_C::ArmorMesh' has a wrong offset!");
static_assert(offsetof(AArmor_Light_C, DefaultSceneRoot) == 0x000230, "Member 'AArmor_Light_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AArmor_Light_C, HangingMesh) == 0x000238, "Member 'AArmor_Light_C::HangingMesh' has a wrong offset!");
static_assert(offsetof(AArmor_Light_C, ArmorMaxHealth) == 0x000240, "Member 'AArmor_Light_C::ArmorMaxHealth' has a wrong offset!");
static_assert(offsetof(AArmor_Light_C, HealthProtection_) == 0x000244, "Member 'AArmor_Light_C::HealthProtection_' has a wrong offset!");
static_assert(offsetof(AArmor_Light_C, ArmorHealth) == 0x000248, "Member 'AArmor_Light_C::ArmorHealth' has a wrong offset!");
static_assert(offsetof(AArmor_Light_C, ArmorStage) == 0x00024C, "Member 'AArmor_Light_C::ArmorStage' has a wrong offset!");
static_assert(offsetof(AArmor_Light_C, Destroyed_) == 0x000250, "Member 'AArmor_Light_C::Destroyed_' has a wrong offset!");
static_assert(offsetof(AArmor_Light_C, InitiateHeal) == 0x000258, "Member 'AArmor_Light_C::InitiateHeal' has a wrong offset!");
static_assert(offsetof(AArmor_Light_C, ArmorSK_mesh) == 0x000268, "Member 'AArmor_Light_C::ArmorSK_mesh' has a wrong offset!");

}

