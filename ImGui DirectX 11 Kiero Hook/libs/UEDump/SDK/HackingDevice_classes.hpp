#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HackingDevice

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PickupItem_base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass HackingDevice.HackingDevice_C
// 0x0038 (0x0290 - 0x0258)
class AHackingDevice_C final : public APickupItem_base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_HackingDevice_C;                    // 0x0258(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHighlightInRangeComponent_C*           HighlightInRangeComponent;                         // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USusItemComponent_C*                    SusItemComponent;                                  // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHighlightWhenHolding_C*                HighlightWhenHolding;                              // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDuffelbagStuckComponent_C*             DuffelbagStuckComponent1;                          // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AHackingPoint_C*                        HackingPoint;                                      // 0x0288(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HackingDevice(int32 EntryPoint);
	void BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_1_DropItem__DelegateSignature(class AActor* Player);
	void SethackingPoint(class AHackingPoint_C* HackingPoint_0);
	void HackSuccess();
	void BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature(class AActor* Instigator_0, class AActor* Overlap);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HackingDevice_C">();
	}
	static class AHackingDevice_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AHackingDevice_C>();
	}
};
static_assert(alignof(AHackingDevice_C) == 0x000008, "Wrong alignment on AHackingDevice_C");
static_assert(sizeof(AHackingDevice_C) == 0x000290, "Wrong size on AHackingDevice_C");
static_assert(offsetof(AHackingDevice_C, UberGraphFrame_HackingDevice_C) == 0x000258, "Member 'AHackingDevice_C::UberGraphFrame_HackingDevice_C' has a wrong offset!");
static_assert(offsetof(AHackingDevice_C, HighlightInRangeComponent) == 0x000260, "Member 'AHackingDevice_C::HighlightInRangeComponent' has a wrong offset!");
static_assert(offsetof(AHackingDevice_C, Arrow) == 0x000268, "Member 'AHackingDevice_C::Arrow' has a wrong offset!");
static_assert(offsetof(AHackingDevice_C, SusItemComponent) == 0x000270, "Member 'AHackingDevice_C::SusItemComponent' has a wrong offset!");
static_assert(offsetof(AHackingDevice_C, HighlightWhenHolding) == 0x000278, "Member 'AHackingDevice_C::HighlightWhenHolding' has a wrong offset!");
static_assert(offsetof(AHackingDevice_C, DuffelbagStuckComponent1) == 0x000280, "Member 'AHackingDevice_C::DuffelbagStuckComponent1' has a wrong offset!");
static_assert(offsetof(AHackingDevice_C, HackingPoint) == 0x000288, "Member 'AHackingDevice_C::HackingPoint' has a wrong offset!");

}

