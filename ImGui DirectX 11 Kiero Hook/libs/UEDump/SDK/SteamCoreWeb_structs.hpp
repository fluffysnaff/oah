#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SteamCoreWeb

#include "Basic.hpp"


namespace SDK
{

// Enum SteamCoreWeb.ESteamJsonResult
// NumValues: 0x0003
enum class ESteamJsonResult : uint8
{
	Found                                    = 0,
	NotFound                                 = 1,
	ESteamJsonResult_MAX                     = 2,
};

// Enum SteamCoreWeb.ESteamValueType
// NumValues: 0x0004
enum class ESteamValueType : uint8
{
	STRING                                   = 0,
	NUMBER                                   = 1,
	BOOL                                     = 2,
	ESteamValueType_MAX                      = 3,
};

// Enum SteamCoreWeb.ESubsystemWeb
// NumValues: 0x001B
enum class ESubsystemWeb : uint8
{
	SteamCoreWeb                             = 0,
	Apps                                     = 1,
	Broadcast                                = 2,
	CheatReporting                           = 3,
	Community                                = 4,
	Econ                                     = 5,
	EconMarket                               = 6,
	Economy                                  = 7,
	GameInventory                            = 8,
	GameNotifications                        = 9,
	GameServers                              = 10,
	GameServerStats                          = 11,
	Inventory                                = 12,
	LobbyMatchmaking                         = 13,
	Leaderboards                             = 14,
	MicroTxn                                 = 15,
	News                                     = 16,
	PlayerService                            = 17,
	PublishedFile                            = 18,
	PublishedItemSearch                      = 19,
	PublishedItemVoting                      = 20,
	RemoteStorage                            = 21,
	User                                     = 22,
	UserAuth                                 = 23,
	UserStats                                = 24,
	Workshop                                 = 25,
	ESubsystemWeb_MAX                        = 26,
};

// Enum SteamCoreWeb.ESteamCoreWebLobbyType
// NumValues: 0x0005
enum class ESteamCoreWebLobbyType : uint8
{
	Private                                  = 0,
	FriendsOnly                              = 1,
	TypePublic                               = 2,
	TypeInvisible                            = 3,
	ESteamCoreWebLobbyType_MAX               = 4,
};

// Enum SteamCoreWeb.EVanityUrlType
// NumValues: 0x0004
enum class EVanityUrlType : uint8
{
	Individual                               = 0,
	Group                                    = 1,
	OfficialGameGroup                        = 2,
	EVanityUrlType_MAX                       = 3,
};

// ScriptStruct SteamCoreWeb.WebAppsGetAppList
// 0x0020 (0x0020 - 0x0000)
struct FWebAppsGetAppList final
{
public:
	class FString                                 AppID;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Name;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FWebAppsGetAppList) == 0x000008, "Wrong alignment on FWebAppsGetAppList");
static_assert(sizeof(FWebAppsGetAppList) == 0x000020, "Wrong size on FWebAppsGetAppList");
static_assert(offsetof(FWebAppsGetAppList, AppID) == 0x000000, "Member 'FWebAppsGetAppList::AppID' has a wrong offset!");
static_assert(offsetof(FWebAppsGetAppList, Name) == 0x000010, "Member 'FWebAppsGetAppList::Name' has a wrong offset!");

// ScriptStruct SteamCoreWeb.SteamCoreJson
// 0x0028 (0x0028 - 0x0000)
struct FSteamCoreJson final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 String;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Number;                                            // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Bool;                                              // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESteamValueType                               Type;                                              // 0x0025(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSteamCoreJson) == 0x000008, "Wrong alignment on FSteamCoreJson");
static_assert(sizeof(FSteamCoreJson) == 0x000028, "Wrong size on FSteamCoreJson");
static_assert(offsetof(FSteamCoreJson, Key) == 0x000000, "Member 'FSteamCoreJson::Key' has a wrong offset!");
static_assert(offsetof(FSteamCoreJson, String) == 0x000010, "Member 'FSteamCoreJson::String' has a wrong offset!");
static_assert(offsetof(FSteamCoreJson, Number) == 0x000020, "Member 'FSteamCoreJson::Number' has a wrong offset!");
static_assert(offsetof(FSteamCoreJson, Bool) == 0x000024, "Member 'FSteamCoreJson::Bool' has a wrong offset!");
static_assert(offsetof(FSteamCoreJson, Type) == 0x000025, "Member 'FSteamCoreJson::Type' has a wrong offset!");

}

