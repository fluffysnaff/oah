#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkillTreeDescription

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "SkillProgressStruct_structs.hpp"
#include "ShopItemCategory_structs.hpp"


namespace SDK::Params
{

// Function SkillTreeDescription.SkillTreeDescription_C.ExecuteUbergraph_SkillTreeDescription
// 0x00C8 (0x00C8 - 0x0000)
struct SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkillTitleUI_C*                        CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBuySkillUI_C*                          CallFunc_Create_ReturnValue_1;                     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMessagePopup_C*                        CallFunc_Create_ReturnValue_2;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShopItemCategory                             K2Node_Event_Category_1;                           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EShopItemCategory                             K2Node_Event_Category;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Event_ItemInfo;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SalePrice;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsShop_Skill_Base;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ARobberController_C*                    K2Node_DynamicCast_AsRobber_Controller;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsShop_Skill_Base_1;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillTier_Tier;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         Temp_class_Variable;                               // 0x0080(0x0010)(ReferenceParm)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         Temp_class_Variable_1;                             // 0x00A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription) == 0x000008, "Wrong alignment on SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription");
static_assert(sizeof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription) == 0x0000C8, "Wrong size on SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, EntryPoint) == 0x000000, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::EntryPoint' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_Create_ReturnValue) == 0x000010, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_Create_ReturnValue_1) == 0x000018, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_Create_ReturnValue_2) == 0x000020, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, Temp_int_Array_Index_Variable) == 0x000028, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_Add_IntInt_ReturnValue_2) == 0x000030, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, K2Node_Event_Category_1) == 0x000034, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::K2Node_Event_Category_1' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, K2Node_Event_Category) == 0x000035, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::K2Node_Event_Category' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, K2Node_Event_ItemInfo) == 0x000038, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::K2Node_Event_ItemInfo' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, K2Node_Event_SalePrice) == 0x000040, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::K2Node_Event_SalePrice' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, K2Node_ClassDynamicCast_AsShop_Skill_Base) == 0x000050, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::K2Node_ClassDynamicCast_AsShop_Skill_Base' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, K2Node_ClassDynamicCast_bSuccess) == 0x000058, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_IsLocalController_ReturnValue) == 0x000059, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, K2Node_DynamicCast_AsRobber_Controller) == 0x000060, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::K2Node_DynamicCast_AsRobber_Controller' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, K2Node_ClassDynamicCast_AsShop_Skill_Base_1) == 0x000070, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::K2Node_ClassDynamicCast_AsShop_Skill_Base_1' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, K2Node_ClassDynamicCast_bSuccess_1) == 0x000078, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_GetSkillTier_Tier) == 0x00007C, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_GetSkillTier_Tier' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, Temp_class_Variable) == 0x000080, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_AddChild_ReturnValue) == 0x000090, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_Array_Get_Item) == 0x000098, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A5, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, Temp_class_Variable_1) == 0x0000A8, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_Clamp_ReturnValue) == 0x0000BC, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_Array_Length_ReturnValue_2) == 0x0000C0, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C4, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C5, "Member 'SkillTreeDescription_C_ExecuteUbergraph_SkillTreeDescription::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.PreviewItem
// 0x0010 (0x0010 - 0x0000)
struct SkillTreeDescription_C_PreviewItem final
{
public:
	class UClass*                                 ItemInfo;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SalePrice;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillTreeDescription_C_PreviewItem) == 0x000008, "Wrong alignment on SkillTreeDescription_C_PreviewItem");
static_assert(sizeof(SkillTreeDescription_C_PreviewItem) == 0x000010, "Wrong size on SkillTreeDescription_C_PreviewItem");
static_assert(offsetof(SkillTreeDescription_C_PreviewItem, ItemInfo) == 0x000000, "Member 'SkillTreeDescription_C_PreviewItem::ItemInfo' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_PreviewItem, SalePrice) == 0x000008, "Member 'SkillTreeDescription_C_PreviewItem::SalePrice' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.DragItemFromCategory
// 0x0001 (0x0001 - 0x0000)
struct SkillTreeDescription_C_DragItemFromCategory final
{
public:
	EShopItemCategory                             Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillTreeDescription_C_DragItemFromCategory) == 0x000001, "Wrong alignment on SkillTreeDescription_C_DragItemFromCategory");
static_assert(sizeof(SkillTreeDescription_C_DragItemFromCategory) == 0x000001, "Wrong size on SkillTreeDescription_C_DragItemFromCategory");
static_assert(offsetof(SkillTreeDescription_C_DragItemFromCategory, Category) == 0x000000, "Member 'SkillTreeDescription_C_DragItemFromCategory::Category' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.ChangeCategory
// 0x0001 (0x0001 - 0x0000)
struct SkillTreeDescription_C_ChangeCategory final
{
public:
	EShopItemCategory                             Category;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillTreeDescription_C_ChangeCategory) == 0x000001, "Wrong alignment on SkillTreeDescription_C_ChangeCategory");
static_assert(sizeof(SkillTreeDescription_C_ChangeCategory) == 0x000001, "Wrong size on SkillTreeDescription_C_ChangeCategory");
static_assert(offsetof(SkillTreeDescription_C_ChangeCategory, Category) == 0x000000, "Member 'SkillTreeDescription_C_ChangeCategory::Category' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.GetText_0
// 0x0098 (0x0098 - 0x0000)
struct SkillTreeDescription_C_GetText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         Temp_class_Variable;                               // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
};
static_assert(alignof(SkillTreeDescription_C_GetText_0) == 0x000008, "Wrong alignment on SkillTreeDescription_C_GetText_0");
static_assert(sizeof(SkillTreeDescription_C_GetText_0) == 0x000098, "Wrong size on SkillTreeDescription_C_GetText_0");
static_assert(offsetof(SkillTreeDescription_C_GetText_0, ReturnValue) == 0x000000, "Member 'SkillTreeDescription_C_GetText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_0, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'SkillTreeDescription_C_GetText_0::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_0, Temp_class_Variable) == 0x000020, "Member 'SkillTreeDescription_C_GetText_0::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_0, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'SkillTreeDescription_C_GetText_0::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_0, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'SkillTreeDescription_C_GetText_0::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_0, CallFunc_Clamp_ReturnValue) == 0x000048, "Member 'SkillTreeDescription_C_GetText_0::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_0, CallFunc_IsValidClass_ReturnValue) == 0x00004C, "Member 'SkillTreeDescription_C_GetText_0::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_0, CallFunc_Conv_IntToString_ReturnValue) == 0x000050, "Member 'SkillTreeDescription_C_GetText_0::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_0, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000060, "Member 'SkillTreeDescription_C_GetText_0::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_0, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000070, "Member 'SkillTreeDescription_C_GetText_0::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'SkillTreeDescription_C_GetText_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.GetText_1
// 0x0068 (0x0068 - 0x0000)
struct SkillTreeDescription_C_GetText_1 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	TArray<class UClass*>                         Temp_class_Variable;                               // 0x0018(0x0010)(ReferenceParm)
	TArray<class UClass*>                         Temp_class_Variable_1;                             // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0018)()
};
static_assert(alignof(SkillTreeDescription_C_GetText_1) == 0x000008, "Wrong alignment on SkillTreeDescription_C_GetText_1");
static_assert(sizeof(SkillTreeDescription_C_GetText_1) == 0x000068, "Wrong size on SkillTreeDescription_C_GetText_1");
static_assert(offsetof(SkillTreeDescription_C_GetText_1, ReturnValue) == 0x000000, "Member 'SkillTreeDescription_C_GetText_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_1, Temp_class_Variable) == 0x000018, "Member 'SkillTreeDescription_C_GetText_1::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_1, Temp_class_Variable_1) == 0x000028, "Member 'SkillTreeDescription_C_GetText_1::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_1, CallFunc_Array_LastIndex_ReturnValue) == 0x000038, "Member 'SkillTreeDescription_C_GetText_1::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_1, CallFunc_Clamp_ReturnValue) == 0x00003C, "Member 'SkillTreeDescription_C_GetText_1::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_1, CallFunc_IsValidClass_ReturnValue) == 0x000040, "Member 'SkillTreeDescription_C_GetText_1::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_1, CallFunc_Array_Get_Item) == 0x000048, "Member 'SkillTreeDescription_C_GetText_1::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_1, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'SkillTreeDescription_C_GetText_1::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.GetText_2
// 0x0070 (0x0070 - 0x0000)
struct SkillTreeDescription_C_GetText_2 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
};
static_assert(alignof(SkillTreeDescription_C_GetText_2) == 0x000008, "Wrong alignment on SkillTreeDescription_C_GetText_2");
static_assert(sizeof(SkillTreeDescription_C_GetText_2) == 0x000070, "Wrong size on SkillTreeDescription_C_GetText_2");
static_assert(offsetof(SkillTreeDescription_C_GetText_2, ReturnValue) == 0x000000, "Member 'SkillTreeDescription_C_GetText_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_2, CallFunc_IsValidClass_ReturnValue) == 0x000018, "Member 'SkillTreeDescription_C_GetText_2::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_2, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'SkillTreeDescription_C_GetText_2::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_2, CallFunc_Conv_TextToString_ReturnValue) == 0x000038, "Member 'SkillTreeDescription_C_GetText_2::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_2, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'SkillTreeDescription_C_GetText_2::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_2, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'SkillTreeDescription_C_GetText_2::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.GetVisibility_0
// 0x0028 (0x0028 - 0x0000)
struct SkillTreeDescription_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         Temp_class_Variable;                               // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SkillTreeDescription_C_GetVisibility_0) == 0x000008, "Wrong alignment on SkillTreeDescription_C_GetVisibility_0");
static_assert(sizeof(SkillTreeDescription_C_GetVisibility_0) == 0x000028, "Wrong size on SkillTreeDescription_C_GetVisibility_0");
static_assert(offsetof(SkillTreeDescription_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'SkillTreeDescription_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetVisibility_0, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'SkillTreeDescription_C_GetVisibility_0::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetVisibility_0, Temp_class_Variable) == 0x000008, "Member 'SkillTreeDescription_C_GetVisibility_0::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetVisibility_0, CallFunc_IsValidClass_ReturnValue) == 0x000018, "Member 'SkillTreeDescription_C_GetVisibility_0::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetVisibility_0, CallFunc_Array_LastIndex_ReturnValue) == 0x00001C, "Member 'SkillTreeDescription_C_GetVisibility_0::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetVisibility_0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'SkillTreeDescription_C_GetVisibility_0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.GetText_3
// 0x0048 (0x0048 - 0x0000)
struct SkillTreeDescription_C_GetText_3 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
};
static_assert(alignof(SkillTreeDescription_C_GetText_3) == 0x000008, "Wrong alignment on SkillTreeDescription_C_GetText_3");
static_assert(sizeof(SkillTreeDescription_C_GetText_3) == 0x000048, "Wrong size on SkillTreeDescription_C_GetText_3");
static_assert(offsetof(SkillTreeDescription_C_GetText_3, ReturnValue) == 0x000000, "Member 'SkillTreeDescription_C_GetText_3::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_3, CallFunc_IsValidClass_ReturnValue) == 0x000018, "Member 'SkillTreeDescription_C_GetText_3::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_3, CallFunc_ToUpper_ReturnValue) == 0x000020, "Member 'SkillTreeDescription_C_GetText_3::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_3, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'SkillTreeDescription_C_GetText_3::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.GetText_4
// 0x0090 (0x0090 - 0x0000)
struct SkillTreeDescription_C_GetText_4 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         Temp_class_Variable;                               // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
};
static_assert(alignof(SkillTreeDescription_C_GetText_4) == 0x000008, "Wrong alignment on SkillTreeDescription_C_GetText_4");
static_assert(sizeof(SkillTreeDescription_C_GetText_4) == 0x000090, "Wrong size on SkillTreeDescription_C_GetText_4");
static_assert(offsetof(SkillTreeDescription_C_GetText_4, ReturnValue) == 0x000000, "Member 'SkillTreeDescription_C_GetText_4::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_4, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'SkillTreeDescription_C_GetText_4::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_4, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'SkillTreeDescription_C_GetText_4::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_4, Temp_class_Variable) == 0x000020, "Member 'SkillTreeDescription_C_GetText_4::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_4, CallFunc_IsValidClass_ReturnValue) == 0x000030, "Member 'SkillTreeDescription_C_GetText_4::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_4, CallFunc_Array_LastIndex_ReturnValue) == 0x000034, "Member 'SkillTreeDescription_C_GetText_4::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_4, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'SkillTreeDescription_C_GetText_4::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_4, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'SkillTreeDescription_C_GetText_4::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_4, CallFunc_Clamp_ReturnValue) == 0x000040, "Member 'SkillTreeDescription_C_GetText_4::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_4, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'SkillTreeDescription_C_GetText_4::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_4, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'SkillTreeDescription_C_GetText_4::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_4, CallFunc_ToUpper_ReturnValue) == 0x000068, "Member 'SkillTreeDescription_C_GetText_4::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_4, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'SkillTreeDescription_C_GetText_4::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.Get_ResearchingBox_Visibility_0
// 0x0020 (0x0020 - 0x0000)
struct SkillTreeDescription_C_Get_ResearchingBox_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindResearchingSkill_Is_researching_;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillProgressStruct                   CallFunc_FindResearchingSkill_Array_Element;       // 0x0008(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillTreeDescription_C_Get_ResearchingBox_Visibility_0) == 0x000008, "Wrong alignment on SkillTreeDescription_C_Get_ResearchingBox_Visibility_0");
static_assert(sizeof(SkillTreeDescription_C_Get_ResearchingBox_Visibility_0) == 0x000020, "Wrong size on SkillTreeDescription_C_Get_ResearchingBox_Visibility_0");
static_assert(offsetof(SkillTreeDescription_C_Get_ResearchingBox_Visibility_0, ReturnValue) == 0x000000, "Member 'SkillTreeDescription_C_Get_ResearchingBox_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_Get_ResearchingBox_Visibility_0, CallFunc_FindResearchingSkill_Is_researching_) == 0x000001, "Member 'SkillTreeDescription_C_Get_ResearchingBox_Visibility_0::CallFunc_FindResearchingSkill_Is_researching_' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_Get_ResearchingBox_Visibility_0, CallFunc_FindResearchingSkill_Array_Element) == 0x000008, "Member 'SkillTreeDescription_C_Get_ResearchingBox_Visibility_0::CallFunc_FindResearchingSkill_Array_Element' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.Get_StartResearchBox_Visibility_0
// 0x0020 (0x0020 - 0x0000)
struct SkillTreeDescription_C_Get_StartResearchBox_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FindResearchingSkill_Is_researching_;     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillProgressStruct                   CallFunc_FindResearchingSkill_Array_Element;       // 0x0008(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillTreeDescription_C_Get_StartResearchBox_Visibility_0) == 0x000008, "Wrong alignment on SkillTreeDescription_C_Get_StartResearchBox_Visibility_0");
static_assert(sizeof(SkillTreeDescription_C_Get_StartResearchBox_Visibility_0) == 0x000020, "Wrong size on SkillTreeDescription_C_Get_StartResearchBox_Visibility_0");
static_assert(offsetof(SkillTreeDescription_C_Get_StartResearchBox_Visibility_0, ReturnValue) == 0x000000, "Member 'SkillTreeDescription_C_Get_StartResearchBox_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_Get_StartResearchBox_Visibility_0, CallFunc_IsValidClass_ReturnValue) == 0x000001, "Member 'SkillTreeDescription_C_Get_StartResearchBox_Visibility_0::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_Get_StartResearchBox_Visibility_0, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000002, "Member 'SkillTreeDescription_C_Get_StartResearchBox_Visibility_0::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_Get_StartResearchBox_Visibility_0, CallFunc_FindResearchingSkill_Is_researching_) == 0x000003, "Member 'SkillTreeDescription_C_Get_StartResearchBox_Visibility_0::CallFunc_FindResearchingSkill_Is_researching_' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_Get_StartResearchBox_Visibility_0, CallFunc_FindResearchingSkill_Array_Element) == 0x000008, "Member 'SkillTreeDescription_C_Get_StartResearchBox_Visibility_0::CallFunc_FindResearchingSkill_Array_Element' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.GetPercent_0
// 0x0028 (0x0028 - 0x0000)
struct SkillTreeDescription_C_GetPercent_0 final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindResearchingSkill_Is_researching_;     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillProgressStruct                   CallFunc_FindResearchingSkill_Array_Element;       // 0x0008(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SkillTreeDescription_C_GetPercent_0) == 0x000008, "Wrong alignment on SkillTreeDescription_C_GetPercent_0");
static_assert(sizeof(SkillTreeDescription_C_GetPercent_0) == 0x000028, "Wrong size on SkillTreeDescription_C_GetPercent_0");
static_assert(offsetof(SkillTreeDescription_C_GetPercent_0, ReturnValue) == 0x000000, "Member 'SkillTreeDescription_C_GetPercent_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetPercent_0, CallFunc_FindResearchingSkill_Is_researching_) == 0x000004, "Member 'SkillTreeDescription_C_GetPercent_0::CallFunc_FindResearchingSkill_Is_researching_' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetPercent_0, CallFunc_FindResearchingSkill_Array_Element) == 0x000008, "Member 'SkillTreeDescription_C_GetPercent_0::CallFunc_FindResearchingSkill_Array_Element' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetPercent_0, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'SkillTreeDescription_C_GetPercent_0::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.GetColorAndOpacity_0
// 0x0080 (0x0080 - 0x0000)
struct SkillTreeDescription_C_GetColorAndOpacity_0 final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0028)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0028(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0050(0x0028)()
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SkillTreeDescription_C_GetColorAndOpacity_0) == 0x000008, "Wrong alignment on SkillTreeDescription_C_GetColorAndOpacity_0");
static_assert(sizeof(SkillTreeDescription_C_GetColorAndOpacity_0) == 0x000080, "Wrong size on SkillTreeDescription_C_GetColorAndOpacity_0");
static_assert(offsetof(SkillTreeDescription_C_GetColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'SkillTreeDescription_C_GetColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetColorAndOpacity_0, K2Node_MakeStruct_SlateColor) == 0x000028, "Member 'SkillTreeDescription_C_GetColorAndOpacity_0::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetColorAndOpacity_0, K2Node_MakeStruct_SlateColor_1) == 0x000050, "Member 'SkillTreeDescription_C_GetColorAndOpacity_0::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetColorAndOpacity_0, CallFunc_IsValidClass_ReturnValue) == 0x000078, "Member 'SkillTreeDescription_C_GetColorAndOpacity_0::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetColorAndOpacity_0, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000079, "Member 'SkillTreeDescription_C_GetColorAndOpacity_0::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.GetVisibility_1
// 0x0003 (0x0003 - 0x0000)
struct SkillTreeDescription_C_GetVisibility_1 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SkillTreeDescription_C_GetVisibility_1) == 0x000001, "Wrong alignment on SkillTreeDescription_C_GetVisibility_1");
static_assert(sizeof(SkillTreeDescription_C_GetVisibility_1) == 0x000003, "Wrong size on SkillTreeDescription_C_GetVisibility_1");
static_assert(offsetof(SkillTreeDescription_C_GetVisibility_1, ReturnValue) == 0x000000, "Member 'SkillTreeDescription_C_GetVisibility_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetVisibility_1, CallFunc_IsValidClass_ReturnValue) == 0x000001, "Member 'SkillTreeDescription_C_GetVisibility_1::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetVisibility_1, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000002, "Member 'SkillTreeDescription_C_GetVisibility_1::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.GetText_5
// 0x0058 (0x0058 - 0x0000)
struct SkillTreeDescription_C_GetText_5 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
};
static_assert(alignof(SkillTreeDescription_C_GetText_5) == 0x000008, "Wrong alignment on SkillTreeDescription_C_GetText_5");
static_assert(sizeof(SkillTreeDescription_C_GetText_5) == 0x000058, "Wrong size on SkillTreeDescription_C_GetText_5");
static_assert(offsetof(SkillTreeDescription_C_GetText_5, ReturnValue) == 0x000000, "Member 'SkillTreeDescription_C_GetText_5::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_5, CallFunc_IsValidClass_ReturnValue) == 0x000018, "Member 'SkillTreeDescription_C_GetText_5::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_5, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'SkillTreeDescription_C_GetText_5::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_5, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'SkillTreeDescription_C_GetText_5::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetText_5, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'SkillTreeDescription_C_GetText_5::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function SkillTreeDescription.SkillTreeDescription_C.GetVisibility_2
// 0x000C (0x000C - 0x0000)
struct SkillTreeDescription_C_GetVisibility_2 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSkillTier_Tier;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SkillTreeDescription_C_GetVisibility_2) == 0x000004, "Wrong alignment on SkillTreeDescription_C_GetVisibility_2");
static_assert(sizeof(SkillTreeDescription_C_GetVisibility_2) == 0x00000C, "Wrong size on SkillTreeDescription_C_GetVisibility_2");
static_assert(offsetof(SkillTreeDescription_C_GetVisibility_2, ReturnValue) == 0x000000, "Member 'SkillTreeDescription_C_GetVisibility_2::ReturnValue' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetVisibility_2, CallFunc_GetSkillTier_Tier) == 0x000004, "Member 'SkillTreeDescription_C_GetVisibility_2::CallFunc_GetSkillTier_Tier' has a wrong offset!");
static_assert(offsetof(SkillTreeDescription_C_GetVisibility_2, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'SkillTreeDescription_C_GetVisibility_2::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

}

