#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HackingDevice

#include "Basic.hpp"

#include "HackingDevice_classes.hpp"
#include "HackingDevice_parameters.hpp"


namespace SDK
{

// Function HackingDevice.HackingDevice_C.ExecuteUbergraph_HackingDevice
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHackingDevice_C::ExecuteUbergraph_HackingDevice(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HackingDevice_C", "ExecuteUbergraph_HackingDevice");

	Params::HackingDevice_C_ExecuteUbergraph_HackingDevice Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HackingDevice.HackingDevice_C.BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_1_DropItem__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHackingDevice_C::BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_1_DropItem__DelegateSignature(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HackingDevice_C", "BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_1_DropItem__DelegateSignature");

	Params::HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_1_DropItem__DelegateSignature Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HackingDevice.HackingDevice_C.SethackingPoint
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AHackingPoint_C*                  HackingPoint_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHackingDevice_C::SethackingPoint(class AHackingPoint_C* HackingPoint_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HackingDevice_C", "SethackingPoint");

	Params::HackingDevice_C_SethackingPoint Parms{};

	Parms.HackingPoint_0 = HackingPoint_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HackingDevice.HackingDevice_C.HackSuccess
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AHackingDevice_C::HackSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HackingDevice_C", "HackSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HackingDevice.HackingDevice_C.BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Overlap                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AHackingDevice_C::BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature(class AActor* Instigator_0, class AActor* Overlap)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HackingDevice_C", "BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature");

	Params::HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature Parms{};

	Parms.Instigator_0 = Instigator_0;
	Parms.Overlap = Overlap;

	UObject::ProcessEvent(Func, &Parms);
}

}

