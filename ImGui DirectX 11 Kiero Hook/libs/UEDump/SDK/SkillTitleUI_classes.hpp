#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SkillTitleUI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SkillTitleUI.SkillTitleUI_C
// 0x0050 (0x02B0 - 0x0260)
class USkillTitleUI_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_110;                                        // 0x0268(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x0270(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_0;                                       // 0x0278(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         SkillTier;                                         // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SkillDescription;                                  // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UClass*                                 Skill;                                             // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ARobberController_C*                    As_Robber_Controller;                              // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentTier;                                       // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SkillTitleUI(int32 EntryPoint);
	void Construct();
	class FText GetText_0();
	class FText GetText_1();
	struct FLinearColor GetContentColorAndOpacity_0();
	struct FLinearColor Get_Rarity_ColorAndOpacity_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SkillTitleUI_C">();
	}
	static class USkillTitleUI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkillTitleUI_C>();
	}
};
static_assert(alignof(USkillTitleUI_C) == 0x000008, "Wrong alignment on USkillTitleUI_C");
static_assert(sizeof(USkillTitleUI_C) == 0x0002B0, "Wrong size on USkillTitleUI_C");
static_assert(offsetof(USkillTitleUI_C, UberGraphFrame) == 0x000260, "Member 'USkillTitleUI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USkillTitleUI_C, Border_110) == 0x000268, "Member 'USkillTitleUI_C::Border_110' has a wrong offset!");
static_assert(offsetof(USkillTitleUI_C, TextBlock) == 0x000270, "Member 'USkillTitleUI_C::TextBlock' has a wrong offset!");
static_assert(offsetof(USkillTitleUI_C, TextBlock_0) == 0x000278, "Member 'USkillTitleUI_C::TextBlock_0' has a wrong offset!");
static_assert(offsetof(USkillTitleUI_C, SkillTier) == 0x000280, "Member 'USkillTitleUI_C::SkillTier' has a wrong offset!");
static_assert(offsetof(USkillTitleUI_C, SkillDescription) == 0x000288, "Member 'USkillTitleUI_C::SkillDescription' has a wrong offset!");
static_assert(offsetof(USkillTitleUI_C, Skill) == 0x000298, "Member 'USkillTitleUI_C::Skill' has a wrong offset!");
static_assert(offsetof(USkillTitleUI_C, As_Robber_Controller) == 0x0002A0, "Member 'USkillTitleUI_C::As_Robber_Controller' has a wrong offset!");
static_assert(offsetof(USkillTitleUI_C, CurrentTier) == 0x0002A8, "Member 'USkillTitleUI_C::CurrentTier' has a wrong offset!");

}

