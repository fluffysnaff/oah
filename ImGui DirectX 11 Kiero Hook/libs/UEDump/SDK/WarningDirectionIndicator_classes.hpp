#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WarningDirectionIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WarningDirectionIndicator.WarningDirectionIndicator_C
// 0x0050 (0x02B0 - 0x0260)
class UWarningDirectionIndicator_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       WarningFade;                                       // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       WarningAnim;                                       // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UProgressBar*                           WarningFiller_left;                                // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           WarningFillerRight;                                // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                WarningRotationBorder;                             // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AActor*                                 WarningActor;                                      // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class APlayerCharacter_C*                     Player;                                            // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         WarningTime;                                       // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         CurrentTime;                                       // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Percent;                                           // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WarningDirectionIndicator(int32 EntryPoint);
	void RemoveWhenSpotted(class APawn* Player_0);
	void FadeAway();
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WarningDirectionIndicator_C">();
	}
	static class UWarningDirectionIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWarningDirectionIndicator_C>();
	}
};
static_assert(alignof(UWarningDirectionIndicator_C) == 0x000008, "Wrong alignment on UWarningDirectionIndicator_C");
static_assert(sizeof(UWarningDirectionIndicator_C) == 0x0002B0, "Wrong size on UWarningDirectionIndicator_C");
static_assert(offsetof(UWarningDirectionIndicator_C, UberGraphFrame) == 0x000260, "Member 'UWarningDirectionIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWarningDirectionIndicator_C, WarningFade) == 0x000268, "Member 'UWarningDirectionIndicator_C::WarningFade' has a wrong offset!");
static_assert(offsetof(UWarningDirectionIndicator_C, WarningAnim) == 0x000270, "Member 'UWarningDirectionIndicator_C::WarningAnim' has a wrong offset!");
static_assert(offsetof(UWarningDirectionIndicator_C, WarningFiller_left) == 0x000278, "Member 'UWarningDirectionIndicator_C::WarningFiller_left' has a wrong offset!");
static_assert(offsetof(UWarningDirectionIndicator_C, WarningFillerRight) == 0x000280, "Member 'UWarningDirectionIndicator_C::WarningFillerRight' has a wrong offset!");
static_assert(offsetof(UWarningDirectionIndicator_C, WarningRotationBorder) == 0x000288, "Member 'UWarningDirectionIndicator_C::WarningRotationBorder' has a wrong offset!");
static_assert(offsetof(UWarningDirectionIndicator_C, WarningActor) == 0x000290, "Member 'UWarningDirectionIndicator_C::WarningActor' has a wrong offset!");
static_assert(offsetof(UWarningDirectionIndicator_C, Player) == 0x000298, "Member 'UWarningDirectionIndicator_C::Player' has a wrong offset!");
static_assert(offsetof(UWarningDirectionIndicator_C, WarningTime) == 0x0002A0, "Member 'UWarningDirectionIndicator_C::WarningTime' has a wrong offset!");
static_assert(offsetof(UWarningDirectionIndicator_C, CurrentTime) == 0x0002A4, "Member 'UWarningDirectionIndicator_C::CurrentTime' has a wrong offset!");
static_assert(offsetof(UWarningDirectionIndicator_C, Percent) == 0x0002A8, "Member 'UWarningDirectionIndicator_C::Percent' has a wrong offset!");

}

