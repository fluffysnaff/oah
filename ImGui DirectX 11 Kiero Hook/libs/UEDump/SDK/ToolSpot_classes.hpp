#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ToolSpot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ToolSpot.ToolSpot_C
// 0x0038 (0x0258 - 0x0220)
class AToolSpot_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPhysicsHandleComponent*                PhysicsHandle;                                     // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Tool;                                              // 0x0240(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         SpotHealth;                                        // 0x0248(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         MaxHealth;                                         // 0x024C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToolAttached_;                                     // 0x0250(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OwnerDamage;                                       // 0x0254(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ToolSpot(int32 EntryPoint);
	void DetachToolServer();
	void AttachToolServer(class AActor* Actor, class UPrimitiveComponent* Component, class AActor* Player);
	void LooseInstantHealth(int32 Amount);
	void ReceiveActorEndOverlap(class AActor* OtherActor);
	void LooseHealth(int32 Amount);
	void BndEvt__DrillSpot_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void UserConstructionScript();
	void GivePlayerImmunity(class AActor* Player);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ToolSpot_C">();
	}
	static class AToolSpot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AToolSpot_C>();
	}
};
static_assert(alignof(AToolSpot_C) == 0x000008, "Wrong alignment on AToolSpot_C");
static_assert(sizeof(AToolSpot_C) == 0x000258, "Wrong size on AToolSpot_C");
static_assert(offsetof(AToolSpot_C, UberGraphFrame) == 0x000220, "Member 'AToolSpot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AToolSpot_C, PhysicsHandle) == 0x000228, "Member 'AToolSpot_C::PhysicsHandle' has a wrong offset!");
static_assert(offsetof(AToolSpot_C, Box) == 0x000230, "Member 'AToolSpot_C::Box' has a wrong offset!");
static_assert(offsetof(AToolSpot_C, DefaultSceneRoot) == 0x000238, "Member 'AToolSpot_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AToolSpot_C, Tool) == 0x000240, "Member 'AToolSpot_C::Tool' has a wrong offset!");
static_assert(offsetof(AToolSpot_C, SpotHealth) == 0x000248, "Member 'AToolSpot_C::SpotHealth' has a wrong offset!");
static_assert(offsetof(AToolSpot_C, MaxHealth) == 0x00024C, "Member 'AToolSpot_C::MaxHealth' has a wrong offset!");
static_assert(offsetof(AToolSpot_C, ToolAttached_) == 0x000250, "Member 'AToolSpot_C::ToolAttached_' has a wrong offset!");
static_assert(offsetof(AToolSpot_C, OwnerDamage) == 0x000254, "Member 'AToolSpot_C::OwnerDamage' has a wrong offset!");

}

