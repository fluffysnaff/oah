#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WarningDirectionIndicator

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WarningDirectionIndicator.WarningDirectionIndicator_C.ExecuteUbergraph_WarningDirectionIndicator
// 0x00E8 (0x00E8 - 0x0000)
struct WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APawn* Player)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpotPlayerComponent_C*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpotPlayerComponent_C*                 CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SpotTimeDistance_ReturnValue;             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Player;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator) == 0x000008, "Wrong alignment on WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator");
static_assert(sizeof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator) == 0x0000E8, "Wrong size on WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, EntryPoint) == 0x000000, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, Temp_bool_IsClosed_Variable) == 0x000014, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, Temp_bool_Has_Been_Initd_Variable) == 0x000015, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, Temp_bool_Has_Been_Initd_Variable_1) == 0x000016, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, K2Node_Event_MyGeometry) == 0x000018, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, K2Node_Event_InDeltaTime) == 0x000050, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_GetControlRotation_ReturnValue) == 0x000054, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_BreakRotator_Roll) == 0x00006C, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_BreakRotator_Pitch) == 0x000070, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_BreakRotator_Yaw) == 0x000074, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000078, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_FindLookAtRotation_ReturnValue) == 0x000084, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_BreakRotator_Roll_1) == 0x000090, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_BreakRotator_Pitch_1) == 0x000094, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_BreakRotator_Yaw_1) == 0x000098, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00009C, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000A0, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_PlayAnimation_ReturnValue) == 0x0000A8, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, Temp_bool_IsClosed_Variable_1) == 0x0000B0, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000B4, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000B8, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_GetComponentByClass_ReturnValue) == 0x0000C0, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000C8, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_SpotTimeDistance_ReturnValue) == 0x0000D4, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_SpotTimeDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, K2Node_CustomEvent_Player) == 0x0000D8, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000E0, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000E4, "Member 'WarningDirectionIndicator_C_ExecuteUbergraph_WarningDirectionIndicator::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function WarningDirectionIndicator.WarningDirectionIndicator_C.RemoveWhenSpotted
// 0x0008 (0x0008 - 0x0000)
struct WarningDirectionIndicator_C_RemoveWhenSpotted final
{
public:
	class APawn*                                  Player_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WarningDirectionIndicator_C_RemoveWhenSpotted) == 0x000008, "Wrong alignment on WarningDirectionIndicator_C_RemoveWhenSpotted");
static_assert(sizeof(WarningDirectionIndicator_C_RemoveWhenSpotted) == 0x000008, "Wrong size on WarningDirectionIndicator_C_RemoveWhenSpotted");
static_assert(offsetof(WarningDirectionIndicator_C_RemoveWhenSpotted, Player_0) == 0x000000, "Member 'WarningDirectionIndicator_C_RemoveWhenSpotted::Player_0' has a wrong offset!");

// Function WarningDirectionIndicator.WarningDirectionIndicator_C.Tick
// 0x003C (0x003C - 0x0000)
struct WarningDirectionIndicator_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WarningDirectionIndicator_C_Tick) == 0x000004, "Wrong alignment on WarningDirectionIndicator_C_Tick");
static_assert(sizeof(WarningDirectionIndicator_C_Tick) == 0x00003C, "Wrong size on WarningDirectionIndicator_C_Tick");
static_assert(offsetof(WarningDirectionIndicator_C_Tick, MyGeometry) == 0x000000, "Member 'WarningDirectionIndicator_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WarningDirectionIndicator_C_Tick, InDeltaTime) == 0x000038, "Member 'WarningDirectionIndicator_C_Tick::InDeltaTime' has a wrong offset!");

}

