#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HoldingInteractComponent

#include "Basic.hpp"

#include "HoldingInteractComponent_classes.hpp"
#include "HoldingInteractComponent_parameters.hpp"


namespace SDK
{

// Function HoldingInteractComponent.HoldingInteractComponent_C.ExecuteUbergraph_HoldingInteractComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHoldingInteractComponent_C::ExecuteUbergraph_HoldingInteractComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HoldingInteractComponent_C", "ExecuteUbergraph_HoldingInteractComponent");

	Params::HoldingInteractComponent_C_ExecuteUbergraph_HoldingInteractComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HoldingInteractComponent.HoldingInteractComponent_C.EndOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHoldingInteractComponent_C::EndOverlap(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HoldingInteractComponent_C", "EndOverlap");

	Params::HoldingInteractComponent_C_EndOverlap Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HoldingInteractComponent.HoldingInteractComponent_C.OnActorBeginOverlap_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlappedActor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHoldingInteractComponent_C::OnActorBeginOverlap_Event_0(class AActor* OverlappedActor, class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HoldingInteractComponent_C", "OnActorBeginOverlap_Event_0");

	Params::HoldingInteractComponent_C_OnActorBeginOverlap_Event_0 Parms{};

	Parms.OverlappedActor = OverlappedActor;
	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HoldingInteractComponent.HoldingInteractComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UHoldingInteractComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HoldingInteractComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HoldingInteractComponent.HoldingInteractComponent_C.CheckCanInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Can_interact                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHoldingInteractComponent_C::CheckCanInteract(class AActor* Actor, bool* Can_interact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HoldingInteractComponent_C", "CheckCanInteract");

	Params::HoldingInteractComponent_C_CheckCanInteract Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Can_interact != nullptr)
		*Can_interact = Parms.Can_interact;
}

}

