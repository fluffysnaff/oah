#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AdvancedSteamSessions

#include "Basic.hpp"

#include "AdvancedSessions_structs.hpp"
#include "AdvancedSteamSessions_structs.hpp"


namespace SDK::Params
{

// Function AdvancedSteamSessions.AdvancedSteamFriendsLibrary.CreateSteamIDFromString
// 0x0030 (0x0030 - 0x0000)
struct AdvancedSteamFriendsLibrary_CreateSteamIDFromString final
{
public:
	class FString                                 SteamID64;                                         // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBPUniqueNetId                         ReturnValue;                                       // 0x0010(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AdvancedSteamFriendsLibrary_CreateSteamIDFromString) == 0x000008, "Wrong alignment on AdvancedSteamFriendsLibrary_CreateSteamIDFromString");
static_assert(sizeof(AdvancedSteamFriendsLibrary_CreateSteamIDFromString) == 0x000030, "Wrong size on AdvancedSteamFriendsLibrary_CreateSteamIDFromString");
static_assert(offsetof(AdvancedSteamFriendsLibrary_CreateSteamIDFromString, SteamID64) == 0x000000, "Member 'AdvancedSteamFriendsLibrary_CreateSteamIDFromString::SteamID64' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_CreateSteamIDFromString, ReturnValue) == 0x000010, "Member 'AdvancedSteamFriendsLibrary_CreateSteamIDFromString::ReturnValue' has a wrong offset!");

// Function AdvancedSteamSessions.AdvancedSteamFriendsLibrary.FilterText
// 0x0050 (0x0050 - 0x0000)
struct AdvancedSteamFriendsLibrary_FilterText final
{
public:
	class FString                                 TextToFilter;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EBPTextFilteringContext                       Context;                                           // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPUniqueNetId                         TextSourceID;                                      // 0x0018(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
	class FString                                 FilteredText;                                      // 0x0038(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AdvancedSteamFriendsLibrary_FilterText) == 0x000008, "Wrong alignment on AdvancedSteamFriendsLibrary_FilterText");
static_assert(sizeof(AdvancedSteamFriendsLibrary_FilterText) == 0x000050, "Wrong size on AdvancedSteamFriendsLibrary_FilterText");
static_assert(offsetof(AdvancedSteamFriendsLibrary_FilterText, TextToFilter) == 0x000000, "Member 'AdvancedSteamFriendsLibrary_FilterText::TextToFilter' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_FilterText, Context) == 0x000010, "Member 'AdvancedSteamFriendsLibrary_FilterText::Context' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_FilterText, TextSourceID) == 0x000018, "Member 'AdvancedSteamFriendsLibrary_FilterText::TextSourceID' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_FilterText, FilteredText) == 0x000038, "Member 'AdvancedSteamFriendsLibrary_FilterText::FilteredText' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_FilterText, ReturnValue) == 0x000048, "Member 'AdvancedSteamFriendsLibrary_FilterText::ReturnValue' has a wrong offset!");

// Function AdvancedSteamSessions.AdvancedSteamFriendsLibrary.GetFriendSteamLevel
// 0x0028 (0x0028 - 0x0000)
struct AdvancedSteamFriendsLibrary_GetFriendSteamLevel final
{
public:
	struct FBPUniqueNetId                         UniqueNetId;                                       // 0x0000(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AdvancedSteamFriendsLibrary_GetFriendSteamLevel) == 0x000008, "Wrong alignment on AdvancedSteamFriendsLibrary_GetFriendSteamLevel");
static_assert(sizeof(AdvancedSteamFriendsLibrary_GetFriendSteamLevel) == 0x000028, "Wrong size on AdvancedSteamFriendsLibrary_GetFriendSteamLevel");
static_assert(offsetof(AdvancedSteamFriendsLibrary_GetFriendSteamLevel, UniqueNetId) == 0x000000, "Member 'AdvancedSteamFriendsLibrary_GetFriendSteamLevel::UniqueNetId' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_GetFriendSteamLevel, ReturnValue) == 0x000020, "Member 'AdvancedSteamFriendsLibrary_GetFriendSteamLevel::ReturnValue' has a wrong offset!");

// Function AdvancedSteamSessions.AdvancedSteamFriendsLibrary.GetLocalSteamIDFromSteam
// 0x0020 (0x0020 - 0x0000)
struct AdvancedSteamFriendsLibrary_GetLocalSteamIDFromSteam final
{
public:
	struct FBPUniqueNetId                         ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AdvancedSteamFriendsLibrary_GetLocalSteamIDFromSteam) == 0x000008, "Wrong alignment on AdvancedSteamFriendsLibrary_GetLocalSteamIDFromSteam");
static_assert(sizeof(AdvancedSteamFriendsLibrary_GetLocalSteamIDFromSteam) == 0x000020, "Wrong size on AdvancedSteamFriendsLibrary_GetLocalSteamIDFromSteam");
static_assert(offsetof(AdvancedSteamFriendsLibrary_GetLocalSteamIDFromSteam, ReturnValue) == 0x000000, "Member 'AdvancedSteamFriendsLibrary_GetLocalSteamIDFromSteam::ReturnValue' has a wrong offset!");

// Function AdvancedSteamSessions.AdvancedSteamFriendsLibrary.GetSteamFriendAvatar
// 0x0030 (0x0030 - 0x0000)
struct AdvancedSteamFriendsLibrary_GetSteamFriendAvatar final
{
public:
	struct FBPUniqueNetId                         UniqueNetId;                                       // 0x0000(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
	EBlueprintAsyncResultSwitch                   Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESteamAvatarSize                              AvatarSize;                                        // 0x0021(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AdvancedSteamFriendsLibrary_GetSteamFriendAvatar) == 0x000008, "Wrong alignment on AdvancedSteamFriendsLibrary_GetSteamFriendAvatar");
static_assert(sizeof(AdvancedSteamFriendsLibrary_GetSteamFriendAvatar) == 0x000030, "Wrong size on AdvancedSteamFriendsLibrary_GetSteamFriendAvatar");
static_assert(offsetof(AdvancedSteamFriendsLibrary_GetSteamFriendAvatar, UniqueNetId) == 0x000000, "Member 'AdvancedSteamFriendsLibrary_GetSteamFriendAvatar::UniqueNetId' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_GetSteamFriendAvatar, Result) == 0x000020, "Member 'AdvancedSteamFriendsLibrary_GetSteamFriendAvatar::Result' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_GetSteamFriendAvatar, AvatarSize) == 0x000021, "Member 'AdvancedSteamFriendsLibrary_GetSteamFriendAvatar::AvatarSize' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_GetSteamFriendAvatar, ReturnValue) == 0x000028, "Member 'AdvancedSteamFriendsLibrary_GetSteamFriendAvatar::ReturnValue' has a wrong offset!");

// Function AdvancedSteamSessions.AdvancedSteamFriendsLibrary.GetSteamFriendGamePlayed
// 0x0028 (0x0028 - 0x0000)
struct AdvancedSteamFriendsLibrary_GetSteamFriendGamePlayed final
{
public:
	struct FBPUniqueNetId                         UniqueNetId;                                       // 0x0000(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
	EBlueprintResultSwitch                        Result;                                            // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AppID;                                             // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AdvancedSteamFriendsLibrary_GetSteamFriendGamePlayed) == 0x000008, "Wrong alignment on AdvancedSteamFriendsLibrary_GetSteamFriendGamePlayed");
static_assert(sizeof(AdvancedSteamFriendsLibrary_GetSteamFriendGamePlayed) == 0x000028, "Wrong size on AdvancedSteamFriendsLibrary_GetSteamFriendGamePlayed");
static_assert(offsetof(AdvancedSteamFriendsLibrary_GetSteamFriendGamePlayed, UniqueNetId) == 0x000000, "Member 'AdvancedSteamFriendsLibrary_GetSteamFriendGamePlayed::UniqueNetId' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_GetSteamFriendGamePlayed, Result) == 0x000020, "Member 'AdvancedSteamFriendsLibrary_GetSteamFriendGamePlayed::Result' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_GetSteamFriendGamePlayed, AppID) == 0x000024, "Member 'AdvancedSteamFriendsLibrary_GetSteamFriendGamePlayed::AppID' has a wrong offset!");

// Function AdvancedSteamSessions.AdvancedSteamFriendsLibrary.GetSteamGroups
// 0x0010 (0x0010 - 0x0000)
struct AdvancedSteamFriendsLibrary_GetSteamGroups final
{
public:
	TArray<struct FBPSteamGroupInfo>              SteamGroups;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(AdvancedSteamFriendsLibrary_GetSteamGroups) == 0x000008, "Wrong alignment on AdvancedSteamFriendsLibrary_GetSteamGroups");
static_assert(sizeof(AdvancedSteamFriendsLibrary_GetSteamGroups) == 0x000010, "Wrong size on AdvancedSteamFriendsLibrary_GetSteamGroups");
static_assert(offsetof(AdvancedSteamFriendsLibrary_GetSteamGroups, SteamGroups) == 0x000000, "Member 'AdvancedSteamFriendsLibrary_GetSteamGroups::SteamGroups' has a wrong offset!");

// Function AdvancedSteamSessions.AdvancedSteamFriendsLibrary.GetSteamPersonaName
// 0x0030 (0x0030 - 0x0000)
struct AdvancedSteamFriendsLibrary_GetSteamPersonaName final
{
public:
	struct FBPUniqueNetId                         UniqueNetId;                                       // 0x0000(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AdvancedSteamFriendsLibrary_GetSteamPersonaName) == 0x000008, "Wrong alignment on AdvancedSteamFriendsLibrary_GetSteamPersonaName");
static_assert(sizeof(AdvancedSteamFriendsLibrary_GetSteamPersonaName) == 0x000030, "Wrong size on AdvancedSteamFriendsLibrary_GetSteamPersonaName");
static_assert(offsetof(AdvancedSteamFriendsLibrary_GetSteamPersonaName, UniqueNetId) == 0x000000, "Member 'AdvancedSteamFriendsLibrary_GetSteamPersonaName::UniqueNetId' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_GetSteamPersonaName, ReturnValue) == 0x000020, "Member 'AdvancedSteamFriendsLibrary_GetSteamPersonaName::ReturnValue' has a wrong offset!");

// Function AdvancedSteamSessions.AdvancedSteamFriendsLibrary.InitTextFiltering
// 0x0001 (0x0001 - 0x0000)
struct AdvancedSteamFriendsLibrary_InitTextFiltering final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AdvancedSteamFriendsLibrary_InitTextFiltering) == 0x000001, "Wrong alignment on AdvancedSteamFriendsLibrary_InitTextFiltering");
static_assert(sizeof(AdvancedSteamFriendsLibrary_InitTextFiltering) == 0x000001, "Wrong size on AdvancedSteamFriendsLibrary_InitTextFiltering");
static_assert(offsetof(AdvancedSteamFriendsLibrary_InitTextFiltering, ReturnValue) == 0x000000, "Member 'AdvancedSteamFriendsLibrary_InitTextFiltering::ReturnValue' has a wrong offset!");

// Function AdvancedSteamSessions.AdvancedSteamFriendsLibrary.IsOverlayEnabled
// 0x0001 (0x0001 - 0x0000)
struct AdvancedSteamFriendsLibrary_IsOverlayEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AdvancedSteamFriendsLibrary_IsOverlayEnabled) == 0x000001, "Wrong alignment on AdvancedSteamFriendsLibrary_IsOverlayEnabled");
static_assert(sizeof(AdvancedSteamFriendsLibrary_IsOverlayEnabled) == 0x000001, "Wrong size on AdvancedSteamFriendsLibrary_IsOverlayEnabled");
static_assert(offsetof(AdvancedSteamFriendsLibrary_IsOverlayEnabled, ReturnValue) == 0x000000, "Member 'AdvancedSteamFriendsLibrary_IsOverlayEnabled::ReturnValue' has a wrong offset!");

// Function AdvancedSteamSessions.AdvancedSteamFriendsLibrary.IsSteamInBigPictureMode
// 0x0001 (0x0001 - 0x0000)
struct AdvancedSteamFriendsLibrary_IsSteamInBigPictureMode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AdvancedSteamFriendsLibrary_IsSteamInBigPictureMode) == 0x000001, "Wrong alignment on AdvancedSteamFriendsLibrary_IsSteamInBigPictureMode");
static_assert(sizeof(AdvancedSteamFriendsLibrary_IsSteamInBigPictureMode) == 0x000001, "Wrong size on AdvancedSteamFriendsLibrary_IsSteamInBigPictureMode");
static_assert(offsetof(AdvancedSteamFriendsLibrary_IsSteamInBigPictureMode, ReturnValue) == 0x000000, "Member 'AdvancedSteamFriendsLibrary_IsSteamInBigPictureMode::ReturnValue' has a wrong offset!");

// Function AdvancedSteamSessions.AdvancedSteamFriendsLibrary.OpenSteamUserOverlay
// 0x0028 (0x0028 - 0x0000)
struct AdvancedSteamFriendsLibrary_OpenSteamUserOverlay final
{
public:
	struct FBPUniqueNetId                         UniqueNetId;                                       // 0x0000(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
	ESteamUserOverlayType                         DialogType;                                        // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AdvancedSteamFriendsLibrary_OpenSteamUserOverlay) == 0x000008, "Wrong alignment on AdvancedSteamFriendsLibrary_OpenSteamUserOverlay");
static_assert(sizeof(AdvancedSteamFriendsLibrary_OpenSteamUserOverlay) == 0x000028, "Wrong size on AdvancedSteamFriendsLibrary_OpenSteamUserOverlay");
static_assert(offsetof(AdvancedSteamFriendsLibrary_OpenSteamUserOverlay, UniqueNetId) == 0x000000, "Member 'AdvancedSteamFriendsLibrary_OpenSteamUserOverlay::UniqueNetId' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_OpenSteamUserOverlay, DialogType) == 0x000020, "Member 'AdvancedSteamFriendsLibrary_OpenSteamUserOverlay::DialogType' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_OpenSteamUserOverlay, ReturnValue) == 0x000021, "Member 'AdvancedSteamFriendsLibrary_OpenSteamUserOverlay::ReturnValue' has a wrong offset!");

// Function AdvancedSteamSessions.AdvancedSteamFriendsLibrary.RequestSteamFriendInfo
// 0x0028 (0x0028 - 0x0000)
struct AdvancedSteamFriendsLibrary_RequestSteamFriendInfo final
{
public:
	struct FBPUniqueNetId                         UniqueNetId;                                       // 0x0000(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
	bool                                          bRequireNameOnly;                                  // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AdvancedSteamFriendsLibrary_RequestSteamFriendInfo) == 0x000008, "Wrong alignment on AdvancedSteamFriendsLibrary_RequestSteamFriendInfo");
static_assert(sizeof(AdvancedSteamFriendsLibrary_RequestSteamFriendInfo) == 0x000028, "Wrong size on AdvancedSteamFriendsLibrary_RequestSteamFriendInfo");
static_assert(offsetof(AdvancedSteamFriendsLibrary_RequestSteamFriendInfo, UniqueNetId) == 0x000000, "Member 'AdvancedSteamFriendsLibrary_RequestSteamFriendInfo::UniqueNetId' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_RequestSteamFriendInfo, bRequireNameOnly) == 0x000020, "Member 'AdvancedSteamFriendsLibrary_RequestSteamFriendInfo::bRequireNameOnly' has a wrong offset!");
static_assert(offsetof(AdvancedSteamFriendsLibrary_RequestSteamFriendInfo, ReturnValue) == 0x000021, "Member 'AdvancedSteamFriendsLibrary_RequestSteamFriendInfo::ReturnValue' has a wrong offset!");

// Function AdvancedSteamSessions.AdvancedSteamWorkshopLibrary.GetNumSubscribedWorkshopItems
// 0x0004 (0x0004 - 0x0000)
struct AdvancedSteamWorkshopLibrary_GetNumSubscribedWorkshopItems final
{
public:
	int32                                         NumberOfItems;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AdvancedSteamWorkshopLibrary_GetNumSubscribedWorkshopItems) == 0x000004, "Wrong alignment on AdvancedSteamWorkshopLibrary_GetNumSubscribedWorkshopItems");
static_assert(sizeof(AdvancedSteamWorkshopLibrary_GetNumSubscribedWorkshopItems) == 0x000004, "Wrong size on AdvancedSteamWorkshopLibrary_GetNumSubscribedWorkshopItems");
static_assert(offsetof(AdvancedSteamWorkshopLibrary_GetNumSubscribedWorkshopItems, NumberOfItems) == 0x000000, "Member 'AdvancedSteamWorkshopLibrary_GetNumSubscribedWorkshopItems::NumberOfItems' has a wrong offset!");

// Function AdvancedSteamSessions.AdvancedSteamWorkshopLibrary.GetSubscribedWorkshopItems
// 0x0018 (0x0018 - 0x0000)
struct AdvancedSteamWorkshopLibrary_GetSubscribedWorkshopItems final
{
public:
	int32                                         NumberOfItems;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBPSteamWorkshopID>             ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AdvancedSteamWorkshopLibrary_GetSubscribedWorkshopItems) == 0x000008, "Wrong alignment on AdvancedSteamWorkshopLibrary_GetSubscribedWorkshopItems");
static_assert(sizeof(AdvancedSteamWorkshopLibrary_GetSubscribedWorkshopItems) == 0x000018, "Wrong size on AdvancedSteamWorkshopLibrary_GetSubscribedWorkshopItems");
static_assert(offsetof(AdvancedSteamWorkshopLibrary_GetSubscribedWorkshopItems, NumberOfItems) == 0x000000, "Member 'AdvancedSteamWorkshopLibrary_GetSubscribedWorkshopItems::NumberOfItems' has a wrong offset!");
static_assert(offsetof(AdvancedSteamWorkshopLibrary_GetSubscribedWorkshopItems, ReturnValue) == 0x000008, "Member 'AdvancedSteamWorkshopLibrary_GetSubscribedWorkshopItems::ReturnValue' has a wrong offset!");

// Function AdvancedSteamSessions.SteamRequestGroupOfficersCallbackProxy.GetSteamGroupOfficerList
// 0x0030 (0x0030 - 0x0000)
struct SteamRequestGroupOfficersCallbackProxy_GetSteamGroupOfficerList final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBPUniqueNetId                         GroupUniqueNetID;                                  // 0x0008(0x0020)(Parm, NativeAccessSpecifierPublic)
	class USteamRequestGroupOfficersCallbackProxy* ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamRequestGroupOfficersCallbackProxy_GetSteamGroupOfficerList) == 0x000008, "Wrong alignment on SteamRequestGroupOfficersCallbackProxy_GetSteamGroupOfficerList");
static_assert(sizeof(SteamRequestGroupOfficersCallbackProxy_GetSteamGroupOfficerList) == 0x000030, "Wrong size on SteamRequestGroupOfficersCallbackProxy_GetSteamGroupOfficerList");
static_assert(offsetof(SteamRequestGroupOfficersCallbackProxy_GetSteamGroupOfficerList, WorldContextObject) == 0x000000, "Member 'SteamRequestGroupOfficersCallbackProxy_GetSteamGroupOfficerList::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SteamRequestGroupOfficersCallbackProxy_GetSteamGroupOfficerList, GroupUniqueNetID) == 0x000008, "Member 'SteamRequestGroupOfficersCallbackProxy_GetSteamGroupOfficerList::GroupUniqueNetID' has a wrong offset!");
static_assert(offsetof(SteamRequestGroupOfficersCallbackProxy_GetSteamGroupOfficerList, ReturnValue) == 0x000028, "Member 'SteamRequestGroupOfficersCallbackProxy_GetSteamGroupOfficerList::ReturnValue' has a wrong offset!");

// Function AdvancedSteamSessions.SteamWSRequestUGCDetailsCallbackProxy.GetWorkshopItemDetails
// 0x0018 (0x0018 - 0x0000)
struct SteamWSRequestUGCDetailsCallbackProxy_GetWorkshopItemDetails final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBPSteamWorkshopID                     WorkShopID;                                        // 0x0008(0x0008)(Parm, NoDestructor, NativeAccessSpecifierPublic)
	class USteamWSRequestUGCDetailsCallbackProxy* ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SteamWSRequestUGCDetailsCallbackProxy_GetWorkshopItemDetails) == 0x000008, "Wrong alignment on SteamWSRequestUGCDetailsCallbackProxy_GetWorkshopItemDetails");
static_assert(sizeof(SteamWSRequestUGCDetailsCallbackProxy_GetWorkshopItemDetails) == 0x000018, "Wrong size on SteamWSRequestUGCDetailsCallbackProxy_GetWorkshopItemDetails");
static_assert(offsetof(SteamWSRequestUGCDetailsCallbackProxy_GetWorkshopItemDetails, WorldContextObject) == 0x000000, "Member 'SteamWSRequestUGCDetailsCallbackProxy_GetWorkshopItemDetails::WorldContextObject' has a wrong offset!");
static_assert(offsetof(SteamWSRequestUGCDetailsCallbackProxy_GetWorkshopItemDetails, WorkShopID) == 0x000008, "Member 'SteamWSRequestUGCDetailsCallbackProxy_GetWorkshopItemDetails::WorkShopID' has a wrong offset!");
static_assert(offsetof(SteamWSRequestUGCDetailsCallbackProxy_GetWorkshopItemDetails, ReturnValue) == 0x000010, "Member 'SteamWSRequestUGCDetailsCallbackProxy_GetWorkshopItemDetails::ReturnValue' has a wrong offset!");

}

