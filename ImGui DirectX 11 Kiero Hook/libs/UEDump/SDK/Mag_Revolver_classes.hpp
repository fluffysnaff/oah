#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mag_Revolver

#include "Basic.hpp"

#include "Mag_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Mag_Revolver.Mag_Revolver_C
// 0x0028 (0x0250 - 0x0228)
class AMag_Revolver_C final : public AMag_C
{
public:
	class UChildActorComponent*                   ChildActor4;                                       // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActor3;                                       // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActor2;                                       // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActor1;                                       // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActor;                                        // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Mag_Revolver_C">();
	}
	static class AMag_Revolver_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMag_Revolver_C>();
	}
};
static_assert(alignof(AMag_Revolver_C) == 0x000008, "Wrong alignment on AMag_Revolver_C");
static_assert(sizeof(AMag_Revolver_C) == 0x000250, "Wrong size on AMag_Revolver_C");
static_assert(offsetof(AMag_Revolver_C, ChildActor4) == 0x000228, "Member 'AMag_Revolver_C::ChildActor4' has a wrong offset!");
static_assert(offsetof(AMag_Revolver_C, ChildActor3) == 0x000230, "Member 'AMag_Revolver_C::ChildActor3' has a wrong offset!");
static_assert(offsetof(AMag_Revolver_C, ChildActor2) == 0x000238, "Member 'AMag_Revolver_C::ChildActor2' has a wrong offset!");
static_assert(offsetof(AMag_Revolver_C, ChildActor1) == 0x000240, "Member 'AMag_Revolver_C::ChildActor1' has a wrong offset!");
static_assert(offsetof(AMag_Revolver_C, ChildActor) == 0x000248, "Member 'AMag_Revolver_C::ChildActor' has a wrong offset!");

}

