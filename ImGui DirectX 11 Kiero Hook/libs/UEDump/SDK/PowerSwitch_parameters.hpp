#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PowerSwitch

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PowerSwitch.PowerSwitch_C.BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FAD[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function PowerSwitch.PowerSwitch_C.BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'PowerSwitch_C_BndEvt__PowerSwitch_HighlightOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function PowerSwitch.PowerSwitch_C.BndEvt__PowerSwitch_InteractComponent_K2Node_ComponentBoundEvent_2_Interact__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PowerSwitch_C_BndEvt__PowerSwitch_InteractComponent_K2Node_ComponentBoundEvent_2_Interact__DelegateSignature final
{
public:
	class AActor*                                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PowerSwitch_C_BndEvt__PowerSwitch_InteractComponent_K2Node_ComponentBoundEvent_2_Interact__DelegateSignature) == 0x000008, "Wrong alignment on PowerSwitch_C_BndEvt__PowerSwitch_InteractComponent_K2Node_ComponentBoundEvent_2_Interact__DelegateSignature");
static_assert(sizeof(PowerSwitch_C_BndEvt__PowerSwitch_InteractComponent_K2Node_ComponentBoundEvent_2_Interact__DelegateSignature) == 0x000010, "Wrong size on PowerSwitch_C_BndEvt__PowerSwitch_InteractComponent_K2Node_ComponentBoundEvent_2_Interact__DelegateSignature");
static_assert(offsetof(PowerSwitch_C_BndEvt__PowerSwitch_InteractComponent_K2Node_ComponentBoundEvent_2_Interact__DelegateSignature, Player) == 0x000000, "Member 'PowerSwitch_C_BndEvt__PowerSwitch_InteractComponent_K2Node_ComponentBoundEvent_2_Interact__DelegateSignature::Player' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_BndEvt__PowerSwitch_InteractComponent_K2Node_ComponentBoundEvent_2_Interact__DelegateSignature, HitComponent) == 0x000008, "Member 'PowerSwitch_C_BndEvt__PowerSwitch_InteractComponent_K2Node_ComponentBoundEvent_2_Interact__DelegateSignature::HitComponent' has a wrong offset!");

// Function PowerSwitch.PowerSwitch_C.ExecuteUbergraph_PowerSwitch
// 0x02B0 (0x02B0 - 0x0000)
struct PowerSwitch_C_ExecuteUbergraph_PowerSwitch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FAE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FAF[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB0[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB1[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IInstructionInterface_C> K2Node_DynamicCast_AsInstruction_Interface;        // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMoveComponentAction                          Temp_byte_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB2[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB3[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0088(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APlayerCharacter_C*                     K2Node_DynamicCast_AsPlayer_Character;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB4[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB5[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Player;                 // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter_C*                     K2Node_DynamicCast_AsPlayer_Character_1;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB6[0x6];                                     // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB7[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHackableItemComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0190(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0248(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FB8[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB9[0x3];                                     // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch) == 0x000008, "Wrong alignment on PowerSwitch_C_ExecuteUbergraph_PowerSwitch");
static_assert(sizeof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch) == 0x0002B0, "Wrong size on PowerSwitch_C_ExecuteUbergraph_PowerSwitch");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, EntryPoint) == 0x000000, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::EntryPoint' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_GetComponentsByTag_ReturnValue) == 0x000008, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, Temp_object_Variable) == 0x000020, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, Temp_int_Array_Index_Variable) == 0x000030, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_Array_Get_Item) == 0x000048, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_DynamicCast_AsInstruction_Interface) == 0x000050, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_DynamicCast_AsInstruction_Interface' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, Temp_byte_Variable) == 0x000061, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000068, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000070, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000078, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000080, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_ComponentBoundEvent_bFromSweep) == 0x000084, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_ComponentBoundEvent_SweepResult) == 0x000088, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_DynamicCast_AsPlayer_Character) == 0x000110, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00011C, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000128, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_ComponentBoundEvent_OtherActor) == 0x000130, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_ComponentBoundEvent_OtherComp) == 0x000138, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000140, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_ComponentBoundEvent_Player) == 0x000148, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_ComponentBoundEvent_Player' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_ComponentBoundEvent_HitComponent) == 0x000150, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_DynamicCast_AsPlayer_Character_1) == 0x000158, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_DynamicCast_AsPlayer_Character_1' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, K2Node_DynamicCast_bSuccess_2) == 0x000160, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_IsLocallyControlled_ReturnValue) == 0x000161, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_Array_Get_Item_1) == 0x000168, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_Array_Length_ReturnValue_1) == 0x000170, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_GetComponentByClass_ReturnValue) == 0x000178, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, Temp_int_Loop_Counter_Variable_1) == 0x000180, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000184, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_LineTraceSingle_OutHit) == 0x000190, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_LineTraceSingle_ReturnValue) == 0x000218, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_Less_IntInt_ReturnValue_1) == 0x000219, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_bBlockingHit) == 0x00021A, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_bInitialOverlap) == 0x00021B, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_Time) == 0x00021C, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_Distance) == 0x000220, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_Location) == 0x000224, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_ImpactPoint) == 0x000230, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_Normal) == 0x00023C, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_ImpactNormal) == 0x000248, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_PhysMat) == 0x000258, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_HitActor) == 0x000260, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_HitComponent) == 0x000268, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_HitBoneName) == 0x000270, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_HitItem) == 0x000278, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_ElementIndex) == 0x00027C, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_FaceIndex) == 0x000280, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_TraceStart) == 0x000284, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_BreakHitResult_TraceEnd) == 0x000290, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_Add_IntInt_ReturnValue_1) == 0x00029C, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0002A0, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PowerSwitch_C_ExecuteUbergraph_PowerSwitch, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0002A4, "Member 'PowerSwitch_C_ExecuteUbergraph_PowerSwitch::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");

}

