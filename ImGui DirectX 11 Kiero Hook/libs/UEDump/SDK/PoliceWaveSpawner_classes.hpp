#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PoliceWaveSpawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PoliceWaveSpawner.PoliceWaveSpawner_C
// 0x0068 (0x0288 - 0x0220)
class APoliceWaveSpawner_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         WaveNumber;                                        // 0x0230(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         PoliceGuns;                                        // 0x0238(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CiviliansKilled;                                   // 0x0248(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CopsAlerted_;                                      // 0x024C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxPoliceAmount;                                   // 0x0250(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentWaveRemain;                                 // 0x0254(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Players;                                           // 0x0258(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaveMultiplier;                                    // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         PowerMultiplier;                                   // 0x0260(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ARobberGameState_C*                     As_Robber_Game_State;                              // 0x0268(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WavePause_;                                        // 0x0270(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         SpecialPolice;                                     // 0x0278(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void ExecuteUbergraph_PoliceWaveSpawner(int32 EntryPoint);
	void ForceSpawnPolice();
	void PowerboxRush();
	void SetPower(int32 Total, int32 Minimum, float PowerMultiplier_0);
	void SpecialsWave();
	void SpawnSpecialPolice();
	void VaultOpenPause();
	void ReceiveBeginPlay();
	void ForceNewWave();
	void SpawnPoliceInWave();
	void ReceiveTick(float DeltaSeconds);
	void AlertCopsUI(const class FString& Text);
	void AlertCops(const class FString& Reason);
	void NewWave();
	void DecideWaveSize(float WaveMultiplier_0);
	void FindCurrentPoliceAlive(int32* AmountAlive);
	void DecidepoliceToSpawn(TArray<class UClass*>* Police_array);
	void FindActivePowerboxes(bool* ActivePowerboxes_);
	void DecideSpecials();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PoliceWaveSpawner_C">();
	}
	static class APoliceWaveSpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APoliceWaveSpawner_C>();
	}
};
static_assert(alignof(APoliceWaveSpawner_C) == 0x000008, "Wrong alignment on APoliceWaveSpawner_C");
static_assert(sizeof(APoliceWaveSpawner_C) == 0x000288, "Wrong size on APoliceWaveSpawner_C");
static_assert(offsetof(APoliceWaveSpawner_C, UberGraphFrame) == 0x000220, "Member 'APoliceWaveSpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APoliceWaveSpawner_C, DefaultSceneRoot) == 0x000228, "Member 'APoliceWaveSpawner_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(APoliceWaveSpawner_C, WaveNumber) == 0x000230, "Member 'APoliceWaveSpawner_C::WaveNumber' has a wrong offset!");
static_assert(offsetof(APoliceWaveSpawner_C, PoliceGuns) == 0x000238, "Member 'APoliceWaveSpawner_C::PoliceGuns' has a wrong offset!");
static_assert(offsetof(APoliceWaveSpawner_C, CiviliansKilled) == 0x000248, "Member 'APoliceWaveSpawner_C::CiviliansKilled' has a wrong offset!");
static_assert(offsetof(APoliceWaveSpawner_C, CopsAlerted_) == 0x00024C, "Member 'APoliceWaveSpawner_C::CopsAlerted_' has a wrong offset!");
static_assert(offsetof(APoliceWaveSpawner_C, MaxPoliceAmount) == 0x000250, "Member 'APoliceWaveSpawner_C::MaxPoliceAmount' has a wrong offset!");
static_assert(offsetof(APoliceWaveSpawner_C, CurrentWaveRemain) == 0x000254, "Member 'APoliceWaveSpawner_C::CurrentWaveRemain' has a wrong offset!");
static_assert(offsetof(APoliceWaveSpawner_C, Players) == 0x000258, "Member 'APoliceWaveSpawner_C::Players' has a wrong offset!");
static_assert(offsetof(APoliceWaveSpawner_C, WaveMultiplier) == 0x00025C, "Member 'APoliceWaveSpawner_C::WaveMultiplier' has a wrong offset!");
static_assert(offsetof(APoliceWaveSpawner_C, PowerMultiplier) == 0x000260, "Member 'APoliceWaveSpawner_C::PowerMultiplier' has a wrong offset!");
static_assert(offsetof(APoliceWaveSpawner_C, As_Robber_Game_State) == 0x000268, "Member 'APoliceWaveSpawner_C::As_Robber_Game_State' has a wrong offset!");
static_assert(offsetof(APoliceWaveSpawner_C, WavePause_) == 0x000270, "Member 'APoliceWaveSpawner_C::WavePause_' has a wrong offset!");
static_assert(offsetof(APoliceWaveSpawner_C, SpecialPolice) == 0x000278, "Member 'APoliceWaveSpawner_C::SpecialPolice' has a wrong offset!");

}

