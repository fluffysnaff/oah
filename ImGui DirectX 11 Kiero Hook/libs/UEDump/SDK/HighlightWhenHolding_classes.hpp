#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HighlightWhenHolding

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass HighlightWhenHolding.HighlightWhenHolding_C
// 0x0018 (0x00C8 - 0x00B0)
class UHighlightWhenHolding_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 HighlightActorClass;                               // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          MustBeVisible_;                                    // 0x00C4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          Enabled_;                                          // 0x00C5(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          HighlightParent_;                                  // 0x00C6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_HighlightWhenHolding(int32 EntryPoint);
	void Stophighlight(class AActor* Player);
	void Highlight(class AActor* Player, const struct FVector& Pickuplocation, const struct FRotator& PickupRotation, const struct FVector& HitLocation);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HighlightWhenHolding_C">();
	}
	static class UHighlightWhenHolding_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHighlightWhenHolding_C>();
	}
};
static_assert(alignof(UHighlightWhenHolding_C) == 0x000008, "Wrong alignment on UHighlightWhenHolding_C");
static_assert(sizeof(UHighlightWhenHolding_C) == 0x0000C8, "Wrong size on UHighlightWhenHolding_C");
static_assert(offsetof(UHighlightWhenHolding_C, UberGraphFrame) == 0x0000B0, "Member 'UHighlightWhenHolding_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHighlightWhenHolding_C, HighlightActorClass) == 0x0000B8, "Member 'UHighlightWhenHolding_C::HighlightActorClass' has a wrong offset!");
static_assert(offsetof(UHighlightWhenHolding_C, Distance) == 0x0000C0, "Member 'UHighlightWhenHolding_C::Distance' has a wrong offset!");
static_assert(offsetof(UHighlightWhenHolding_C, MustBeVisible_) == 0x0000C4, "Member 'UHighlightWhenHolding_C::MustBeVisible_' has a wrong offset!");
static_assert(offsetof(UHighlightWhenHolding_C, Enabled_) == 0x0000C5, "Member 'UHighlightWhenHolding_C::Enabled_' has a wrong offset!");
static_assert(offsetof(UHighlightWhenHolding_C, HighlightParent_) == 0x0000C6, "Member 'UHighlightWhenHolding_C::HighlightParent_' has a wrong offset!");

}

