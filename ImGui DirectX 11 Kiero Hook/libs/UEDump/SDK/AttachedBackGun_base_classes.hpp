#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AttachedBackGun_base

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "ShopItemCategory_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AttachedBackGun_base.AttachedBackGun_base_C
// 0x0048 (0x0268 - 0x0220)
class AAttachedBackGun_base_C : public AActor
{
public:
	class UChildActorComponent*                   Attachment_Mag;                                    // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Attachment_Grip;                                   // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Attachment_light;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Attachment_scope;                                  // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Attachment_barrel;                                 // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Back_;                                             // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void SetupAttachments(const struct FAttachmentArrayStructure& Attachments);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AttachedBackGun_base_C">();
	}
	static class AAttachedBackGun_base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAttachedBackGun_base_C>();
	}
};
static_assert(alignof(AAttachedBackGun_base_C) == 0x000008, "Wrong alignment on AAttachedBackGun_base_C");
static_assert(sizeof(AAttachedBackGun_base_C) == 0x000268, "Wrong size on AAttachedBackGun_base_C");
static_assert(offsetof(AAttachedBackGun_base_C, Attachment_Mag) == 0x000220, "Member 'AAttachedBackGun_base_C::Attachment_Mag' has a wrong offset!");
static_assert(offsetof(AAttachedBackGun_base_C, Attachment_Grip) == 0x000228, "Member 'AAttachedBackGun_base_C::Attachment_Grip' has a wrong offset!");
static_assert(offsetof(AAttachedBackGun_base_C, Attachment_light) == 0x000230, "Member 'AAttachedBackGun_base_C::Attachment_light' has a wrong offset!");
static_assert(offsetof(AAttachedBackGun_base_C, Attachment_scope) == 0x000238, "Member 'AAttachedBackGun_base_C::Attachment_scope' has a wrong offset!");
static_assert(offsetof(AAttachedBackGun_base_C, Attachment_barrel) == 0x000240, "Member 'AAttachedBackGun_base_C::Attachment_barrel' has a wrong offset!");
static_assert(offsetof(AAttachedBackGun_base_C, Box) == 0x000248, "Member 'AAttachedBackGun_base_C::Box' has a wrong offset!");
static_assert(offsetof(AAttachedBackGun_base_C, Arrow) == 0x000250, "Member 'AAttachedBackGun_base_C::Arrow' has a wrong offset!");
static_assert(offsetof(AAttachedBackGun_base_C, SkeletalMesh) == 0x000258, "Member 'AAttachedBackGun_base_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(AAttachedBackGun_base_C, Back_) == 0x000260, "Member 'AAttachedBackGun_base_C::Back_' has a wrong offset!");

}

