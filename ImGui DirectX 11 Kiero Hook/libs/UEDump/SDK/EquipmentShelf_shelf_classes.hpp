#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EquipmentShelf_shelf

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass EquipmentShelf_shelf.EquipmentShelf_shelf_C
// 0x0040 (0x0260 - 0x0220)
class AEquipmentShelf_shelf_C final : public AActor
{
public:
	class UChildActorComponent*                   Duffelbag;                                         // 0x0220(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Shelf_Bot;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Shelf_Mid;                                         // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Shelf_Top;                                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Shelf;                                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Taken_;                                            // 0x0258(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ShelfNumber;                                       // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EquipmentShelf_shelf_C">();
	}
	static class AEquipmentShelf_shelf_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AEquipmentShelf_shelf_C>();
	}
};
static_assert(alignof(AEquipmentShelf_shelf_C) == 0x000008, "Wrong alignment on AEquipmentShelf_shelf_C");
static_assert(sizeof(AEquipmentShelf_shelf_C) == 0x000260, "Wrong size on AEquipmentShelf_shelf_C");
static_assert(offsetof(AEquipmentShelf_shelf_C, Duffelbag) == 0x000220, "Member 'AEquipmentShelf_shelf_C::Duffelbag' has a wrong offset!");
static_assert(offsetof(AEquipmentShelf_shelf_C, Shelf_Bot) == 0x000228, "Member 'AEquipmentShelf_shelf_C::Shelf_Bot' has a wrong offset!");
static_assert(offsetof(AEquipmentShelf_shelf_C, Shelf_Mid) == 0x000230, "Member 'AEquipmentShelf_shelf_C::Shelf_Mid' has a wrong offset!");
static_assert(offsetof(AEquipmentShelf_shelf_C, Shelf_Top) == 0x000238, "Member 'AEquipmentShelf_shelf_C::Shelf_Top' has a wrong offset!");
static_assert(offsetof(AEquipmentShelf_shelf_C, Arrow) == 0x000240, "Member 'AEquipmentShelf_shelf_C::Arrow' has a wrong offset!");
static_assert(offsetof(AEquipmentShelf_shelf_C, Shelf) == 0x000248, "Member 'AEquipmentShelf_shelf_C::Shelf' has a wrong offset!");
static_assert(offsetof(AEquipmentShelf_shelf_C, DefaultSceneRoot) == 0x000250, "Member 'AEquipmentShelf_shelf_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AEquipmentShelf_shelf_C, Taken_) == 0x000258, "Member 'AEquipmentShelf_shelf_C::Taken_' has a wrong offset!");
static_assert(offsetof(AEquipmentShelf_shelf_C, ShelfNumber) == 0x00025C, "Member 'AEquipmentShelf_shelf_C::ShelfNumber' has a wrong offset!");

}

