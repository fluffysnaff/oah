#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CameraBP

#include "Basic.hpp"

#include "CameraBP_classes.hpp"
#include "CameraBP_parameters.hpp"


namespace SDK
{

// Function CameraBP.CameraBP_C.SeenArmedPlayer__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           SpotReason                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ACameraBP_C::SeenArmedPlayer__DelegateSignature(const struct FVector& Location, const class FString& SpotReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "SeenArmedPlayer__DelegateSignature");

	Params::CameraBP_C_SeenArmedPlayer__DelegateSignature Parms{};

	Parms.Location = std::move(Location);
	Parms.SpotReason = std::move(SpotReason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraBP.CameraBP_C.CamDestroyed__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACameraBP_C*                      Camera_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraBP_C::CamDestroyed__DelegateSignature(const struct FVector& Location, class ACameraBP_C* Camera_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "CamDestroyed__DelegateSignature");

	Params::CameraBP_C_CamDestroyed__DelegateSignature Parms{};

	Parms.Location = std::move(Location);
	Parms.Camera_0 = Camera_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraBP.CameraBP_C.ExecuteUbergraph_CameraBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraBP_C::ExecuteUbergraph_CameraBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "ExecuteUbergraph_CameraBP");

	Params::CameraBP_C_ExecuteUbergraph_CameraBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraBP.CameraBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ACameraBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CameraBP.CameraBP_C.RotateCam
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Rotated_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACameraBP_C::RotateCam(bool Rotated_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "RotateCam");

	Params::CameraBP_C_RotateCam Parms{};

	Parms.Rotated_ = Rotated_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraBP.CameraBP_C.StartCamRotation
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ACameraBP_C::StartCamRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "StartCamRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CameraBP.CameraBP_C.BndEvt__CameraBP_SpotPlayerComponent_K2Node_ComponentBoundEvent_2_PlayerSpotted__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraBP_C::BndEvt__CameraBP_SpotPlayerComponent_K2Node_ComponentBoundEvent_2_PlayerSpotted__DelegateSignature(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "BndEvt__CameraBP_SpotPlayerComponent_K2Node_ComponentBoundEvent_2_PlayerSpotted__DelegateSignature");

	Params::CameraBP_C_BndEvt__CameraBP_SpotPlayerComponent_K2Node_ComponentBoundEvent_2_PlayerSpotted__DelegateSignature Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraBP.CameraBP_C.IgnoreCamera
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ACameraBP_C::IgnoreCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "IgnoreCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CameraBP.CameraBP_C.NPCDieOverlapEnd
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NPC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraBP_C::NPCDieOverlapEnd(class AActor* NPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "NPCDieOverlapEnd");

	Params::CameraBP_C_NPCDieOverlapEnd Parms{};

	Parms.NPC = NPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraBP.CameraBP_C.BndEvt__CameraBP_CameraViewCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraBP_C::BndEvt__CameraBP_CameraViewCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "BndEvt__CameraBP_CameraViewCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");

	Params::CameraBP_C_BndEvt__CameraBP_CameraViewCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraBP.CameraBP_C.RemoveCameraUI
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ACameraBP_C::RemoveCameraUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "RemoveCameraUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CameraBP.CameraBP_C.PossessPlayer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ACameraBP_C::PossessPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "PossessPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CameraBP.CameraBP_C.CameraUI
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ACameraBP_C::CameraUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "CameraUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CameraBP.CameraBP_C.SwitchCamera
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SwitchNum                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraBP_C::SwitchCamera(int32 SwitchNum)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "SwitchCamera");

	Params::CameraBP_C_SwitchCamera Parms{};

	Parms.SwitchNum = SwitchNum;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraBP.CameraBP_C.DestroyCamera
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ACameraBP_C::DestroyCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "DestroyCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CameraBP.CameraBP_C.BndEvt__CameraBP_DamageComponent_K2Node_ComponentBoundEvent_1_Damage__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraBP_C::BndEvt__CameraBP_DamageComponent_K2Node_ComponentBoundEvent_1_Damage__DelegateSignature(int32 Amount, class FName Bone, const struct FVector& HitLocation, const struct FVector& StartLocation, class AActor* Instigator_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "BndEvt__CameraBP_DamageComponent_K2Node_ComponentBoundEvent_1_Damage__DelegateSignature");

	Params::CameraBP_C_BndEvt__CameraBP_DamageComponent_K2Node_ComponentBoundEvent_1_Damage__DelegateSignature Parms{};

	Parms.Amount = Amount;
	Parms.Bone = Bone;
	Parms.HitLocation = std::move(HitLocation);
	Parms.StartLocation = std::move(StartLocation);
	Parms.Instigator_0 = Instigator_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraBP.CameraBP_C.CameraCheck
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ACameraBP_C::CameraCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "CameraCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CameraBP.CameraBP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraBP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "ReceiveTick");

	Params::CameraBP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraBP.CameraBP_C.PossessCamera
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerCharacter_C*               PossessedPlayer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraBP_C::PossessCamera(class APlayerCharacter_C* PossessedPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "PossessCamera");

	Params::CameraBP_C_PossessCamera Parms{};

	Parms.PossessedPlayer = PossessedPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraBP.CameraBP_C.InpActEvt_Right_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACameraBP_C::InpActEvt_Right_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "InpActEvt_Right_K2Node_InputKeyEvent_0");

	Params::CameraBP_C_InpActEvt_Right_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraBP.CameraBP_C.InpActEvt_Left_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ACameraBP_C::InpActEvt_Left_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "InpActEvt_Left_K2Node_InputKeyEvent_1");

	Params::CameraBP_C_InpActEvt_Left_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraBP.CameraBP_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ACameraBP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CameraBP.CameraBP_C.FindNextCam
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SwitchNum                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CamNumber_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACameraBP_C*                      Camera_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACameraBP_C::FindNextCam(int32 SwitchNum, int32 CamNumber_0, class ACameraBP_C** Camera_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraBP_C", "FindNextCam");

	Params::CameraBP_C_FindNextCam Parms{};

	Parms.SwitchNum = SwitchNum;
	Parms.CamNumber_0 = CamNumber_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Camera_0 != nullptr)
		*Camera_0 = Parms.Camera_0;
}

}

