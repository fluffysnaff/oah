#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlindingShield

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BlindingShield.BlindingShield_C
// 0x0040 (0x0260 - 0x0220)
class ABlindingShield_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USteamAchievementComponent_C*           SteamAchievementComponent;                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        LightSound;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spotlight;                                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Glass;                                             // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ShieldMesh;                                        // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          LightActive_;                                      // 0x0250(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Cooldown_;                                         // 0x0251(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Disabled_;                                         // 0x0252(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_253[0x5];                                      // 0x0253(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Hit_Player;                                        // 0x0258(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BlindingShield(int32 EntryPoint);
	void DisableShield();
	void ReceiveTick(float DeltaSeconds);
	void DeactivateLight();
	void ActivateLight();
	void TraceToPlayers();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BlindingShield_C">();
	}
	static class ABlindingShield_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABlindingShield_C>();
	}
};
static_assert(alignof(ABlindingShield_C) == 0x000008, "Wrong alignment on ABlindingShield_C");
static_assert(sizeof(ABlindingShield_C) == 0x000260, "Wrong size on ABlindingShield_C");
static_assert(offsetof(ABlindingShield_C, UberGraphFrame) == 0x000220, "Member 'ABlindingShield_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABlindingShield_C, SteamAchievementComponent) == 0x000228, "Member 'ABlindingShield_C::SteamAchievementComponent' has a wrong offset!");
static_assert(offsetof(ABlindingShield_C, LightSound) == 0x000230, "Member 'ABlindingShield_C::LightSound' has a wrong offset!");
static_assert(offsetof(ABlindingShield_C, Spotlight) == 0x000238, "Member 'ABlindingShield_C::Spotlight' has a wrong offset!");
static_assert(offsetof(ABlindingShield_C, Glass) == 0x000240, "Member 'ABlindingShield_C::Glass' has a wrong offset!");
static_assert(offsetof(ABlindingShield_C, ShieldMesh) == 0x000248, "Member 'ABlindingShield_C::ShieldMesh' has a wrong offset!");
static_assert(offsetof(ABlindingShield_C, LightActive_) == 0x000250, "Member 'ABlindingShield_C::LightActive_' has a wrong offset!");
static_assert(offsetof(ABlindingShield_C, Cooldown_) == 0x000251, "Member 'ABlindingShield_C::Cooldown_' has a wrong offset!");
static_assert(offsetof(ABlindingShield_C, Disabled_) == 0x000252, "Member 'ABlindingShield_C::Disabled_' has a wrong offset!");
static_assert(offsetof(ABlindingShield_C, Hit_Player) == 0x000258, "Member 'ABlindingShield_C::Hit_Player' has a wrong offset!");

}

