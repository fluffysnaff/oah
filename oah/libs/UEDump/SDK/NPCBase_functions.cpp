#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPCBase

#include "Basic.hpp"

#include "NPCBase_classes.hpp"
#include "NPCBase_parameters.hpp"


namespace SDK
{

// Function NPCBase.NPCBase_C.Death__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPCBase_C::Death__DelegateSignature(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "Death__DelegateSignature");

	Params::NPCBase_C_Death__DelegateSignature Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPCBase.NPCBase_C.NPCDamage__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ANPCBase_C::NPCDamage__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "NPCDamage__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPCBase.NPCBase_C.CallGesture__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequenceBase*                Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Loops_                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPCBase_C::CallGesture__DelegateSignature(class UAnimSequenceBase* Anim, bool Loops_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "CallGesture__DelegateSignature");

	Params::NPCBase_C_CallGesture__DelegateSignature Parms{};

	Parms.Anim = Anim;
	Parms.Loops_ = Loops_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPCBase.NPCBase_C.CallStopGesture__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ANPCBase_C::CallStopGesture__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "CallStopGesture__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPCBase.NPCBase_C.ExecuteUbergraph_NPCBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPCBase_C::ExecuteUbergraph_NPCBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "ExecuteUbergraph_NPCBase");

	Params::NPCBase_C_ExecuteUbergraph_NPCBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPCBase.NPCBase_C.PoliceAlerted
// (Public, BlueprintCallable, BlueprintEvent)

void ANPCBase_C::PoliceAlerted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "PoliceAlerted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPCBase.NPCBase_C.RagdollPickedUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Picked_up_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPCBase_C::RagdollPickedUp(bool Picked_up_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "RagdollPickedUp");

	Params::NPCBase_C_RagdollPickedUp Parms{};

	Parms.Picked_up_ = Picked_up_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPCBase.NPCBase_C.StopAnimGesture
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ANPCBase_C::StopAnimGesture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "StopAnimGesture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPCBase.NPCBase_C.PlayAnimGesture
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequenceBase*                Anim                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Loops_                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPCBase_C::PlayAnimGesture(class UAnimSequenceBase* Anim, bool Loops_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "PlayAnimGesture");

	Params::NPCBase_C_PlayAnimGesture Parms{};

	Parms.Anim = Anim;
	Parms.Loops_ = Loops_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPCBase.NPCBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPCBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "ReceiveTick");

	Params::NPCBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPCBase.NPCBase_C.BloodSplatMulti
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Downsplat_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPCBase_C::BloodSplatMulti(const struct FVector& HitLocation, const struct FVector& StartLocation, bool Downsplat_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "BloodSplatMulti");

	Params::NPCBase_C_BloodSplatMulti Parms{};

	Parms.HitLocation = std::move(HitLocation);
	Parms.StartLocation = std::move(StartLocation);
	Parms.Downsplat_ = Downsplat_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPCBase.NPCBase_C.BndEvt__NPCBase_DamageComponent_K2Node_ComponentBoundEvent_0_Damage__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPCBase_C::BndEvt__NPCBase_DamageComponent_K2Node_ComponentBoundEvent_0_Damage__DelegateSignature(int32 Amount, class FName Bone, const struct FVector& HitLocation, const struct FVector& StartLocation, class AActor* Instigator_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "BndEvt__NPCBase_DamageComponent_K2Node_ComponentBoundEvent_0_Damage__DelegateSignature");

	Params::NPCBase_C_BndEvt__NPCBase_DamageComponent_K2Node_ComponentBoundEvent_0_Damage__DelegateSignature Parms{};

	Parms.Amount = Amount;
	Parms.Bone = Bone;
	Parms.HitLocation = std::move(HitLocation);
	Parms.StartLocation = std::move(StartLocation);
	Parms.Instigator_0 = Instigator_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPCBase.NPCBase_C.Die
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPCBase_C::Die(class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "Die");

	Params::NPCBase_C_Die Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPCBase.NPCBase_C.TakeDamage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPCBase_C::TakeDamage(int32 Damage, class AActor* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "TakeDamage");

	Params::NPCBase_C_TakeDamage Parms{};

	Parms.Damage = Damage;
	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPCBase.NPCBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ANPCBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPCBase.NPCBase_C.DestroyOldestPoliceBody
// (Public, BlueprintCallable, BlueprintEvent)

void ANPCBase_C::DestroyOldestPoliceBody()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "DestroyOldestPoliceBody");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPCBase.NPCBase_C.SpawnAmmo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPCBase_C::SpawnAmmo(const struct FVector& Location, int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "SpawnAmmo");

	Params::NPCBase_C_SpawnAmmo Parms{};

	Parms.Location = std::move(Location);
	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPCBase.NPCBase_C.CantOpenDoor
// (Public, BlueprintCallable, BlueprintEvent)

void ANPCBase_C::CantOpenDoor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "CantOpenDoor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPCBase.NPCBase_C.DamageMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Bone_name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Multiplier                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPCBase_C::DamageMultiplier(class FName Bone_name, float* Multiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "DamageMultiplier");

	Params::NPCBase_C_DamageMultiplier Parms{};

	Parms.Bone_name = Bone_name;

	UObject::ProcessEvent(Func, &Parms);

	if (Multiplier != nullptr)
		*Multiplier = Parms.Multiplier;
}


// Function NPCBase.NPCBase_C.BloodSplat
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          HitLoc                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          StartLoc                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Downsplat_                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPCBase_C::BloodSplat(const struct FVector& HitLoc, const struct FVector& StartLoc, bool Downsplat_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPCBase_C", "BloodSplat");

	Params::NPCBase_C_BloodSplat Parms{};

	Parms.HitLoc = std::move(HitLoc);
	Parms.StartLoc = std::move(StartLoc);
	Parms.Downsplat_ = Downsplat_;

	UObject::ProcessEvent(Func, &Parms);
}

}

