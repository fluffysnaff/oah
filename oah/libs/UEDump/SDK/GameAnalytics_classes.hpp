#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameAnalytics

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "GameAnalytics_structs.hpp"


namespace SDK
{

// Class GameAnalytics.GameAnalytics
// 0x0000 (0x0028 - 0x0028)
class UGameAnalytics final : public UObject
{
public:
	static void AddAdEvent(EGAAdAction Action, EGAAdType AdType, const class FString& AdSdkName, const class FString& AdPlacement);
	static void AddAdEventWithDuration(EGAAdAction Action, EGAAdType AdType, const class FString& AdSdkName, const class FString& AdPlacement, int64 Duration);
	static void AddAdEventWithDurationAndFields(EGAAdAction Action, EGAAdType AdType, const class FString& AdSdkName, const class FString& AdPlacement, int64 Duration, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddAdEventWithDurationAndMergeFields(EGAAdAction Action, EGAAdType AdType, const class FString& AdSdkName, const class FString& AdPlacement, int64 Duration, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddAdEventWithFields(EGAAdAction Action, EGAAdType AdType, const class FString& AdSdkName, const class FString& AdPlacement, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddAdEventWithMergeFields(EGAAdAction Action, EGAAdType AdType, const class FString& AdSdkName, const class FString& AdPlacement, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddAdEventWithNoAdReason(EGAAdAction Action, EGAAdType AdType, const class FString& AdSdkName, const class FString& AdPlacement, EGAAdError NoAdReason);
	static void AddAdEventWithNoAdReasonAndFields(EGAAdAction Action, EGAAdType AdType, const class FString& AdSdkName, const class FString& AdPlacement, EGAAdError NoAdReason, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddAdEventWithNoAdReasonAndMergeFields(EGAAdAction Action, EGAAdType AdType, const class FString& AdSdkName, const class FString& AdPlacement, EGAAdError NoAdReason, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddBusinessEvent(const class FString& Currency, int32 Amount, const class FString& ItemType, const class FString& ItemId, const class FString& CartType);
	static void AddBusinessEventAndAutoFetchReceipt(const class FString& Currency, int32 Amount, const class FString& ItemType, const class FString& ItemId, const class FString& CartType);
	static void AddBusinessEventAndAutoFetchReceiptWithFields(const class FString& Currency, int32 Amount, const class FString& ItemType, const class FString& ItemId, const class FString& CartType, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddBusinessEventAndAutoFetchReceiptWithMergeFields(const class FString& Currency, int32 Amount, const class FString& ItemType, const class FString& ItemId, const class FString& CartType, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddBusinessEventAndroid(const class FString& Currency, int32 Amount, const class FString& ItemType, const class FString& ItemId, const class FString& CartType, const class FString& Receipt, const class FString& Signature);
	static void AddBusinessEventAndroidWithFields(const class FString& Currency, int32 Amount, const class FString& ItemType, const class FString& ItemId, const class FString& CartType, const class FString& Receipt, const class FString& Signature, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddBusinessEventAndroidWithMergeFields(const class FString& Currency, int32 Amount, const class FString& ItemType, const class FString& ItemId, const class FString& CartType, const class FString& Receipt, const class FString& Signature, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddBusinessEventIOS(const class FString& Currency, int32 Amount, const class FString& ItemType, const class FString& ItemId, const class FString& CartType, const class FString& Receipt);
	static void AddBusinessEventIOSWithFields(const class FString& Currency, int32 Amount, const class FString& ItemType, const class FString& ItemId, const class FString& CartType, const class FString& Receipt, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddBusinessEventIOSWithMergeFields(const class FString& Currency, int32 Amount, const class FString& ItemType, const class FString& ItemId, const class FString& CartType, const class FString& Receipt, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddBusinessEventWithFields(const class FString& Currency, int32 Amount, const class FString& ItemType, const class FString& ItemId, const class FString& CartType, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddBusinessEventWithMergeFields(const class FString& Currency, int32 Amount, const class FString& ItemType, const class FString& ItemId, const class FString& CartType, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddDesignEvent(const class FString& EventId);
	static void AddDesignEventWithFields(const class FString& EventId, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddDesignEventWithMergeFields(const class FString& EventId, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddDesignEventWithValue(const class FString& EventId, float Value);
	static void AddDesignEventWithValueAndFields(const class FString& EventId, float Value, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddDesignEventWithValueAndMergeFields(const class FString& EventId, float Value, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddErrorEvent(EGAErrorSeverity Severity, const class FString& Message);
	static void AddErrorEventWithFields(EGAErrorSeverity Severity, const class FString& Message, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddErrorEventWithMergeFields(EGAErrorSeverity Severity, const class FString& Message, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddProgressionEventWithOne(EGAProgressionStatus ProgressionStatus, const class FString& Progression01);
	static void AddProgressionEventWithOneAndFields(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddProgressionEventWithOneAndMergeFields(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddProgressionEventWithOneAndScore(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, int32 Score);
	static void AddProgressionEventWithOneAndTwo(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, const class FString& Progression02);
	static void AddProgressionEventWithOneScoreAndFields(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, int32 Score, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddProgressionEventWithOneScoreAndMergeFields(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, int32 Score, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddProgressionEventWithOneTwoAndFields(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, const class FString& Progression02, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddProgressionEventWithOneTwoAndMergeFields(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, const class FString& Progression02, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddProgressionEventWithOneTwoAndScore(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, const class FString& Progression02, int32 Score);
	static void AddProgressionEventWithOneTwoAndThree(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, const class FString& Progression02, const class FString& Progression03);
	static void AddProgressionEventWithOneTwoScoreAndFields(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, const class FString& Progression02, int32 Score, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddProgressionEventWithOneTwoScoreAndMergeFields(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, const class FString& Progression02, int32 Score, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddProgressionEventWithOneTwoThreeAndFields(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, const class FString& Progression02, const class FString& Progression03, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddProgressionEventWithOneTwoThreeAndMergeFields(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, const class FString& Progression02, const class FString& Progression03, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddProgressionEventWithOneTwoThreeAndScore(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, const class FString& Progression02, const class FString& Progression03, int32 Score);
	static void AddProgressionEventWithOneTwoThreeScoreAndFields(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, const class FString& Progression02, const class FString& Progression03, int32 Score, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddProgressionEventWithOneTwoThreeScoreAndMergeFields(EGAProgressionStatus ProgressionStatus, const class FString& Progression01, const class FString& Progression02, const class FString& Progression03, int32 Score, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddResourceEvent(EGAResourceFlowType FlowType, const class FString& Currency, float Amount, const class FString& ItemType, const class FString& ItemId);
	static void AddResourceEventWithFields(EGAResourceFlowType FlowType, const class FString& Currency, float Amount, const class FString& ItemType, const class FString& ItemId, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static void AddResourceEventWithMergeFields(EGAResourceFlowType FlowType, const class FString& Currency, float Amount, const class FString& ItemType, const class FString& ItemId, const TArray<struct FGameAnalyticsCustomEventField>& CustomFields);
	static class FString GetABTestingId();
	static class FString GetABTestingVariantId();
	static class FString GetRemoteConfigsContentAsString();
	static class FString GetRemoteConfigsValueAsString(const class FString& Key);
	static class FString GetRemoteConfigsValueAsStringWithDefaultValue(const class FString& Key, const class FString& DefaultValue);
	static bool IsRemoteConfigsReady();
	static void OnQuit();
	static void SetCustomDimension01(const class FString& CustomDimension);
	static void SetCustomDimension02(const class FString& CustomDimension);
	static void SetCustomDimension03(const class FString& CustomDimension);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameAnalytics">();
	}
	static class UGameAnalytics* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameAnalytics>();
	}
};
static_assert(alignof(UGameAnalytics) == 0x000008, "Wrong alignment on UGameAnalytics");
static_assert(sizeof(UGameAnalytics) == 0x000028, "Wrong size on UGameAnalytics");

}

