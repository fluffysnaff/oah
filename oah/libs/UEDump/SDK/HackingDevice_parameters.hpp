#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HackingDevice

#include "Basic.hpp"


namespace SDK::Params
{

// Function HackingDevice.HackingDevice_C.ExecuteUbergraph_HackingDevice
// 0x00A0 (0x00A0 - 0x0000)
struct HackingDevice_C_ExecuteUbergraph_HackingDevice final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHackingGameParent_C*                   CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Instigator;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Overlap;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AHackingPoint_C*                        K2Node_DynamicCast_AsHacking_Point;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter_C*                     K2Node_DynamicCast_AsPlayer_Character;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AHackingPoint_C*                        K2Node_CustomEvent_HackingPoint;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_Player;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UHackingGameParent_C*>           CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHackingGameParent_C*                   CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HackingDevice_C_ExecuteUbergraph_HackingDevice) == 0x000008, "Wrong alignment on HackingDevice_C_ExecuteUbergraph_HackingDevice");
static_assert(sizeof(HackingDevice_C_ExecuteUbergraph_HackingDevice) == 0x0000A0, "Wrong size on HackingDevice_C_ExecuteUbergraph_HackingDevice");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, EntryPoint) == 0x000000, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::EntryPoint' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, Temp_int_Array_Index_Variable) == 0x000004, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, CallFunc_Create_ReturnValue) == 0x000008, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, K2Node_ComponentBoundEvent_Instigator) == 0x000010, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::K2Node_ComponentBoundEvent_Instigator' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, K2Node_ComponentBoundEvent_Overlap) == 0x000018, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::K2Node_ComponentBoundEvent_Overlap' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, K2Node_DynamicCast_AsHacking_Point) == 0x000020, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::K2Node_DynamicCast_AsHacking_Point' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, K2Node_DynamicCast_AsPlayer_Character) == 0x000030, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, CallFunc_IsLocallyControlled_ReturnValue) == 0x000039, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, K2Node_CustomEvent_HackingPoint) == 0x000040, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::K2Node_CustomEvent_HackingPoint' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, K2Node_ComponentBoundEvent_Player) == 0x000050, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::K2Node_ComponentBoundEvent_Player' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, K2Node_DynamicCast_AsPawn) == 0x000058, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000068, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000078, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, CallFunc_Array_Get_Item) == 0x000080, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, CallFunc_GetPlayerController_ReturnValue) == 0x000090, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_ExecuteUbergraph_HackingDevice, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'HackingDevice_C_ExecuteUbergraph_HackingDevice::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function HackingDevice.HackingDevice_C.BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_1_DropItem__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_1_DropItem__DelegateSignature final
{
public:
	class AActor*                                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_1_DropItem__DelegateSignature) == 0x000008, "Wrong alignment on HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_1_DropItem__DelegateSignature");
static_assert(sizeof(HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_1_DropItem__DelegateSignature) == 0x000008, "Wrong size on HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_1_DropItem__DelegateSignature");
static_assert(offsetof(HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_1_DropItem__DelegateSignature, Player) == 0x000000, "Member 'HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_1_DropItem__DelegateSignature::Player' has a wrong offset!");

// Function HackingDevice.HackingDevice_C.SethackingPoint
// 0x0008 (0x0008 - 0x0000)
struct HackingDevice_C_SethackingPoint final
{
public:
	class AHackingPoint_C*                        HackingPoint_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HackingDevice_C_SethackingPoint) == 0x000008, "Wrong alignment on HackingDevice_C_SethackingPoint");
static_assert(sizeof(HackingDevice_C_SethackingPoint) == 0x000008, "Wrong size on HackingDevice_C_SethackingPoint");
static_assert(offsetof(HackingDevice_C_SethackingPoint, HackingPoint_0) == 0x000000, "Member 'HackingDevice_C_SethackingPoint::HackingPoint_0' has a wrong offset!");

// Function HackingDevice.HackingDevice_C.BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature final
{
public:
	class AActor*                                 Instigator_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Overlap;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature) == 0x000008, "Wrong alignment on HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature");
static_assert(sizeof(HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature) == 0x000010, "Wrong size on HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature");
static_assert(offsetof(HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature, Instigator_0) == 0x000000, "Member 'HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature::Instigator_0' has a wrong offset!");
static_assert(offsetof(HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature, Overlap) == 0x000008, "Member 'HackingDevice_C_BndEvt__HackingDevice_PickupItemComponent_K2Node_ComponentBoundEvent_0_InteractHolding__DelegateSignature::Overlap' has a wrong offset!");

}

