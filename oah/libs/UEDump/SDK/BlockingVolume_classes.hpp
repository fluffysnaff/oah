#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BlockingVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BlockingVolume.BlockingVolume_C
// 0x0018 (0x0238 - 0x0220)
class ABlockingVolume_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BlockingVolume;                                    // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BlockingVolume(int32 EntryPoint);
	void BndEvt__BlockingVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__BlockingVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void PostProcessSettings(class APlayerCharacter_C* Self2, float Weight);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BlockingVolume_C">();
	}
	static class ABlockingVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABlockingVolume_C>();
	}
};
static_assert(alignof(ABlockingVolume_C) == 0x000008, "Wrong alignment on ABlockingVolume_C");
static_assert(sizeof(ABlockingVolume_C) == 0x000238, "Wrong size on ABlockingVolume_C");
static_assert(offsetof(ABlockingVolume_C, UberGraphFrame) == 0x000220, "Member 'ABlockingVolume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABlockingVolume_C, Box) == 0x000228, "Member 'ABlockingVolume_C::Box' has a wrong offset!");
static_assert(offsetof(ABlockingVolume_C, BlockingVolume) == 0x000230, "Member 'ABlockingVolume_C::BlockingVolume' has a wrong offset!");

}

