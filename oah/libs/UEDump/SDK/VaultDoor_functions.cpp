#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VaultDoor

#include "Basic.hpp"

#include "VaultDoor_classes.hpp"
#include "VaultDoor_parameters.hpp"


namespace SDK
{

// Function VaultDoor.VaultDoor_C.IsDoorOpenInterfaceCall
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOpen_                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AVaultDoor_C::IsDoorOpenInterfaceCall(bool* IsOpen_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultDoor_C", "IsDoorOpenInterfaceCall");

	Params::VaultDoor_C_IsDoorOpenInterfaceCall Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsOpen_ != nullptr)
		*IsOpen_ = Parms.IsOpen_;
}


// Function VaultDoor.VaultDoor_C.AlarmDisabledInterfaceCall
// (Public, BlueprintCallable, BlueprintEvent)

void AVaultDoor_C::AlarmDisabledInterfaceCall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultDoor_C", "AlarmDisabledInterfaceCall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VaultDoor.VaultDoor_C.TakeDamage
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVaultDoor_C::TakeDamage(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultDoor_C", "TakeDamage");

	Params::VaultDoor_C_TakeDamage Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VaultDoor.VaultDoor_C.OpenVault
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AVaultDoor_C::OpenVault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultDoor_C", "OpenVault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VaultDoor.VaultDoor_C.BndEvt__VaultDoor_ToolOwnerComponent_K2Node_ComponentBoundEvent_0_Open__DelegateSignature
// (BlueprintEvent)

void AVaultDoor_C::BndEvt__VaultDoor_ToolOwnerComponent_K2Node_ComponentBoundEvent_0_Open__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultDoor_C", "BndEvt__VaultDoor_ToolOwnerComponent_K2Node_ComponentBoundEvent_0_Open__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VaultDoor.VaultDoor_C.BndEvt__VaultDoor_HackableItemComponent_K2Node_ComponentBoundEvent_1_HackItem__DelegateSignature
// (BlueprintEvent)

void AVaultDoor_C::BndEvt__VaultDoor_HackableItemComponent_K2Node_ComponentBoundEvent_1_HackItem__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultDoor_C", "BndEvt__VaultDoor_HackableItemComponent_K2Node_ComponentBoundEvent_1_HackItem__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VaultDoor.VaultDoor_C.AlarmTriggeredInterfaceCall
// (Public, BlueprintCallable, BlueprintEvent)

void AVaultDoor_C::AlarmTriggeredInterfaceCall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultDoor_C", "AlarmTriggeredInterfaceCall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VaultDoor.VaultDoor_C.ExecuteUbergraph_VaultDoor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVaultDoor_C::ExecuteUbergraph_VaultDoor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VaultDoor_C", "ExecuteUbergraph_VaultDoor");

	Params::VaultDoor_C_ExecuteUbergraph_VaultDoor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

