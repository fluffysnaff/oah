#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RobberTruck

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function RobberTruck.RobberTruck_C.ExecuteUbergraph_RobberTruck
// 0x0208 (0x0208 - 0x0000)
struct RobberTruck_C_ExecuteUbergraph_RobberTruck final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWaitToLeaveUI_C*                       CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0050(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APlayerCharacter_C*                     K2Node_DynamicCast_AsPlayer_Character;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMoney_base_C*                          K2Node_DynamicCast_AsMoney_Base;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMoney_base_C*                          K2Node_CustomEvent_MoneyActor_1;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter_C*                     K2Node_DynamicCast_AsPlayer_Character_1;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMoney_base_C*                          K2Node_DynamicCast_AsMoney_Base_1;                 // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMoney_base_C*                          K2Node_CustomEvent_MoneyActor;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter_C*                     K2Node_CustomEvent_Player;                         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_EndOverlap_;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerCharacter_C*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0160(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_176[0x2];                                      // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0178(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWaitToLeaveUI_C*>               CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0198(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWaitToLeaveUI_C*                       CallFunc_Array_Get_Item;                           // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_3;        // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BE[0x2];                                      // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerCharacter_C*>             CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x01C0(0x0010)(ReferenceParm)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter_C*                     CallFunc_Array_Get_Item_1;                         // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaTime;                      // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_Add_TimespanTimespan_ReturnValue;         // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RobberTruck_C_ExecuteUbergraph_RobberTruck) == 0x000008, "Wrong alignment on RobberTruck_C_ExecuteUbergraph_RobberTruck");
static_assert(sizeof(RobberTruck_C_ExecuteUbergraph_RobberTruck) == 0x000208, "Wrong size on RobberTruck_C_ExecuteUbergraph_RobberTruck");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, EntryPoint) == 0x000000, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::EntryPoint' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Create_ReturnValue) == 0x000010, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, Temp_int_Array_Index_Variable) == 0x000018, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000028, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, Temp_bool_Has_Been_Initd_Variable) == 0x000029, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_Event_DeltaSeconds) == 0x00002C, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000030, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000038, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000040, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000048, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_ComponentBoundEvent_bFromSweep) == 0x00004C, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_ComponentBoundEvent_SweepResult) == 0x000050, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_DynamicCast_AsPlayer_Character) == 0x0000D8, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_DynamicCast_AsMoney_Base) == 0x0000E8, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_DynamicCast_AsMoney_Base' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_CustomEvent_MoneyActor_1) == 0x0000F8, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_CustomEvent_MoneyActor_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000100, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_ComponentBoundEvent_OtherActor) == 0x000108, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_ComponentBoundEvent_OtherComp) == 0x000110, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000118, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Add_IntInt_ReturnValue_2) == 0x00011C, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_DynamicCast_AsPlayer_Character_1) == 0x000120, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_DynamicCast_AsPlayer_Character_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_DynamicCast_bSuccess_2) == 0x000128, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_DynamicCast_AsMoney_Base_1) == 0x000130, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_DynamicCast_AsMoney_Base_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_DynamicCast_bSuccess_3) == 0x000138, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_CustomEvent_MoneyActor) == 0x000140, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_CustomEvent_MoneyActor' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_CustomEvent_Player) == 0x000148, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_CustomEvent_EndOverlap_) == 0x000150, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_CustomEvent_EndOverlap_' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Subtract_IntInt_ReturnValue) == 0x000154, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_IsLocallyControlled_ReturnValue) == 0x000159, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_GetAllActorsOfClass_OutActors) == 0x000160, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000174, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000175, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000178, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_BooleanAND_ReturnValue) == 0x000188, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Array_Length_ReturnValue_1) == 0x00018C, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000190, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000198, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Array_Get_Item) == 0x0001A8, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_GreaterEqual_IntInt_ReturnValue_3) == 0x0001B0, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_GreaterEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Array_Length_ReturnValue_2) == 0x0001B4, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Array_Length_ReturnValue_3) == 0x0001B8, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Less_IntInt_ReturnValue) == 0x0001BC, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Greater_IntInt_ReturnValue) == 0x0001BD, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0001C0, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, Temp_bool_IsClosed_Variable) == 0x0001D0, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Array_Get_Item_1) == 0x0001D8, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_IsOverlappingActor_ReturnValue) == 0x0001E0, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Array_Length_ReturnValue_4) == 0x0001E4, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, K2Node_CustomEvent_DeltaTime) == 0x0001E8, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::K2Node_CustomEvent_DeltaTime' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001EC, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001F0, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_FTrunc_ReturnValue) == 0x0001F4, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_MakeTimespan_ReturnValue) == 0x0001F8, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_ExecuteUbergraph_RobberTruck, CallFunc_Add_TimespanTimespan_ReturnValue) == 0x000200, "Member 'RobberTruck_C_ExecuteUbergraph_RobberTruck::CallFunc_Add_TimespanTimespan_ReturnValue' has a wrong offset!");

// Function RobberTruck.RobberTruck_C.CountTimer
// 0x0004 (0x0004 - 0x0000)
struct RobberTruck_C_CountTimer final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RobberTruck_C_CountTimer) == 0x000004, "Wrong alignment on RobberTruck_C_CountTimer");
static_assert(sizeof(RobberTruck_C_CountTimer) == 0x000004, "Wrong size on RobberTruck_C_CountTimer");
static_assert(offsetof(RobberTruck_C_CountTimer, DeltaTime) == 0x000000, "Member 'RobberTruck_C_CountTimer::DeltaTime' has a wrong offset!");

// Function RobberTruck.RobberTruck_C.CountPlayers
// 0x0010 (0x0010 - 0x0000)
struct RobberTruck_C_CountPlayers final
{
public:
	class APlayerCharacter_C*                     Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EndOverlap_;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RobberTruck_C_CountPlayers) == 0x000008, "Wrong alignment on RobberTruck_C_CountPlayers");
static_assert(sizeof(RobberTruck_C_CountPlayers) == 0x000010, "Wrong size on RobberTruck_C_CountPlayers");
static_assert(offsetof(RobberTruck_C_CountPlayers, Player) == 0x000000, "Member 'RobberTruck_C_CountPlayers::Player' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CountPlayers, EndOverlap_) == 0x000008, "Member 'RobberTruck_C_CountPlayers::EndOverlap_' has a wrong offset!");

// Function RobberTruck.RobberTruck_C.RemoveMoney
// 0x0008 (0x0008 - 0x0000)
struct RobberTruck_C_RemoveMoney final
{
public:
	class AMoney_base_C*                          MoneyActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RobberTruck_C_RemoveMoney) == 0x000008, "Wrong alignment on RobberTruck_C_RemoveMoney");
static_assert(sizeof(RobberTruck_C_RemoveMoney) == 0x000008, "Wrong size on RobberTruck_C_RemoveMoney");
static_assert(offsetof(RobberTruck_C_RemoveMoney, MoneyActor) == 0x000000, "Member 'RobberTruck_C_RemoveMoney::MoneyActor' has a wrong offset!");

// Function RobberTruck.RobberTruck_C.BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function RobberTruck.RobberTruck_C.CountMoney
// 0x0008 (0x0008 - 0x0000)
struct RobberTruck_C_CountMoney final
{
public:
	class AMoney_base_C*                          MoneyActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RobberTruck_C_CountMoney) == 0x000008, "Wrong alignment on RobberTruck_C_CountMoney");
static_assert(sizeof(RobberTruck_C_CountMoney) == 0x000008, "Wrong size on RobberTruck_C_CountMoney");
static_assert(offsetof(RobberTruck_C_CountMoney, MoneyActor) == 0x000000, "Member 'RobberTruck_C_CountMoney::MoneyActor' has a wrong offset!");

// Function RobberTruck.RobberTruck_C.BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'RobberTruck_C_BndEvt__RobberTruck_MoneyOverlapper_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function RobberTruck.RobberTruck_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct RobberTruck_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RobberTruck_C_ReceiveTick) == 0x000004, "Wrong alignment on RobberTruck_C_ReceiveTick");
static_assert(sizeof(RobberTruck_C_ReceiveTick) == 0x000004, "Wrong size on RobberTruck_C_ReceiveTick");
static_assert(offsetof(RobberTruck_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'RobberTruck_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function RobberTruck.RobberTruck_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct RobberTruck_C_UserConstructionScript final
{
public:
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0000(0x0018)()
};
static_assert(alignof(RobberTruck_C_UserConstructionScript) == 0x000008, "Wrong alignment on RobberTruck_C_UserConstructionScript");
static_assert(sizeof(RobberTruck_C_UserConstructionScript) == 0x000018, "Wrong size on RobberTruck_C_UserConstructionScript");
static_assert(offsetof(RobberTruck_C_UserConstructionScript, CallFunc_Conv_IntToText_ReturnValue) == 0x000000, "Member 'RobberTruck_C_UserConstructionScript::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function RobberTruck.RobberTruck_C.CheckAllMoney
// 0x0068 (0x0068 - 0x0000)
struct RobberTruck_C_CheckAllMoney final
{
public:
	int32                                         TakeVar;                                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AMoney_base_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMoney_base_C*                          K2Node_DynamicCast_AsMoney_Base;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(RobberTruck_C_CheckAllMoney) == 0x000008, "Wrong alignment on RobberTruck_C_CheckAllMoney");
static_assert(sizeof(RobberTruck_C_CheckAllMoney) == 0x000068, "Wrong size on RobberTruck_C_CheckAllMoney");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, TakeVar) == 0x000000, "Member 'RobberTruck_C_CheckAllMoney::TakeVar' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, Temp_int_Array_Index_Variable) == 0x000004, "Member 'RobberTruck_C_CheckAllMoney::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'RobberTruck_C_CheckAllMoney::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'RobberTruck_C_CheckAllMoney::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'RobberTruck_C_CheckAllMoney::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'RobberTruck_C_CheckAllMoney::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000028, "Member 'RobberTruck_C_CheckAllMoney::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'RobberTruck_C_CheckAllMoney::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, CallFunc_Array_Get_Item) == 0x000040, "Member 'RobberTruck_C_CheckAllMoney::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'RobberTruck_C_CheckAllMoney::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, K2Node_DynamicCast_AsMoney_Base) == 0x000050, "Member 'RobberTruck_C_CheckAllMoney::K2Node_DynamicCast_AsMoney_Base' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'RobberTruck_C_CheckAllMoney::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, CallFunc_Array_Length_ReturnValue_2) == 0x00005C, "Member 'RobberTruck_C_CheckAllMoney::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'RobberTruck_C_CheckAllMoney::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(RobberTruck_C_CheckAllMoney, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'RobberTruck_C_CheckAllMoney::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

