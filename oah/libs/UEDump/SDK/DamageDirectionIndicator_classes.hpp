#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DamageDirectionIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass DamageDirectionIndicator.DamageDirectionIndicator_C
// 0x0030 (0x0290 - 0x0260)
class UDamageDirectionIndicator_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NewAnimation;                                      // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 DamageIndicator;                                   // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector                                DamageLocation;                                    // 0x0278(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter_C*                     Player;                                            // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DamageDirectionIndicator(int32 EntryPoint);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DamageDirectionIndicator_C">();
	}
	static class UDamageDirectionIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDamageDirectionIndicator_C>();
	}
};
static_assert(alignof(UDamageDirectionIndicator_C) == 0x000008, "Wrong alignment on UDamageDirectionIndicator_C");
static_assert(sizeof(UDamageDirectionIndicator_C) == 0x000290, "Wrong size on UDamageDirectionIndicator_C");
static_assert(offsetof(UDamageDirectionIndicator_C, UberGraphFrame) == 0x000260, "Member 'UDamageDirectionIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UDamageDirectionIndicator_C, NewAnimation) == 0x000268, "Member 'UDamageDirectionIndicator_C::NewAnimation' has a wrong offset!");
static_assert(offsetof(UDamageDirectionIndicator_C, DamageIndicator) == 0x000270, "Member 'UDamageDirectionIndicator_C::DamageIndicator' has a wrong offset!");
static_assert(offsetof(UDamageDirectionIndicator_C, DamageLocation) == 0x000278, "Member 'UDamageDirectionIndicator_C::DamageLocation' has a wrong offset!");
static_assert(offsetof(UDamageDirectionIndicator_C, Player) == 0x000288, "Member 'UDamageDirectionIndicator_C::Player' has a wrong offset!");

}

