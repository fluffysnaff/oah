#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GunBase

#include "Basic.hpp"

#include "GunBase_classes.hpp"
#include "GunBase_parameters.hpp"


namespace SDK
{

// Function GunBase.GunBase_C.ExecuteUbergraph_GunBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGunBase_C::ExecuteUbergraph_GunBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "ExecuteUbergraph_GunBase");

	Params::GunBase_C_ExecuteUbergraph_GunBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GunBase.GunBase_C.ReloadGunClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void AGunBase_C::ReloadGunClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "ReloadGunClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GunBase.GunBase_C.Add arm force
// (BlueprintCallable, BlueprintEvent)

void AGunBase_C::Add_arm_force()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "Add arm force");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GunBase.GunBase_C.MuzzleFlash
// (BlueprintCallable, BlueprintEvent)

void AGunBase_C::MuzzleFlash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "MuzzleFlash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GunBase.GunBase_C.SetupAttachmentsMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAttachmentArrayStructure        Attachments_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AGunBase_C::SetupAttachmentsMulti(const struct FAttachmentArrayStructure& Attachments_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "SetupAttachmentsMulti");

	Params::GunBase_C_SetupAttachmentsMulti Parms{};

	Parms.Attachments_0 = std::move(Attachments_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GunBase.GunBase_C.ReloadGunServer
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AGunBase_C::ReloadGunServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "ReloadGunServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GunBase.GunBase_C.Cooldown
// (BlueprintCallable, BlueprintEvent)

void AGunBase_C::Cooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "Cooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GunBase.GunBase_C.SetupGun
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AGunBase_C::SetupGun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "SetupGun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GunBase.GunBase_C.ShootClient
// (BlueprintCallable, BlueprintEvent)

void AGunBase_C::ShootClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "ShootClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GunBase.GunBase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AGunBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GunBase.GunBase_C.SetupAttachments
// (Public, BlueprintCallable, BlueprintEvent)

void AGunBase_C::SetupAttachments()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "SetupAttachments");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GunBase.GunBase_C.CalculateBullets
// (Public, BlueprintCallable, BlueprintEvent)

void AGunBase_C::CalculateBullets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "CalculateBullets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GunBase.GunBase_C.AddAmmoToGun
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Check_only_                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   GunSlot                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   GunBullet                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Ammo_added_                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AGunBase_C::AddAmmoToGun(int32 Amount, bool Check_only_, int32 GunSlot, int32 GunBullet, bool* Ammo_added_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "AddAmmoToGun");

	Params::GunBase_C_AddAmmoToGun Parms{};

	Parms.Amount = Amount;
	Parms.Check_only_ = Check_only_;
	Parms.GunSlot = GunSlot;
	Parms.GunBullet = GunBullet;

	UObject::ProcessEvent(Func, &Parms);

	if (Ammo_added_ != nullptr)
		*Ammo_added_ = Parms.Ammo_added_;
}


// Function GunBase.GunBase_C.Get Any Gun Stats
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAttachmentArrayStructure        AttachmentArrayStructure                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UClass*                           GunClass                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Zoom                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Recoil                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Accuracy_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Reload_time_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Bullets                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGunBase_C::Get_Any_Gun_Stats(const struct FAttachmentArrayStructure& AttachmentArrayStructure, class UClass* GunClass, float* Zoom, float* Recoil, float* Accuracy_0, float* Reload_time_0, float* Damage_0, int32* Bullets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "Get Any Gun Stats");

	Params::GunBase_C_Get_Any_Gun_Stats Parms{};

	Parms.AttachmentArrayStructure = std::move(AttachmentArrayStructure);
	Parms.GunClass = GunClass;

	UObject::ProcessEvent(Func, &Parms);

	if (Zoom != nullptr)
		*Zoom = Parms.Zoom;

	if (Recoil != nullptr)
		*Recoil = Parms.Recoil;

	if (Accuracy_0 != nullptr)
		*Accuracy_0 = Parms.Accuracy_0;

	if (Reload_time_0 != nullptr)
		*Reload_time_0 = Parms.Reload_time_0;

	if (Damage_0 != nullptr)
		*Damage_0 = Parms.Damage_0;

	if (Bullets != nullptr)
		*Bullets = Parms.Bullets;
}


// Function GunBase.GunBase_C.GetThisGunStats
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Zoom                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Recoil                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Accuracy_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Reload_time_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Bullets                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGunBase_C::GetThisGunStats(float* Zoom, float* Recoil, float* Accuracy_0, float* Reload_time_0, float* Damage_0, int32* Bullets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "GetThisGunStats");

	Params::GunBase_C_GetThisGunStats Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Zoom != nullptr)
		*Zoom = Parms.Zoom;

	if (Recoil != nullptr)
		*Recoil = Parms.Recoil;

	if (Accuracy_0 != nullptr)
		*Accuracy_0 = Parms.Accuracy_0;

	if (Reload_time_0 != nullptr)
		*Reload_time_0 = Parms.Reload_time_0;

	if (Damage_0 != nullptr)
		*Damage_0 = Parms.Damage_0;

	if (Bullets != nullptr)
		*Bullets = Parms.Bullets;
}


// Function GunBase.GunBase_C.GetAttachmentFromCategory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EShopItemCategory                       Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Class_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGunBase_C::GetAttachmentFromCategory(EShopItemCategory Category, class UClass** Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "GetAttachmentFromCategory");

	Params::GunBase_C_GetAttachmentFromCategory Parms{};

	Parms.Category = Category;

	UObject::ProcessEvent(Func, &Parms);

	if (Class_0 != nullptr)
		*Class_0 = Parms.Class_0;
}


// Function GunBase.GunBase_C.GetUpgradeStats
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Upgrade                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Recoil                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Accuracy_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Bullets                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Reload_time_0                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGunBase_C::GetUpgradeStats(class UClass* Upgrade, float* Recoil, float* Accuracy_0, float* Damage_0, int32* Bullets, float* Reload_time_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "GetUpgradeStats");

	Params::GunBase_C_GetUpgradeStats Parms{};

	Parms.Upgrade = Upgrade;

	UObject::ProcessEvent(Func, &Parms);

	if (Recoil != nullptr)
		*Recoil = Parms.Recoil;

	if (Accuracy_0 != nullptr)
		*Accuracy_0 = Parms.Accuracy_0;

	if (Damage_0 != nullptr)
		*Damage_0 = Parms.Damage_0;

	if (Bullets != nullptr)
		*Bullets = Parms.Bullets;

	if (Reload_time_0 != nullptr)
		*Reload_time_0 = Parms.Reload_time_0;
}


// Function GunBase.GunBase_C.PreviewAttachment
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Attachment                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGunBase_C::PreviewAttachment(class UClass* Attachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GunBase_C", "PreviewAttachment");

	Params::GunBase_C_PreviewAttachment Parms{};

	Parms.Attachment = Attachment;

	UObject::ProcessEvent(Func, &Parms);
}

}

