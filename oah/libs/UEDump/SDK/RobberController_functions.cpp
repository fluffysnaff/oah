#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RobberController

#include "Basic.hpp"

#include "RobberController_classes.hpp"
#include "RobberController_parameters.hpp"


namespace SDK
{

// Function RobberController.RobberController_C.LoadedAll__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadedAll__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadedAll__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.CashLoaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARobberController_C::CashLoaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "CashLoaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.WeaponsLoaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARobberController_C::WeaponsLoaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "WeaponsLoaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.AppearanceLoaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARobberController_C::AppearanceLoaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "AppearanceLoaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.AppearanceSetOnServer__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARobberController_C::AppearanceSetOnServer__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "AppearanceSetOnServer__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.WeaponsSetOnServer__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARobberController_C::WeaponsSetOnServer__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "WeaponsSetOnServer__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.ToolsSetOnServer__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARobberController_C::ToolsSetOnServer__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "ToolsSetOnServer__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.ToolsLoaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARobberController_C::ToolsLoaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "ToolsLoaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SettingsApplied__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARobberController_C::SettingsApplied__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SettingsApplied__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.UploadedToCloud__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARobberController_C::UploadedToCloud__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "UploadedToCloud__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.DownloadedFromCloud__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Save_name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ARobberController_C::DownloadedFromCloud__DelegateSignature(const class FString& Save_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "DownloadedFromCloud__DelegateSignature");

	Params::RobberController_C_DownloadedFromCloud__DelegateSignature Parms{};

	Parms.Save_name = std::move(Save_name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.CoinsChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARobberController_C::CoinsChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "CoinsChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.LevelLoaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARobberController_C::LevelLoaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LevelLoaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SetupsLoaded__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARobberController_C::SetupsLoaded__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SetupsLoaded__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.LoadedAllFromCloud__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadedAllFromCloud__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadedAllFromCloud__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.ExecuteUbergraph_RobberController
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::ExecuteUbergraph_RobberController(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "ExecuteUbergraph_RobberController");

	Params::RobberController_C_ExecuteUbergraph_RobberController Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.OnBackupFileUploaded
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRemoteStorageFileWriteAsyncCompleteData                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARobberController_C::OnBackupFileUploaded(const struct FRemoteStorageFileWriteAsyncComplete& Data, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "OnBackupFileUploaded");

	Params::RobberController_C_OnBackupFileUploaded Parms{};

	Parms.Data = std::move(Data);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.OnCloudFilesSaves
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRemoteStorageFileWriteAsyncCompleteData                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARobberController_C::OnCloudFilesSaves(const struct FRemoteStorageFileWriteAsyncComplete& Data, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "OnCloudFilesSaves");

	Params::RobberController_C_OnCloudFilesSaves Parms{};

	Parms.Data = std::move(Data);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.LogPlayer
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::LogPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LogPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.CheckPlayerLogged
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::CheckPlayerLogged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "CheckPlayerLogged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.LoadPlaySetups
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadPlaySetups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadPlaySetups");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SavePlaySetups
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::SavePlaySetups()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SavePlaySetups");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.LoadInput
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SaveInput
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::SaveInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SaveInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SetCompletedSetupsServer
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Setups                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ARobberController_C::SetCompletedSetupsServer(const TArray<class UClass*>& Setups)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SetCompletedSetupsServer");

	Params::RobberController_C_SetCompletedSetupsServer Parms{};

	Parms.Setups = std::move(Setups);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.WeeklyRotationLoad
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::WeeklyRotationLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "WeeklyRotationLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.WeeklyRotationSave
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::WeeklyRotationSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "WeeklyRotationSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.GenerateSecureStream
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::GenerateSecureStream()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "GenerateSecureStream");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SaveLoadout
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::SaveLoadout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SaveLoadout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SaveEquippedLoadoutSlot
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::SaveEquippedLoadoutSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SaveEquippedLoadoutSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.LoadLoadout
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadLoadout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadLoadout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.LoadEquippedLoadoutSlot
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadEquippedLoadoutSlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadEquippedLoadoutSlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.LoadMaps
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadMaps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadMaps");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SaveMaps
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::SaveMaps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SaveMaps");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.InventoryFullUpdate
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSteamInventoryFullUpdate        Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void ARobberController_C::InventoryFullUpdate(const struct FSteamInventoryFullUpdate& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "InventoryFullUpdate");

	Params::RobberController_C_InventoryFullUpdate Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "ReceiveTick");

	Params::RobberController_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.DefineCoinItem
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::DefineCoinItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "DefineCoinItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.LoadSavefromCloud
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Save_name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ARobberController_C::LoadSavefromCloud(const class FString& Save_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadSavefromCloud");

	Params::RobberController_C_LoadSavefromCloud Parms{};

	Parms.Save_name = std::move(Save_name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.UploadToCloud
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Savename                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ARobberController_C::UploadToCloud(const class FString& Savename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "UploadToCloud");

	Params::RobberController_C_UploadToCloud Parms{};

	Parms.Savename = std::move(Savename);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.LoadSettings
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.ApplySettings
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::ApplySettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "ApplySettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SaveSettings
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::SaveSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SaveSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.UpdateVotes
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARobberController_C*              Player_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::UpdateVotes(class ARobberController_C* Player_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "UpdateVotes");

	Params::RobberController_C_UpdateVotes Parms{};

	Parms.Player_0 = Player_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.VoteRestart
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARobberController_C*              Player_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::VoteRestart(class ARobberController_C* Player_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "VoteRestart");

	Params::RobberController_C_VoteRestart Parms{};

	Parms.Player_0 = Player_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.SetToolsServer
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Tools                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ARobberController_C::SetToolsServer(const TArray<class UClass*>& Tools)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SetToolsServer");

	Params::RobberController_C_SetToolsServer Parms{};

	Parms.Tools = std::move(Tools);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.UpdateMessages
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ChatLog_0                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           NameLog                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ARobberController_C::UpdateMessages(const class FString& ChatLog_0, const class FString& NameLog)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "UpdateMessages");

	Params::RobberController_C_UpdateMessages Parms{};

	Parms.ChatLog_0 = std::move(ChatLog_0);
	Parms.NameLog = std::move(NameLog);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.ChatMessageController
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Name_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ARobberController_C::ChatMessageController(const class FString& Message, const class FString& Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "ChatMessageController");

	Params::RobberController_C_ChatMessageController Parms{};

	Parms.Message = std::move(Message);
	Parms.Name_0 = std::move(Name_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.SetWeaponsServer
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Weapons                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FAttachmentArrayStructure>Mods                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ARobberController_C::SetWeaponsServer(const TArray<class UClass*>& Weapons, const TArray<struct FAttachmentArrayStructure>& Mods)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SetWeaponsServer");

	Params::RobberController_C_SetWeaponsServer Parms{};

	Parms.Weapons = std::move(Weapons);
	Parms.Mods = std::move(Mods);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.LoadLevel
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SaveLevel
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::SaveLevel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SaveLevel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.LoadCash
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadCash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadCash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SaveCash
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::SaveCash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SaveCash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.LoadAppearance
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadAppearance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadAppearance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SaveAppearance
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::SaveAppearance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SaveAppearance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.UpdateAppearance
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Masks                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UClass*>                   Outfits                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UClass*>                   Emote                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UClass*>                   Armor                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UMaterialInterface*               SkinColor_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::UpdateAppearance(const TArray<class UClass*>& Masks, const TArray<class UClass*>& Outfits, const TArray<class UClass*>& Emote, const TArray<class UClass*>& Armor, class UMaterialInterface* SkinColor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "UpdateAppearance");

	Params::RobberController_C_UpdateAppearance Parms{};

	Parms.Masks = std::move(Masks);
	Parms.Outfits = std::move(Outfits);
	Parms.Emote = std::move(Emote);
	Parms.Armor = std::move(Armor);
	Parms.SkinColor_0 = SkinColor_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.LoadWeapons
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadWeapons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadWeapons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SaveWeapons
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::SaveWeapons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SaveWeapons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.LoadAll
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.LoadToolsEquipped
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadToolsEquipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadToolsEquipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SaveToolsEquipped
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::SaveToolsEquipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SaveToolsEquipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.LoadInventoryItems
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::LoadInventoryItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadInventoryItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SaveInventoryItems
// (BlueprintCallable, BlueprintEvent)

void ARobberController_C::SaveInventoryItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SaveInventoryItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ARobberController_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.OnCallback_AD45EEAC44D55B89E3CC16A1A002AE23
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARobberController_C::OnCallback_AD45EEAC44D55B89E3CC16A1A002AE23(const class FString& Data, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "OnCallback_AD45EEAC44D55B89E3CC16A1A002AE23");

	Params::RobberController_C_OnCallback_AD45EEAC44D55B89E3CC16A1A002AE23 Parms{};

	Parms.Data = std::move(Data);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.OnCallback_0D5D0EC4428E0E8C7A5C85ACACEA797E
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSteamInventoryRequestPricesResultData                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARobberController_C::OnCallback_0D5D0EC4428E0E8C7A5C85ACACEA797E(const struct FSteamInventoryRequestPricesResult& Data, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "OnCallback_0D5D0EC4428E0E8C7A5C85ACACEA797E");

	Params::RobberController_C_OnCallback_0D5D0EC4428E0E8C7A5C85ACACEA797E Parms{};

	Parms.Data = std::move(Data);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.Find Equipped Item from Category Function
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EShopItemCategory                       Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Item                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::Find_Equipped_Item_from_Category_Function(EShopItemCategory Category, int32 Index_0, class UClass** Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "Find Equipped Item from Category Function");

	Params::RobberController_C_Find_Equipped_Item_from_Category_Function Parms{};

	Parms.Category = Category;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Item != nullptr)
		*Item = Parms.Item;
}


// Function RobberController.RobberController_C.OverrideIndexFromCategory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EShopItemCategory                       Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::OverrideIndexFromCategory(EShopItemCategory Category, int32 Index_0, class UClass* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "OverrideIndexFromCategory");

	Params::RobberController_C_OverrideIndexFromCategory Parms{};

	Parms.Category = Category;
	Parms.Index_0 = Index_0;
	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.RemoveInventoryItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARobberController_C::RemoveInventoryItem(class UClass* Item, bool* Success_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "RemoveInventoryItem");

	Params::RobberController_C_RemoveInventoryItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	if (Success_ != nullptr)
		*Success_ = Parms.Success_;
}


// Function RobberController.RobberController_C.AddInventoryItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::AddInventoryItem(class UClass* Item, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "AddInventoryItem");

	Params::RobberController_C_AddInventoryItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function RobberController.RobberController_C.GetInventoryItemsInCategory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EShopItemCategory                       Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Include_equipped_                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class UClass*>                   Inventory                                              (Parm, OutParm)

void ARobberController_C::GetInventoryItemsInCategory(EShopItemCategory Category, bool Include_equipped_, TArray<class UClass*>* Inventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "GetInventoryItemsInCategory");

	Params::RobberController_C_GetInventoryItemsInCategory Parms{};

	Parms.Category = Category;
	Parms.Include_equipped_ = Include_equipped_;

	UObject::ProcessEvent(Func, &Parms);

	if (Inventory != nullptr)
		*Inventory = std::move(Parms.Inventory);
}


// Function RobberController.RobberController_C.UpdateNewWeapon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::UpdateNewWeapon(int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "UpdateNewWeapon");

	Params::RobberController_C_UpdateNewWeapon Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.Update Attachment
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item_Info                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Weaponindex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttachmentArrayStructure        New_attachments_structure                              (Parm, OutParm, HasGetValueTypeHash)

void ARobberController_C::Update_Attachment(class UClass* Item_Info, int32 Weaponindex, struct FAttachmentArrayStructure* New_attachments_structure)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "Update Attachment");

	Params::RobberController_C_Update_Attachment Parms{};

	Parms.Item_Info = Item_Info;
	Parms.Weaponindex = Weaponindex;

	UObject::ProcessEvent(Func, &Parms);

	if (New_attachments_structure != nullptr)
		*New_attachments_structure = std::move(Parms.New_attachments_structure);
}


// Function RobberController.RobberController_C.FindEquppedAttachmentFunc
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EShopItemCategory                       Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Attachment                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::FindEquppedAttachmentFunc(EShopItemCategory Category, int32 Index_0, class UClass** Attachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "FindEquppedAttachmentFunc");

	Params::RobberController_C_FindEquppedAttachmentFunc Parms{};

	Parms.Category = Category;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Attachment != nullptr)
		*Attachment = Parms.Attachment;
}


// Function RobberController.RobberController_C.IsItemInInventory?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ARobberController_C::IsItemInInventory_(class UClass* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "IsItemInInventory?");

	Params::RobberController_C_IsItemInInventory_ Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function RobberController.RobberController_C.Savecategory
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EShopItemCategory                       Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::Savecategory(EShopItemCategory Category)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "Savecategory");

	Params::RobberController_C_Savecategory Parms{};

	Parms.Category = Category;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.SortItemsByUnlockLevel
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Items                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UClass*>                   Sorted_items                                           (Parm, OutParm)

void ARobberController_C::SortItemsByUnlockLevel(TArray<class UClass*>& Items, TArray<class UClass*>* Sorted_items)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SortItemsByUnlockLevel");

	Params::RobberController_C_SortItemsByUnlockLevel Parms{};

	Parms.Items = std::move(Items);

	UObject::ProcessEvent(Func, &Parms);

	Items = std::move(Parms.Items);

	if (Sorted_items != nullptr)
		*Sorted_items = std::move(Parms.Sorted_items);
}


// Function RobberController.RobberController_C.SpendCash
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARobberController_C::SpendCash(int32 Amount, bool* Success_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SpendCash");

	Params::RobberController_C_SpendCash Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);

	if (Success_ != nullptr)
		*Success_ = Parms.Success_;
}


// Function RobberController.RobberController_C.AddEXP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    LevelUp_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARobberController_C::AddEXP(float Amount, bool* LevelUp_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "AddEXP");

	Params::RobberController_C_AddEXP Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);

	if (LevelUp_ != nullptr)
		*LevelUp_ = Parms.LevelUp_;
}


// Function RobberController.RobberController_C.GetRequiredEXP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EXP_required_for_levelup                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::GetRequiredEXP(int32 Level_0, float* EXP_required_for_levelup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "GetRequiredEXP");

	Params::RobberController_C_GetRequiredEXP Parms{};

	Parms.Level_0 = Level_0;

	UObject::ProcessEvent(Func, &Parms);

	if (EXP_required_for_levelup != nullptr)
		*EXP_required_for_levelup = Parms.EXP_required_for_levelup;
}


// Function RobberController.RobberController_C.GetEXPForLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Level_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Exp_0                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::GetEXPForLevel(int32 Level_0, float* Exp_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "GetEXPForLevel");

	Params::RobberController_C_GetEXPForLevel Parms{};

	Parms.Level_0 = Level_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Exp_0 != nullptr)
		*Exp_0 = Parms.Exp_0;
}


// Function RobberController.RobberController_C.RandomMaskOnBegin
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARobberController_C::RandomMaskOnBegin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "RandomMaskOnBegin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.Load All Saved From Remote
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARobberController_C::Load_All_Saved_From_Remote()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "Load All Saved From Remote");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.DownloadFromCloudFunc
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Save_name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ARobberController_C::DownloadFromCloudFunc(const class FString& Save_name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "DownloadFromCloudFunc");

	Params::RobberController_C_DownloadFromCloudFunc Parms{};

	Parms.Save_name = std::move(Save_name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.RandomSkinColorOnNewSave
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARobberController_C::RandomSkinColorOnNewSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "RandomSkinColorOnNewSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.Update Coins
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARobberController_C::Update_Coins()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "Update Coins");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.Consume Coins
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARobberController_C::Consume_Coins(int32 Amount, bool* Success_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "Consume Coins");

	Params::RobberController_C_Consume_Coins Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);

	if (Success_ != nullptr)
		*Success_ = Parms.Success_;
}


// Function RobberController.RobberController_C.AddMap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Map                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::AddMap(class UClass* Map)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "AddMap");

	Params::RobberController_C_AddMap Parms{};

	Parms.Map = Map;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.Post Coin Analytics
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DefID                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Price                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::Post_Coin_Analytics(int32 DefID, int32 Price)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "Post Coin Analytics");

	Params::RobberController_C_Post_Coin_Analytics Parms{};

	Parms.DefID = DefID;
	Parms.Price = Price;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.SwitchLoadout
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::SwitchLoadout(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SwitchLoadout");

	Params::RobberController_C_SwitchLoadout Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.Set Multiply Value
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Integer                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::Set_Multiply_Value(int32 Integer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "Set Multiply Value");

	Params::RobberController_C_Set_Multiply_Value Parms{};

	Parms.Integer = Integer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.Check Multiplied Value
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Check                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Can_purchase_                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARobberController_C::Check_Multiplied_Value(int32 Check, bool* Can_purchase_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "Check Multiplied Value");

	Params::RobberController_C_Check_Multiplied_Value Parms{};

	Parms.Check = Check;

	UObject::ProcessEvent(Func, &Parms);

	if (Can_purchase_ != nullptr)
		*Can_purchase_ = Parms.Can_purchase_;
}


// Function RobberController.RobberController_C.FindEquippedArrayFromCategoryFunction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EShopItemCategory                       Category                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UClass*>                   Array                                                  (Parm, OutParm)

void ARobberController_C::FindEquippedArrayFromCategoryFunction(EShopItemCategory Category, TArray<class UClass*>* Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "FindEquippedArrayFromCategoryFunction");

	Params::RobberController_C_FindEquippedArrayFromCategoryFunction Parms{};

	Parms.Category = Category;

	UObject::ProcessEvent(Func, &Parms);

	if (Array != nullptr)
		*Array = std::move(Parms.Array);
}


// Function RobberController.RobberController_C.FindSkinTimeLeft
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   RotationNumber                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTimespan                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FTimespan ARobberController_C::FindSkinTimeLeft(int32* RotationNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "FindSkinTimeLeft");

	Params::RobberController_C_FindSkinTimeLeft Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RotationNumber != nullptr)
		*RotationNumber = Parms.RotationNumber;

	return Parms.ReturnValue;
}


// Function RobberController.RobberController_C.CheckSteamID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOAR_Savegame_C*                  SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Savename                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<uint8>                           LoadedBytes                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ARobberController_C::CheckSteamID(class UOAR_Savegame_C* SaveGame, const class FString& Savename, TArray<uint8>& LoadedBytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "CheckSteamID");

	Params::RobberController_C_CheckSteamID Parms{};

	Parms.SaveGame = SaveGame;
	Parms.Savename = std::move(Savename);
	Parms.LoadedBytes = std::move(LoadedBytes);

	UObject::ProcessEvent(Func, &Parms);

	LoadedBytes = std::move(Parms.LoadedBytes);
}


// Function RobberController.RobberController_C.LockUserSteamID
// (Public, BlueprintCallable, BlueprintEvent)

void ARobberController_C::LockUserSteamID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LockUserSteamID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.SaveFileByName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Savename                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ARobberController_C::SaveFileByName(const class FString& Savename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "SaveFileByName");

	Params::RobberController_C_SaveFileByName Parms{};

	Parms.Savename = std::move(Savename);

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.AddSetup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Setup                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::AddSetup(class UClass* Setup)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "AddSetup");

	Params::RobberController_C_AddSetup Parms{};

	Parms.Setup = Setup;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.ApplySavedInputSettings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARobberController_C::ApplySavedInputSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "ApplySavedInputSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RobberController.RobberController_C.GetSkillTier
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Tier                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::GetSkillTier(class UClass* Skill, int32* Tier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "GetSkillTier");

	Params::RobberController_C_GetSkillTier Parms{};

	Parms.Skill = Skill;

	UObject::ProcessEvent(Func, &Parms);

	if (Tier != nullptr)
		*Tier = Parms.Tier;
}


// Function RobberController.RobberController_C.FindResearchingSkill
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Skill                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_researching_                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSkillProgressStruct             Array_Element                                          (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::FindResearchingSkill(class UClass* Skill, bool* Is_researching_, struct FSkillProgressStruct* Array_Element)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "FindResearchingSkill");

	Params::RobberController_C_FindResearchingSkill Parms{};

	Parms.Skill = Skill;

	UObject::ProcessEvent(Func, &Parms);

	if (Is_researching_ != nullptr)
		*Is_researching_ = Parms.Is_researching_;

	if (Array_Element != nullptr)
		*Array_Element = std::move(Parms.Array_Element);
}


// Function RobberController.RobberController_C.ProgressSkills
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   XP                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARobberController_C::ProgressSkills(float XP)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "ProgressSkills");

	Params::RobberController_C_ProgressSkills Parms{};

	Parms.XP = XP;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RobberController.RobberController_C.GetCompletedSetupsForMap
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Map                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SetupsCompleted                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Completed_min_                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARobberController_C::GetCompletedSetupsForMap(class UClass* Map, int32* SetupsCompleted, bool* Completed_min_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "GetCompletedSetupsForMap");

	Params::RobberController_C_GetCompletedSetupsForMap Parms{};

	Parms.Map = Map;

	UObject::ProcessEvent(Func, &Parms);

	if (SetupsCompleted != nullptr)
		*SetupsCompleted = Parms.SetupsCompleted;

	if (Completed_min_ != nullptr)
		*Completed_min_ = Parms.Completed_min_;
}


// Function RobberController.RobberController_C.LoadFileFromBackup
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Savename                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// TArray<uint8>                           LoadedBytes                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Success_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ARobberController_C::LoadFileFromBackup(const class FString& Savename, TArray<uint8>& LoadedBytes, bool* Success_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "LoadFileFromBackup");

	Params::RobberController_C_LoadFileFromBackup Parms{};

	Parms.Savename = std::move(Savename);
	Parms.LoadedBytes = std::move(LoadedBytes);

	UObject::ProcessEvent(Func, &Parms);

	LoadedBytes = std::move(Parms.LoadedBytes);

	if (Success_ != nullptr)
		*Success_ = Parms.Success_;
}


// Function RobberController.RobberController_C.Convert Save Info To Bytes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IntIn                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<uint8>                           Bytes                                                  (Parm, OutParm)

void ARobberController_C::Convert_Save_Info_To_Bytes(int32 IntIn, TArray<uint8>* Bytes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RobberController_C", "Convert Save Info To Bytes");

	Params::RobberController_C_Convert_Save_Info_To_Bytes Parms{};

	Parms.IntIn = IntIn;

	UObject::ProcessEvent(Func, &Parms);

	if (Bytes != nullptr)
		*Bytes = std::move(Parms.Bytes);
}

}

