#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Powerbox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Powerbox.Powerbox_C
// 0x00F8 (0x0318 - 0x0220)
class APowerbox_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USteamAchievementComponent_C*           SteamAchievementComponent;                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USteamStatComponent_C*                  SteamStatComponent;                                // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInstructioncomponent_C*                Instructioncomponent;                              // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CrossedWires;                                      // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        MoveToPoint;                                       // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Burning;                                           // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal1;                                            // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PowerboxFire;                                      // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               PowerboxSparks;                                    // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        UILocation;                                        // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULookatInfoComponent_C*                 LookatInfoComponent;                               // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractComponent_C*                   InteractComponent;                                 // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpottedHighlightcomponent_C*           SpottedHighlightcomponent;                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wires;                                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door;                                              // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Box;                                               // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DamageAmount;                                      // 0x02C0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DestroyTime;                                       // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class AActor*>                         AffectedActors;                                    // 0x02C8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, ExposeOnSpawn)
	bool                                          Open_;                                             // 0x02D8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsEnabled_;                                        // 0x02D9(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Destroyed_;                                        // 0x02DA(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Targeted_;                                         // 0x02DB(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanActivate_;                                      // 0x02DC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             PowerboxActivated;                                 // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             PowerboxFinished;                                  // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             PowerboxSabotaged;                                 // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         OrderIndex;                                        // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void PowerboxActivated__DelegateSignature(class APowerbox_C* Powerbox);
	void PowerboxFinished__DelegateSignature();
	void PowerboxSabotaged__DelegateSignature();
	void ExecuteUbergraph_Powerbox(int32 EntryPoint);
	void SabotageFloatingWarning();
	void AlarmTriggeredInterfaceCall();
	void DisablePowerboxMulti();
	void DisablePowerBoxServer();
	void FinishDestroyMulti();
	void FinishDestroyServer();
	void BndEvt__Powerbox_Sphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ShortBoxServer(class AActor* Player);
	void ShortBoxMulti();
	void OpenBox();
	void BndEvt__Powerbox_InteractComponent_K2Node_ComponentBoundEvent_1_Interact__DelegateSignature(class AActor* Player, class UPrimitiveComponent* HitComponent);
	void HighlightBoxesOnAlarm();
	void AlarmDisabledInterfaceCall();
	void CheckIfAllDoorsArelocked(bool* ShouldHighlight_);
	void HighlightNextPowerbox();
	void CheckIfAllDestroyed(bool* AllDestroyed_);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Powerbox_C">();
	}
	static class APowerbox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APowerbox_C>();
	}
};
static_assert(alignof(APowerbox_C) == 0x000008, "Wrong alignment on APowerbox_C");
static_assert(sizeof(APowerbox_C) == 0x000318, "Wrong size on APowerbox_C");
static_assert(offsetof(APowerbox_C, UberGraphFrame) == 0x000220, "Member 'APowerbox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(APowerbox_C, SteamAchievementComponent) == 0x000228, "Member 'APowerbox_C::SteamAchievementComponent' has a wrong offset!");
static_assert(offsetof(APowerbox_C, SteamStatComponent) == 0x000230, "Member 'APowerbox_C::SteamStatComponent' has a wrong offset!");
static_assert(offsetof(APowerbox_C, Instructioncomponent) == 0x000238, "Member 'APowerbox_C::Instructioncomponent' has a wrong offset!");
static_assert(offsetof(APowerbox_C, CrossedWires) == 0x000240, "Member 'APowerbox_C::CrossedWires' has a wrong offset!");
static_assert(offsetof(APowerbox_C, MoveToPoint) == 0x000248, "Member 'APowerbox_C::MoveToPoint' has a wrong offset!");
static_assert(offsetof(APowerbox_C, Burning) == 0x000250, "Member 'APowerbox_C::Burning' has a wrong offset!");
static_assert(offsetof(APowerbox_C, Decal1) == 0x000258, "Member 'APowerbox_C::Decal1' has a wrong offset!");
static_assert(offsetof(APowerbox_C, Decal) == 0x000260, "Member 'APowerbox_C::Decal' has a wrong offset!");
static_assert(offsetof(APowerbox_C, PowerboxFire) == 0x000268, "Member 'APowerbox_C::PowerboxFire' has a wrong offset!");
static_assert(offsetof(APowerbox_C, PowerboxSparks) == 0x000270, "Member 'APowerbox_C::PowerboxSparks' has a wrong offset!");
static_assert(offsetof(APowerbox_C, Sphere) == 0x000278, "Member 'APowerbox_C::Sphere' has a wrong offset!");
static_assert(offsetof(APowerbox_C, UILocation) == 0x000280, "Member 'APowerbox_C::UILocation' has a wrong offset!");
static_assert(offsetof(APowerbox_C, LookatInfoComponent) == 0x000288, "Member 'APowerbox_C::LookatInfoComponent' has a wrong offset!");
static_assert(offsetof(APowerbox_C, InteractComponent) == 0x000290, "Member 'APowerbox_C::InteractComponent' has a wrong offset!");
static_assert(offsetof(APowerbox_C, SpottedHighlightcomponent) == 0x000298, "Member 'APowerbox_C::SpottedHighlightcomponent' has a wrong offset!");
static_assert(offsetof(APowerbox_C, Wires) == 0x0002A0, "Member 'APowerbox_C::Wires' has a wrong offset!");
static_assert(offsetof(APowerbox_C, Door) == 0x0002A8, "Member 'APowerbox_C::Door' has a wrong offset!");
static_assert(offsetof(APowerbox_C, Box) == 0x0002B0, "Member 'APowerbox_C::Box' has a wrong offset!");
static_assert(offsetof(APowerbox_C, DefaultSceneRoot) == 0x0002B8, "Member 'APowerbox_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(APowerbox_C, DamageAmount) == 0x0002C0, "Member 'APowerbox_C::DamageAmount' has a wrong offset!");
static_assert(offsetof(APowerbox_C, DestroyTime) == 0x0002C4, "Member 'APowerbox_C::DestroyTime' has a wrong offset!");
static_assert(offsetof(APowerbox_C, AffectedActors) == 0x0002C8, "Member 'APowerbox_C::AffectedActors' has a wrong offset!");
static_assert(offsetof(APowerbox_C, Open_) == 0x0002D8, "Member 'APowerbox_C::Open_' has a wrong offset!");
static_assert(offsetof(APowerbox_C, IsEnabled_) == 0x0002D9, "Member 'APowerbox_C::IsEnabled_' has a wrong offset!");
static_assert(offsetof(APowerbox_C, Destroyed_) == 0x0002DA, "Member 'APowerbox_C::Destroyed_' has a wrong offset!");
static_assert(offsetof(APowerbox_C, Targeted_) == 0x0002DB, "Member 'APowerbox_C::Targeted_' has a wrong offset!");
static_assert(offsetof(APowerbox_C, CanActivate_) == 0x0002DC, "Member 'APowerbox_C::CanActivate_' has a wrong offset!");
static_assert(offsetof(APowerbox_C, PowerboxActivated) == 0x0002E0, "Member 'APowerbox_C::PowerboxActivated' has a wrong offset!");
static_assert(offsetof(APowerbox_C, PowerboxFinished) == 0x0002F0, "Member 'APowerbox_C::PowerboxFinished' has a wrong offset!");
static_assert(offsetof(APowerbox_C, PowerboxSabotaged) == 0x000300, "Member 'APowerbox_C::PowerboxSabotaged' has a wrong offset!");
static_assert(offsetof(APowerbox_C, OrderIndex) == 0x000310, "Member 'APowerbox_C::OrderIndex' has a wrong offset!");

}

