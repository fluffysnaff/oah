#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerCharacter

#include "Basic.hpp"

#include "PlayerCharacter_classes.hpp"
#include "PlayerCharacter_parameters.hpp"


namespace SDK
{

// Function PlayerCharacter.PlayerCharacter_C.HitMarker__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::HitMarker__DelegateSignature(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "HitMarker__DelegateSignature");

	Params::PlayerCharacter_C_HitMarker__DelegateSignature Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.MouseButton__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Clicked_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::MouseButton__DelegateSignature(bool Clicked_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "MouseButton__DelegateSignature");

	Params::PlayerCharacter_C_MouseButton__DelegateSignature Parms{};

	Parms.Clicked_ = Clicked_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.ToggleFlash__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::ToggleFlash__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ToggleFlash__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.WarningAreaDisp__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ARestrictedAreaVolume_C*          Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Exit_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::WarningAreaDisp__DelegateSignature(class ARestrictedAreaVolume_C* Area, bool Exit_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "WarningAreaDisp__DelegateSignature");

	Params::PlayerCharacter_C_WarningAreaDisp__DelegateSignature Parms{};

	Parms.Area = Area;
	Parms.Exit_ = Exit_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.SwitchedGun__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Number                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::SwitchedGun__DelegateSignature(int32 Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SwitchedGun__DelegateSignature");

	Params::PlayerCharacter_C_SwitchedGun__DelegateSignature Parms{};

	Parms.Number = Number;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.ExecuteUbergraph_PlayerCharacter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::ExecuteUbergraph_PlayerCharacter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ExecuteUbergraph_PlayerCharacter");

	Params::PlayerCharacter_C_ExecuteUbergraph_PlayerCharacter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.GiveImmunityLevel
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::GiveImmunityLevel(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "GiveImmunityLevel");

	Params::PlayerCharacter_C_GiveImmunityLevel Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.SetupStartStats
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetupStartStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupStartStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetupSkills
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetupSkills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupSkills");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.AddCivDeath
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::AddCivDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "AddCivDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetupUI
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetupUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.OnClientLoaded
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::OnClientLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "OnClientLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.FloppyArm
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::FloppyArm()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "FloppyArm");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.DropItem
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::DropItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "DropItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SendStats
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SendStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SendStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetSpeaking
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Speaking_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::SetSpeaking(bool Speaking_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetSpeaking");

	Params::PlayerCharacter_C_SetSpeaking Parms{};

	Parms.Speaking_ = Speaking_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.SetupVoiceComponent
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetupVoiceComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupVoiceComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetPoliceAlerted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Alerted_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::SetPoliceAlerted(bool Alerted_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetPoliceAlerted");

	Params::PlayerCharacter_C_SetPoliceAlerted Parms{};

	Parms.Alerted_ = Alerted_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.UpdateNameTag
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::UpdateNameTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "UpdateNameTag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetAppearanceServer
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetAppearanceServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetAppearanceServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.FallDamage
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::FallDamage(int32 Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "FallDamage");

	Params::PlayerCharacter_C_FallDamage Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.CheckLose
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::CheckLose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "CheckLose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SendAudioData
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<uint8>                           CompressedBuffer                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void APlayerCharacter_C::SendAudioData(const TArray<uint8>& CompressedBuffer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SendAudioData");

	Params::PlayerCharacter_C_SendAudioData Parms{};

	Parms.CompressedBuffer = std::move(CompressedBuffer);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.GetAvailableVoice
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::GetAvailableVoice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "GetAvailableVoice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.replicateAudio
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<uint8>                           Compressed_buffer                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   Desired_sample_rate                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::ReplicateAudio(const TArray<uint8>& Compressed_buffer, const int32 Desired_sample_rate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "replicateAudio");

	Params::PlayerCharacter_C_ReplicateAudio Parms{};

	Parms.Compressed_buffer = std::move(Compressed_buffer);
	Parms.Desired_sample_rate = Desired_sample_rate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void APlayerCharacter_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetInteractDescriptionInterfaceCall
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InteractDescription_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void APlayerCharacter_C::SetInteractDescriptionInterfaceCall(const class FString& InteractDescription_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetInteractDescriptionInterfaceCall");

	Params::PlayerCharacter_C_SetInteractDescriptionInterfaceCall Parms{};

	Parms.InteractDescription_0 = std::move(InteractDescription_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.HitmarkerInterfaceCall
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::HitmarkerInterfaceCall(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "HitmarkerInterfaceCall");

	Params::PlayerCharacter_C_HitmarkerInterfaceCall Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.TakeDamageInterface
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DamageTaken                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Attacker_location                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowDirection_                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::TakeDamageInterface(int32 DamageTaken, const struct FVector& Attacker_location, bool ShowDirection_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "TakeDamageInterface");

	Params::PlayerCharacter_C_TakeDamageInterface Parms{};

	Parms.DamageTaken = DamageTaken;
	Parms.Attacker_location = std::move(Attacker_location);
	Parms.ShowDirection_ = ShowDirection_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.SpawnToolsServer
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Tools                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void APlayerCharacter_C::SpawnToolsServer(const TArray<class UClass*>& Tools)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SpawnToolsServer");

	Params::PlayerCharacter_C_SpawnToolsServer Parms{};

	Parms.Tools = std::move(Tools);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.SetupTools
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetupTools()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupTools");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SpawnTools
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SpawnTools()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SpawnTools");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetupGunsServer
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetupGunsServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupGunsServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.LoadOnServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::LoadOnServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "LoadOnServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.InteractCustom
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit_result                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APlayerCharacter_C::InteractCustom(const struct FHitResult& Hit_result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InteractCustom");

	Params::PlayerCharacter_C_InteractCustom Parms{};

	Parms.Hit_result = std::move(Hit_result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.AddEXP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::AddEXP(float Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "AddEXP");

	Params::PlayerCharacter_C_AddEXP Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.WinGame
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::WinGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "WinGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.OnLoaded
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::OnLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "OnLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.StopDance
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::StopDance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "StopDance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.Dance
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::Dance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Dance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.PickupItemMultiHost
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APlayerCharacter_C::PickupItemMultiHost(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "PickupItemMultiHost");

	Params::PlayerCharacter_C_PickupItemMultiHost Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.Recoil
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::Recoil()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Recoil");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.OnWalkingOffLedge
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector                          PreviousFloorImpactNormal                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          PreviousFloorContactNormal                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          PreviousLocation                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TimeDelta                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::OnWalkingOffLedge(const struct FVector& PreviousFloorImpactNormal, const struct FVector& PreviousFloorContactNormal, const struct FVector& PreviousLocation, float TimeDelta)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "OnWalkingOffLedge");

	Params::PlayerCharacter_C_OnWalkingOffLedge Parms{};

	Parms.PreviousFloorImpactNormal = std::move(PreviousFloorImpactNormal);
	Parms.PreviousFloorContactNormal = std::move(PreviousFloorContactNormal);
	Parms.PreviousLocation = std::move(PreviousLocation);
	Parms.TimeDelta = TimeDelta;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.VaultMulti
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::VaultMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "VaultMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.ForceCrouchevent
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::ForceCrouchevent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ForceCrouchevent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.Vault
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::Vault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Vault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.CrouchEvent
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::CrouchEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "CrouchEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.UnAimEvent
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::UnAimEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "UnAimEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.StopSprintEvent
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::StopSprintEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "StopSprintEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.UncrouchEvent
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::UncrouchEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "UncrouchEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetReserveBulletsServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::SetReserveBulletsServer(int32 Slot, int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetReserveBulletsServer");

	Params::PlayerCharacter_C_SetReserveBulletsServer Parms{};

	Parms.Slot = Slot;
	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.OnLanded
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APlayerCharacter_C::OnLanded(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "OnLanded");

	Params::PlayerCharacter_C_OnLanded Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InterpolateRagdollToTarget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldCrouch_                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Max_strength                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::InterpolateRagdollToTarget(bool ShouldCrouch_, float Max_strength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InterpolateRagdollToTarget");

	Params::PlayerCharacter_C_InterpolateRagdollToTarget Parms{};

	Parms.ShouldCrouch_ = ShouldCrouch_;
	Parms.Max_strength = Max_strength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.UpdateHandleLocation
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::UpdateHandleLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "UpdateHandleLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetupWhenLoaded
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetupWhenLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupWhenLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetupGunMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::SetupGunMulti(int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupGunMulti");

	Params::PlayerCharacter_C_SetupGunMulti Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.SetupGunServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::SetupGunServer(int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupGunServer");

	Params::PlayerCharacter_C_SetupGunServer Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.SwitchGun_Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SwitchGun_Server()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SwitchGun_Server");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.ReloadServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::ReloadServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ReloadServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.ReleaseItemEvent
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::ReleaseItemEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ReleaseItemEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.ServerCrouch
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Crouch_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::ServerCrouch(bool Crouch_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ServerCrouch");

	Params::PlayerCharacter_C_ServerCrouch Parms{};

	Parms.Crouch_ = Crouch_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.ShootMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit_result                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APlayerCharacter_C::ShootMulti(const struct FHitResult& Hit_result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ShootMulti");

	Params::PlayerCharacter_C_ShootMulti Parms{};

	Parms.Hit_result = std::move(Hit_result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.MakeFootstepNoise
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::MakeFootstepNoise()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "MakeFootstepNoise");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.ReloadAction
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::ReloadAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ReloadAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.AttachArmor
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::AttachArmor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "AttachArmor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetupArmor
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetupArmor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupArmor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.RemoveWarning
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWarningDirectionIndicator_C*     Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::RemoveWarning(class UWarningDirectionIndicator_C* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "RemoveWarning");

	Params::PlayerCharacter_C_RemoveWarning Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.RemoveWarningsForever
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::RemoveWarningsForever()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "RemoveWarningsForever");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.ShowWarning
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Guard                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   WarningTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::ShowWarning(class AActor* Guard, float WarningTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ShowWarning");

	Params::PlayerCharacter_C_ShowWarning Parms{};

	Parms.Guard = Guard;
	Parms.WarningTime = WarningTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.ExitWarningArea
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Arrest_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::ExitWarningArea(bool Arrest_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ExitWarningArea");

	Params::PlayerCharacter_C_ExitWarningArea Parms{};

	Parms.Arrest_ = Arrest_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.EnterWarningArea
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Arrest_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::EnterWarningArea(bool Arrest_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "EnterWarningArea");

	Params::PlayerCharacter_C_EnterWarningArea Parms{};

	Parms.Arrest_ = Arrest_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.ChangeMovementSpeed_Server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::ChangeMovementSpeed_Server(float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ChangeMovementSpeed_Server");

	Params::PlayerCharacter_C_ChangeMovementSpeed_Server Parms{};

	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.AimServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Aim_                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::AimServer(bool Aim_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "AimServer");

	Params::PlayerCharacter_C_AimServer Parms{};

	Parms.Aim_ = Aim_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.Aim
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::Aim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Aim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.Burst
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::Burst()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Burst");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.ToggleFlashServer
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::ToggleFlashServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ToggleFlashServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.PutMaskOn
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::PutMaskOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "PutMaskOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetPlayerLoaded
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetPlayerLoaded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetPlayerLoaded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.ForceSwitch
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::ForceSwitch(int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ForceSwitch");

	Params::PlayerCharacter_C_ForceSwitch Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InteractHolding
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::InteractHolding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InteractHolding");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.BndEvt__PlayerCharacter_DamageComponent_K2Node_ComponentBoundEvent_1_Damage__DelegateSignature
// (BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::BndEvt__PlayerCharacter_DamageComponent_K2Node_ComponentBoundEvent_1_Damage__DelegateSignature(int32 Amount, class FName Bone, const struct FVector& HitLocation, const struct FVector& StartLocation, class AActor* Instigator_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "BndEvt__PlayerCharacter_DamageComponent_K2Node_ComponentBoundEvent_1_Damage__DelegateSignature");

	Params::PlayerCharacter_C_BndEvt__PlayerCharacter_DamageComponent_K2Node_ComponentBoundEvent_1_Damage__DelegateSignature Parms{};

	Parms.Amount = Amount;
	Parms.Bone = Bone;
	Parms.HitLocation = std::move(HitLocation);
	Parms.StartLocation = std::move(StartLocation);
	Parms.Instigator_0 = Instigator_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.Temp
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::Temp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Temp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.StartRevive
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::StartRevive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "StartRevive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetLeftMouse
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Down_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::SetLeftMouse(bool Down_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetLeftMouse");

	Params::PlayerCharacter_C_SetLeftMouse Parms{};

	Parms.Down_ = Down_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.ReviveClient
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::ReviveClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ReviveClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.Mousestate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Clicked_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::Mousestate(bool Clicked_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Mousestate");

	Params::PlayerCharacter_C_Mousestate Parms{};

	Parms.Clicked_ = Clicked_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.StopReviveMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::StopReviveMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "StopReviveMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.LookatTrace
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::LookatTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "LookatTrace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.PossesCamera
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::PossesCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "PossesCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.BndEvt__PlayerCharacter_InteractComponent_K2Node_ComponentBoundEvent_0_Interact__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::BndEvt__PlayerCharacter_InteractComponent_K2Node_ComponentBoundEvent_0_Interact__DelegateSignature(class AActor* Player, class UPrimitiveComponent* HitComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "BndEvt__PlayerCharacter_InteractComponent_K2Node_ComponentBoundEvent_0_Interact__DelegateSignature");

	Params::PlayerCharacter_C_BndEvt__PlayerCharacter_InteractComponent_K2Node_ComponentBoundEvent_0_Interact__DelegateSignature Parms{};

	Parms.Player = Player;
	Parms.HitComponent = HitComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.RevivePlayer
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerCharacter_C*               AssistingPlayer                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::RevivePlayer(class APlayerCharacter_C* AssistingPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "RevivePlayer");

	Params::PlayerCharacter_C_RevivePlayer Parms{};

	Parms.AssistingPlayer = AssistingPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.Heal
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::Heal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Heal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.DownedPlayer
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::DownedPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "DownedPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SwitchGunEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::SwitchGunEvent(int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SwitchGunEvent");

	Params::PlayerCharacter_C_SwitchGunEvent Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.TakeDamage
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          AttackerLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Indicate_direction_                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::TakeDamage(int32 Damage, const struct FVector& AttackerLocation, bool Indicate_direction_, class AActor* Instigator_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "TakeDamage");

	Params::PlayerCharacter_C_TakeDamage Parms{};

	Parms.Damage = Damage;
	Parms.AttackerLocation = std::move(AttackerLocation);
	Parms.Indicate_direction_ = Indicate_direction_;
	Parms.Instigator_0 = Instigator_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.FloppyarmMulti
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::FloppyarmMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "FloppyarmMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.Rel_item_multi
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::Rel_item_multi(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Rel_item_multi");

	Params::PlayerCharacter_C_Rel_item_multi Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.Rel_Item_server
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::Rel_Item_server(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Rel_Item_server");

	Params::PlayerCharacter_C_Rel_Item_server Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.PickupItemClient
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APlayerCharacter_C::PickupItemClient(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "PickupItemClient");

	Params::PlayerCharacter_C_PickupItemClient Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InteractServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit_result                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APlayerCharacter_C::InteractServer(const struct FHitResult& Hit_result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InteractServer");

	Params::PlayerCharacter_C_InteractServer Parms{};

	Parms.Hit_result = std::move(Hit_result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.Interact
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::Interact()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Interact");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.Unaim
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::Unaim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Unaim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.ApplySettings
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::ApplySettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ApplySettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SprintServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sprint_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::SprintServer(bool Sprint_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SprintServer");

	Params::PlayerCharacter_C_SprintServer Parms{};

	Parms.Sprint_ = Sprint_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.AttachUnequipped_Multi
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::AttachUnequipped_Multi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "AttachUnequipped_Multi");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.AttachUnequipped
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::AttachUnequipped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "AttachUnequipped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SwitchGunClient
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SwitchGunClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SwitchGunClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.reloadClient
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::ReloadClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "reloadClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.AttachGun
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::AttachGun()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "AttachGun");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.Setup gun
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::Setup_gun(int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Setup gun");

	Params::PlayerCharacter_C_Setup_gun Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.ShootServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit_result                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APlayerCharacter_C::ShootServer(const struct FHitResult& Hit_result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ShootServer");

	Params::PlayerCharacter_C_ShootServer Parms{};

	Parms.Hit_result = std::move(Hit_result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.ShootClient
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::ShootClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ShootClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APlayerCharacter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.CameraRot
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::CameraRot(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "CameraRot");

	Params::PlayerCharacter_C_CameraRot Parms{};

	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ReceiveTick");

	Params::PlayerCharacter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_3
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::InpAxisEvt_LookUp_K2Node_InputAxisEvent_3(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpAxisEvt_LookUp_K2Node_InputAxisEvent_3");

	Params::PlayerCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_3 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpAxisEvt_LookRight_K2Node_InputAxisEvent_2
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::InpAxisEvt_LookRight_K2Node_InputAxisEvent_2(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpAxisEvt_LookRight_K2Node_InputAxisEvent_2");

	Params::PlayerCharacter_C_InpAxisEvt_LookRight_K2Node_InputAxisEvent_2 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1");

	Params::PlayerCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_1 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0");

	Params::PlayerCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_PlayerInfo_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_PlayerInfo_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_PlayerInfo_K2Node_InputActionEvent_0");

	Params::PlayerCharacter_C_InpActEvt_PlayerInfo_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_PlayerInfo_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_PlayerInfo_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_PlayerInfo_K2Node_InputActionEvent_1");

	Params::PlayerCharacter_C_InpActEvt_PlayerInfo_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_Emote_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_Emote_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_Emote_K2Node_InputActionEvent_2");

	Params::PlayerCharacter_C_InpActEvt_Emote_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_Voice_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_Voice_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_Voice_K2Node_InputActionEvent_3");

	Params::PlayerCharacter_C_InpActEvt_Voice_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_Voice_K2Node_InputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_Voice_K2Node_InputActionEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_Voice_K2Node_InputActionEvent_4");

	Params::PlayerCharacter_C_InpActEvt_Voice_K2Node_InputActionEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_Chat_K2Node_InputActionEvent_5
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_Chat_K2Node_InputActionEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_Chat_K2Node_InputActionEvent_5");

	Params::PlayerCharacter_C_InpActEvt_Chat_K2Node_InputActionEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_AnyKey_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_AnyKey_K2Node_InputKeyEvent_0");

	Params::PlayerCharacter_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_Pause_K2Node_InputActionEvent_6
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_Pause_K2Node_InputActionEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_Pause_K2Node_InputActionEvent_6");

	Params::PlayerCharacter_C_InpActEvt_Pause_K2Node_InputActionEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_Flashlight_K2Node_InputActionEvent_7
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_Flashlight_K2Node_InputActionEvent_7(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_Flashlight_K2Node_InputActionEvent_7");

	Params::PlayerCharacter_C_InpActEvt_Flashlight_K2Node_InputActionEvent_7 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_Crouch_K2Node_InputActionEvent_8
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_Crouch_K2Node_InputActionEvent_8(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_Crouch_K2Node_InputActionEvent_8");

	Params::PlayerCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_8 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_SecondMouseAction_K2Node_InputActionEvent_9
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_SecondMouseAction_K2Node_InputActionEvent_9(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_SecondMouseAction_K2Node_InputActionEvent_9");

	Params::PlayerCharacter_C_InpActEvt_SecondMouseAction_K2Node_InputActionEvent_9 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_SecondMouseAction_K2Node_InputActionEvent_10
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_SecondMouseAction_K2Node_InputActionEvent_10(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_SecondMouseAction_K2Node_InputActionEvent_10");

	Params::PlayerCharacter_C_InpActEvt_SecondMouseAction_K2Node_InputActionEvent_10 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_Sprint_K2Node_InputActionEvent_11
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_Sprint_K2Node_InputActionEvent_11(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_Sprint_K2Node_InputActionEvent_11");

	Params::PlayerCharacter_C_InpActEvt_Sprint_K2Node_InputActionEvent_11 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_Sprint_K2Node_InputActionEvent_12
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_Sprint_K2Node_InputActionEvent_12(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_Sprint_K2Node_InputActionEvent_12");

	Params::PlayerCharacter_C_InpActEvt_Sprint_K2Node_InputActionEvent_12 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_Jump_K2Node_InputActionEvent_13
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_Jump_K2Node_InputActionEvent_13(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_Jump_K2Node_InputActionEvent_13");

	Params::PlayerCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_13 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_Three_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_Three_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_Three_K2Node_InputKeyEvent_1");

	Params::PlayerCharacter_C_InpActEvt_Three_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_Two_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_Two_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_Two_K2Node_InputKeyEvent_2");

	Params::PlayerCharacter_C_InpActEvt_Two_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_One_K2Node_InputKeyEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_One_K2Node_InputKeyEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_One_K2Node_InputKeyEvent_3");

	Params::PlayerCharacter_C_InpActEvt_One_K2Node_InputKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_SwitchDown_K2Node_InputActionEvent_14
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_SwitchDown_K2Node_InputActionEvent_14(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_SwitchDown_K2Node_InputActionEvent_14");

	Params::PlayerCharacter_C_InpActEvt_SwitchDown_K2Node_InputActionEvent_14 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_SwitchUp_K2Node_InputActionEvent_15
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_SwitchUp_K2Node_InputActionEvent_15(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_SwitchUp_K2Node_InputActionEvent_15");

	Params::PlayerCharacter_C_InpActEvt_SwitchUp_K2Node_InputActionEvent_15 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_Reload_K2Node_InputActionEvent_16
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_Reload_K2Node_InputActionEvent_16(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_Reload_K2Node_InputActionEvent_16");

	Params::PlayerCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_16 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_MouseAction_K2Node_InputActionEvent_17
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_MouseAction_K2Node_InputActionEvent_17(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_MouseAction_K2Node_InputActionEvent_17");

	Params::PlayerCharacter_C_InpActEvt_MouseAction_K2Node_InputActionEvent_17 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.InpActEvt_MouseAction_K2Node_InputActionEvent_18
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void APlayerCharacter_C::InpActEvt_MouseAction_K2Node_InputActionEvent_18(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InpActEvt_MouseAction_K2Node_InputActionEvent_18");

	Params::PlayerCharacter_C_InpActEvt_MouseAction_K2Node_InputActionEvent_18 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.AlphaRecoil__UpdateFunc
// (BlueprintEvent)

void APlayerCharacter_C::AlphaRecoil__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "AlphaRecoil__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.AlphaRecoil__FinishedFunc
// (BlueprintEvent)

void APlayerCharacter_C::AlphaRecoil__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "AlphaRecoil__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.interpRagdoll__UpdateFunc
// (BlueprintEvent)

void APlayerCharacter_C::InterpRagdoll__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "interpRagdoll__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.interpRagdoll__FinishedFunc
// (BlueprintEvent)

void APlayerCharacter_C::InterpRagdoll__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "interpRagdoll__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.Shootvisuals
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APlayerCharacter_C::Shootvisuals(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Shootvisuals");

	Params::PlayerCharacter_C_Shootvisuals Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.OnRep_ShootHit
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::OnRep_ShootHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "OnRep_ShootHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.ShootFunction
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APlayerCharacter_C::ShootFunction(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "ShootFunction");

	Params::PlayerCharacter_C_ShootFunction Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.SwitchGun
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Number                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Willswitch_                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::SwitchGun(int32 Number, bool* Willswitch_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SwitchGun");

	Params::PlayerCharacter_C_SwitchGun Parms{};

	Parms.Number = Number;

	UObject::ProcessEvent(Func, &Parms);

	if (Willswitch_ != nullptr)
		*Willswitch_ = Parms.Willswitch_;
}


// Function PlayerCharacter.PlayerCharacter_C.SpawnUnequippedGuns
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SpawnUnequippedGuns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SpawnUnequippedGuns");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.AttachUnequippedGuns
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::AttachUnequippedGuns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "AttachUnequippedGuns");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetupGunAmmo
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetupGunAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupGunAmmo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.InteractFunction
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit_result                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APlayerCharacter_C::InteractFunction(const struct FHitResult& Hit_result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InteractFunction");

	Params::PlayerCharacter_C_InteractFunction Parms{};

	Parms.Hit_result = std::move(Hit_result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.Pick up item
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit_result                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void APlayerCharacter_C::Pick_up_item(const struct FHitResult& Hit_result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Pick up item");

	Params::PlayerCharacter_C_Pick_up_item Parms{};

	Parms.Hit_result = std::move(Hit_result);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.Release item
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::Release_item(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Release item");

	Params::PlayerCharacter_C_Release_item Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.SetMeshCrouchLocation
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Crouched_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::SetMeshCrouchLocation(bool Crouched_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetMeshCrouchLocation");

	Params::PlayerCharacter_C_SetMeshCrouchLocation Parms{};

	Parms.Crouched_ = Crouched_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.SetupGunFunc
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::SetupGunFunc(int32 Slot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupGunFunc");

	Params::PlayerCharacter_C_SetupGunFunc Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerCharacter.PlayerCharacter_C.CheckCanVault
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Can_vault_                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Vault_over_                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          VaultLocation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WillCrouch_                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::CheckCanVault(bool* Can_vault_, bool* Vault_over_, struct FVector* VaultLocation, bool* WillCrouch_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "CheckCanVault");

	Params::PlayerCharacter_C_CheckCanVault Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Can_vault_ != nullptr)
		*Can_vault_ = Parms.Can_vault_;

	if (Vault_over_ != nullptr)
		*Vault_over_ = Parms.Vault_over_;

	if (VaultLocation != nullptr)
		*VaultLocation = std::move(Parms.VaultLocation);

	if (WillCrouch_ != nullptr)
		*WillCrouch_ = Parms.WillCrouch_;
}


// Function PlayerCharacter.PlayerCharacter_C.CanUncrouch?
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Can_                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::CanUncrouch_(bool* Can_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "CanUncrouch?");

	Params::PlayerCharacter_C_CanUncrouch_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Can_ != nullptr)
		*Can_ = Parms.Can_;
}


// Function PlayerCharacter.PlayerCharacter_C.Get Any Gun Stats
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAttachmentArrayStructure        AttachmentArrayStructure                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class UClass*                           GunClass                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Zoom                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Recoil                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Accuracy                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Reload_time                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Damage                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Bullets                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::Get_Any_Gun_Stats(const struct FAttachmentArrayStructure& AttachmentArrayStructure, class UClass* GunClass, float* Zoom, float* Recoil, float* Accuracy, float* Reload_time, float* Damage, int32* Bullets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "Get Any Gun Stats");

	Params::PlayerCharacter_C_Get_Any_Gun_Stats Parms{};

	Parms.AttachmentArrayStructure = std::move(AttachmentArrayStructure);
	Parms.GunClass = GunClass;

	UObject::ProcessEvent(Func, &Parms);

	if (Zoom != nullptr)
		*Zoom = Parms.Zoom;

	if (Recoil != nullptr)
		*Recoil = Parms.Recoil;

	if (Accuracy != nullptr)
		*Accuracy = Parms.Accuracy;

	if (Reload_time != nullptr)
		*Reload_time = Parms.Reload_time;

	if (Damage != nullptr)
		*Damage = Parms.Damage;

	if (Bullets != nullptr)
		*Bullets = Parms.Bullets;
}


// Function PlayerCharacter.PlayerCharacter_C.InaccuracyFunc
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float APlayerCharacter_C::InaccuracyFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "InaccuracyFunc");

	Params::PlayerCharacter_C_InaccuracyFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerCharacter.PlayerCharacter_C.SetupControllerGuns
// (Private, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetupControllerGuns()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupControllerGuns");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetupControllerTools
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetupControllerTools()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupControllerTools");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.OnRep_EquippedTools
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::OnRep_EquippedTools()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "OnRep_EquippedTools");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.CheckLoseFunc
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Game_over_                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::CheckLoseFunc(bool* Game_over_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "CheckLoseFunc");

	Params::PlayerCharacter_C_CheckLoseFunc Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Game_over_ != nullptr)
		*Game_over_ = Parms.Game_over_;
}


// Function PlayerCharacter.PlayerCharacter_C.SetupControllerAppearance
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetupControllerAppearance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupControllerAppearance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.OnRep_Outfit
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::OnRep_Outfit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "OnRep_Outfit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.OnRep_SkinColorPlayer
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::OnRep_SkinColorPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "OnRep_SkinColorPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.OnRep_Dancing?
// (BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::OnRep_Dancing_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "OnRep_Dancing?");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.SetupControllerSkills
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APlayerCharacter_C::SetupControllerSkills()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "SetupControllerSkills");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerCharacter.PlayerCharacter_C.CheckIfDowned?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Downed__0                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::CheckIfDowned_(bool* Downed__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "CheckIfDowned?");

	Params::PlayerCharacter_C_CheckIfDowned_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Downed__0 != nullptr)
		*Downed__0 = Parms.Downed__0;
}


// Function PlayerCharacter.PlayerCharacter_C.AddAmmoInterfaceCall
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DidAddAmmo_                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APlayerCharacter_C::AddAmmoInterfaceCall(int32 Amount, bool* DidAddAmmo_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "AddAmmoInterfaceCall");

	Params::PlayerCharacter_C_AddAmmoInterfaceCall Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);

	if (DidAddAmmo_ != nullptr)
		*DidAddAmmo_ = Parms.DidAddAmmo_;
}


// Function PlayerCharacter.PlayerCharacter_C.CheckHoldingItemInterfaceCall
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HoldingItem                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::CheckHoldingItemInterfaceCall(class AActor** HoldingItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "CheckHoldingItemInterfaceCall");

	Params::PlayerCharacter_C_CheckHoldingItemInterfaceCall Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HoldingItem != nullptr)
		*HoldingItem = Parms.HoldingItem;
}


// Function PlayerCharacter.PlayerCharacter_C.GetHoldingActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HoldingActor_0                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerCharacter_C::GetHoldingActor(class AActor** HoldingActor_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerCharacter_C", "GetHoldingActor");

	Params::PlayerCharacter_C_GetHoldingActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HoldingActor_0 != nullptr)
		*HoldingActor_0 = Parms.HoldingActor_0;
}

}

