#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DoorBP_Locked

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DoorBP_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DoorBP_Locked.DoorBP_Locked_C
// 0x0020 (0x02F8 - 0x02D8)
class ADoorBP_Locked_C final : public ADoorBP_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_DoorBP_Locked_C;                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   UnlockSide;                                        // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Lock1;                                             // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Lock;                                              // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExplodeDoor(class AActor* Param_Instigator);
	void DisableUnlockCollision();
	void ExplodeDoorMulti();
	void ExecuteUbergraph_DoorBP_Locked(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DoorBP_Locked_C">();
	}
	static class ADoorBP_Locked_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADoorBP_Locked_C>();
	}
};
static_assert(alignof(ADoorBP_Locked_C) == 0x000008, "Wrong alignment on ADoorBP_Locked_C");
static_assert(sizeof(ADoorBP_Locked_C) == 0x0002F8, "Wrong size on ADoorBP_Locked_C");
static_assert(offsetof(ADoorBP_Locked_C, UberGraphFrame_DoorBP_Locked_C) == 0x0002D8, "Member 'ADoorBP_Locked_C::UberGraphFrame_DoorBP_Locked_C' has a wrong offset!");
static_assert(offsetof(ADoorBP_Locked_C, UnlockSide) == 0x0002E0, "Member 'ADoorBP_Locked_C::UnlockSide' has a wrong offset!");
static_assert(offsetof(ADoorBP_Locked_C, Lock1) == 0x0002E8, "Member 'ADoorBP_Locked_C::Lock1' has a wrong offset!");
static_assert(offsetof(ADoorBP_Locked_C, Lock) == 0x0002F0, "Member 'ADoorBP_Locked_C::Lock' has a wrong offset!");

}

