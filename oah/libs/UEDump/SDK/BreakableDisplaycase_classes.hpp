#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BreakableDisplaycase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BreakableDisplaycase.BreakableDisplaycase_C
// 0x0040 (0x0260 - 0x0220)
class ABreakableDisplaycase_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   Glass_top;                                         // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Lock;                                              // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   Glass_side;                                        // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAlertComponent_C*                      AlertComponent;                                    // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULockpickComponent_C*                   LockpickComponent;                                 // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Prop_DisplayCase_02;                            // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BreakableDisplaycase(int32 EntryPoint);
	void ForceDestroyGlass();
	void BndEvt__BreakableDisplaycase_LockpickComponent_K2Node_ComponentBoundEvent_0_Unlock__DelegateSignature();
	void OnGlassDestroyed();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BreakableDisplaycase_C">();
	}
	static class ABreakableDisplaycase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABreakableDisplaycase_C>();
	}
};
static_assert(alignof(ABreakableDisplaycase_C) == 0x000008, "Wrong alignment on ABreakableDisplaycase_C");
static_assert(sizeof(ABreakableDisplaycase_C) == 0x000260, "Wrong size on ABreakableDisplaycase_C");
static_assert(offsetof(ABreakableDisplaycase_C, UberGraphFrame) == 0x000220, "Member 'ABreakableDisplaycase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABreakableDisplaycase_C, Glass_top) == 0x000228, "Member 'ABreakableDisplaycase_C::Glass_top' has a wrong offset!");
static_assert(offsetof(ABreakableDisplaycase_C, Lock) == 0x000230, "Member 'ABreakableDisplaycase_C::Lock' has a wrong offset!");
static_assert(offsetof(ABreakableDisplaycase_C, Glass_side) == 0x000238, "Member 'ABreakableDisplaycase_C::Glass_side' has a wrong offset!");
static_assert(offsetof(ABreakableDisplaycase_C, AlertComponent) == 0x000240, "Member 'ABreakableDisplaycase_C::AlertComponent' has a wrong offset!");
static_assert(offsetof(ABreakableDisplaycase_C, LockpickComponent) == 0x000248, "Member 'ABreakableDisplaycase_C::LockpickComponent' has a wrong offset!");
static_assert(offsetof(ABreakableDisplaycase_C, SM_Prop_DisplayCase_02) == 0x000250, "Member 'ABreakableDisplaycase_C::SM_Prop_DisplayCase_02' has a wrong offset!");
static_assert(offsetof(ABreakableDisplaycase_C, DefaultSceneRoot) == 0x000258, "Member 'ABreakableDisplaycase_C::DefaultSceneRoot' has a wrong offset!");

}

