#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HackingPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function HackingPoint.HackingPoint_C.ExecuteUbergraph_HackingPoint
// 0x01A8 (0x01A8 - 0x0000)
struct HackingPoint_C_ExecuteUbergraph_HackingPoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHackableItemComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AItem_Keycard_C*                        K2Node_DynamicCast_AsItem_Keycard;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Correct_;                       // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x00D0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0168(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UActorComponent*                        CallFunc_Array_Get_Item_1;                         // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInstructionInterface_C> K2Node_DynamicCast_AsInstruction_Interface;        // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HackingPoint_C_ExecuteUbergraph_HackingPoint) == 0x000008, "Wrong alignment on HackingPoint_C_ExecuteUbergraph_HackingPoint");
static_assert(sizeof(HackingPoint_C_ExecuteUbergraph_HackingPoint) == 0x0001A8, "Wrong size on HackingPoint_C_ExecuteUbergraph_HackingPoint");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, EntryPoint) == 0x000000, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, Temp_bool_Variable) == 0x000004, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, Temp_object_Variable) == 0x000008, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, Temp_object_Variable_1) == 0x000010, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, Temp_bool_Has_Been_Initd_Variable) == 0x000018, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, Temp_bool_IsClosed_Variable) == 0x000019, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, Temp_struct_Variable) == 0x00001C, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, Temp_bool_IsClosed_Variable_1) == 0x000034, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, Temp_bool_Has_Been_Initd_Variable_1) == 0x000035, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, Temp_bool_Variable_1) == 0x000036, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, Temp_struct_Variable_1) == 0x000038, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, Temp_int_Array_Index_Variable) == 0x000050, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, Temp_int_Array_Index_Variable_1) == 0x000054, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_Array_Get_Item) == 0x000060, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_GetComponentByClass_ReturnValue) == 0x000070, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, K2Node_CustomEvent_Actor) == 0x000080, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, K2Node_DynamicCast_AsItem_Keycard) == 0x000088, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::K2Node_DynamicCast_AsItem_Keycard' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, K2Node_CustomEvent_Correct_) == 0x000091, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::K2Node_CustomEvent_Correct_' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, K2Node_Select_Default) == 0x000094, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, K2Node_Select_Default_1) == 0x0000A8, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000B0, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, K2Node_ComponentBoundEvent_OtherActor) == 0x0000B8, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, K2Node_ComponentBoundEvent_OtherComp) == 0x0000C0, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000C8, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000CC, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, K2Node_ComponentBoundEvent_SweepResult) == 0x0000D0, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000158, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_IsOverlappingActor_ReturnValue) == 0x000164, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000165, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_GetComponentsByTag_ReturnValue) == 0x000168, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_Array_Get_Item_1) == 0x000178, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, K2Node_DynamicCast_AsInstruction_Interface) == 0x000188, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::K2Node_DynamicCast_AsInstruction_Interface' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, K2Node_DynamicCast_bSuccess_1) == 0x000198, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_Less_IntInt_ReturnValue_1) == 0x000199, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_Array_Length_ReturnValue_2) == 0x00019C, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_ExecuteUbergraph_HackingPoint, CallFunc_Greater_IntInt_ReturnValue) == 0x0001A0, "Member 'HackingPoint_C_ExecuteUbergraph_HackingPoint::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function HackingPoint.HackingPoint_C.BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'HackingPoint_C_BndEvt__HackingPoint_KeycardOverlapper_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function HackingPoint.HackingPoint_C.KeycardLight
// 0x0001 (0x0001 - 0x0000)
struct HackingPoint_C_KeycardLight final
{
public:
	bool                                          Correct_;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HackingPoint_C_KeycardLight) == 0x000001, "Wrong alignment on HackingPoint_C_KeycardLight");
static_assert(sizeof(HackingPoint_C_KeycardLight) == 0x000001, "Wrong size on HackingPoint_C_KeycardLight");
static_assert(offsetof(HackingPoint_C_KeycardLight, Correct_) == 0x000000, "Member 'HackingPoint_C_KeycardLight::Correct_' has a wrong offset!");

// Function HackingPoint.HackingPoint_C.CheckKeycard
// 0x0008 (0x0008 - 0x0000)
struct HackingPoint_C_CheckKeycard final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HackingPoint_C_CheckKeycard) == 0x000008, "Wrong alignment on HackingPoint_C_CheckKeycard");
static_assert(sizeof(HackingPoint_C_CheckKeycard) == 0x000008, "Wrong size on HackingPoint_C_CheckKeycard");
static_assert(offsetof(HackingPoint_C_CheckKeycard, Actor) == 0x000000, "Member 'HackingPoint_C_CheckKeycard::Actor' has a wrong offset!");

// Function HackingPoint.HackingPoint_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct HackingPoint_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HackingPoint_C_UserConstructionScript) == 0x000001, "Wrong alignment on HackingPoint_C_UserConstructionScript");
static_assert(sizeof(HackingPoint_C_UserConstructionScript) == 0x000001, "Wrong size on HackingPoint_C_UserConstructionScript");
static_assert(offsetof(HackingPoint_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000000, "Member 'HackingPoint_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

}

