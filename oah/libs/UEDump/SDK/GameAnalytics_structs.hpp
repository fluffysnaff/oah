#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameAnalytics

#include "Basic.hpp"


namespace SDK
{

// Enum GameAnalytics.EGAAdError
// NumValues: 0x0008
enum class EGAAdError : uint8
{
	Undefined                                = 0,
	Unknown                                  = 1,
	Offline                                  = 2,
	Nofill                                   = 3,
	Internalerror                            = 4,
	Invalidrequest                           = 5,
	Unabletoprecache                         = 6,
	EGAAdError_MAX                           = 7,
};

// Enum GameAnalytics.EGAAdType
// NumValues: 0x0008
enum class EGAAdType : uint8
{
	Undefined                                = 0,
	Video                                    = 1,
	Rewardedvideo                            = 2,
	Playable                                 = 3,
	Interstitial                             = 4,
	Offerwall                                = 5,
	banner                                   = 6,
	EGAAdType_MAX                            = 7,
};

// Enum GameAnalytics.EGAAdAction
// NumValues: 0x0008
enum class EGAAdAction : uint8
{
	Undefined                                = 0,
	Clicked                                  = 1,
	Show                                     = 2,
	Failedshow                               = 3,
	Rewardreceived                           = 4,
	Request                                  = 5,
	Loaded                                   = 6,
	EGAAdAction_MAX                          = 7,
};

// Enum GameAnalytics.EGAErrorSeverity
// NumValues: 0x0007
enum class EGAErrorSeverity : uint8
{
	Undefined                                = 0,
	Debug                                    = 1,
	Info                                     = 2,
	Warning                                  = 3,
	Error                                    = 4,
	Critical                                 = 5,
	EGAErrorSeverity_MAX                     = 6,
};

// Enum GameAnalytics.EGAProgressionStatus
// NumValues: 0x0005
enum class EGAProgressionStatus : uint8
{
	Undefined                                = 0,
	Start                                    = 1,
	Complete                                 = 2,
	Fail                                     = 3,
	EGAProgressionStatus_MAX                 = 4,
};

// Enum GameAnalytics.EGAResourceFlowType
// NumValues: 0x0004
enum class EGAResourceFlowType : uint8
{
	Undefined                                = 0,
	Source                                   = 1,
	Sink                                     = 2,
	EGAResourceFlowType_MAX                  = 3,
};

// ScriptStruct GameAnalytics.GameAnalyticsCustomEventField
// 0x0020 (0x0020 - 0x0000)
struct FGameAnalyticsCustomEventField final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FGameAnalyticsCustomEventField) == 0x000008, "Wrong alignment on FGameAnalyticsCustomEventField");
static_assert(sizeof(FGameAnalyticsCustomEventField) == 0x000020, "Wrong size on FGameAnalyticsCustomEventField");
static_assert(offsetof(FGameAnalyticsCustomEventField, Key) == 0x000000, "Member 'FGameAnalyticsCustomEventField::Key' has a wrong offset!");
static_assert(offsetof(FGameAnalyticsCustomEventField, Value) == 0x000010, "Member 'FGameAnalyticsCustomEventField::Value' has a wrong offset!");

}

