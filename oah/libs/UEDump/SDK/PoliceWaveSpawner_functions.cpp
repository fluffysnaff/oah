#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PoliceWaveSpawner

#include "Basic.hpp"

#include "PoliceWaveSpawner_classes.hpp"
#include "PoliceWaveSpawner_parameters.hpp"


namespace SDK
{

// Function PoliceWaveSpawner.PoliceWaveSpawner_C.ExecuteUbergraph_PoliceWaveSpawner
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APoliceWaveSpawner_C::ExecuteUbergraph_PoliceWaveSpawner(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "ExecuteUbergraph_PoliceWaveSpawner");

	Params::PoliceWaveSpawner_C_ExecuteUbergraph_PoliceWaveSpawner Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.ForceSpawnPolice
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APoliceWaveSpawner_C::ForceSpawnPolice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "ForceSpawnPolice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.PowerboxRush
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APoliceWaveSpawner_C::PowerboxRush()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "PowerboxRush");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.SetPower
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Total                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Minimum                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PowerMultiplier_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APoliceWaveSpawner_C::SetPower(int32 Total, int32 Minimum, float PowerMultiplier_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "SetPower");

	Params::PoliceWaveSpawner_C_SetPower Parms{};

	Parms.Total = Total;
	Parms.Minimum = Minimum;
	Parms.PowerMultiplier_0 = PowerMultiplier_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.SpecialsWave
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APoliceWaveSpawner_C::SpecialsWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "SpecialsWave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.SpawnSpecialPolice
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APoliceWaveSpawner_C::SpawnSpecialPolice()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "SpawnSpecialPolice");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.VaultOpenPause
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APoliceWaveSpawner_C::VaultOpenPause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "VaultOpenPause");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APoliceWaveSpawner_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.ForceNewWave
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APoliceWaveSpawner_C::ForceNewWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "ForceNewWave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.SpawnPoliceInWave
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APoliceWaveSpawner_C::SpawnPoliceInWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "SpawnPoliceInWave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APoliceWaveSpawner_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "ReceiveTick");

	Params::PoliceWaveSpawner_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.AlertCopsUI
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void APoliceWaveSpawner_C::AlertCopsUI(const class FString& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "AlertCopsUI");

	Params::PoliceWaveSpawner_C_AlertCopsUI Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.AlertCops
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Reason                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void APoliceWaveSpawner_C::AlertCops(const class FString& Reason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "AlertCops");

	Params::PoliceWaveSpawner_C_AlertCops Parms{};

	Parms.Reason = std::move(Reason);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.NewWave
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void APoliceWaveSpawner_C::NewWave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "NewWave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.DecideWaveSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   WaveMultiplier_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APoliceWaveSpawner_C::DecideWaveSize(float WaveMultiplier_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "DecideWaveSize");

	Params::PoliceWaveSpawner_C_DecideWaveSize Parms{};

	Parms.WaveMultiplier_0 = WaveMultiplier_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.FindCurrentPoliceAlive
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AmountAlive                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APoliceWaveSpawner_C::FindCurrentPoliceAlive(int32* AmountAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "FindCurrentPoliceAlive");

	Params::PoliceWaveSpawner_C_FindCurrentPoliceAlive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AmountAlive != nullptr)
		*AmountAlive = Parms.AmountAlive;
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.DecidepoliceToSpawn
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   Police_array                                           (Parm, OutParm)

void APoliceWaveSpawner_C::DecidepoliceToSpawn(TArray<class UClass*>* Police_array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "DecidepoliceToSpawn");

	Params::PoliceWaveSpawner_C_DecidepoliceToSpawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Police_array != nullptr)
		*Police_array = std::move(Parms.Police_array);
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.FindActivePowerboxes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ActivePowerboxes_                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APoliceWaveSpawner_C::FindActivePowerboxes(bool* ActivePowerboxes_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "FindActivePowerboxes");

	Params::PoliceWaveSpawner_C_FindActivePowerboxes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActivePowerboxes_ != nullptr)
		*ActivePowerboxes_ = Parms.ActivePowerboxes_;
}


// Function PoliceWaveSpawner.PoliceWaveSpawner_C.DecideSpecials
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void APoliceWaveSpawner_C::DecideSpecials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PoliceWaveSpawner_C", "DecideSpecials");

	UObject::ProcessEvent(Func, nullptr);
}

}

