#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Lock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Lock.Lock_C
// 0x0088 (0x02A8 - 0x0220)
class ALock_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USteamStatComponent_C*                  SteamStatComponent;                                // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ToolSpotChild;                                     // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAlertComponent_C*                      AlertComponent;                                    // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UToolOwnerComponent_C*                  ToolOwnerComponent;                                // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpottedHighlightcomponent_C*           SpottedHighlightcomponent;                         // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULookatInfoComponent_C*                 LookatInfoComponent;                               // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsHandleComponent*                PhysicsHandle;                                     // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        AttractPoint;                                      // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Lock;                                              // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Lock_mesh;                                         // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class ALock_pick_C*                           Tool;                                              // 0x0288(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Unlocked_;                                         // 0x0290(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          Attaches_;                                         // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   AttachComponent;                                   // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Triggers_alarm_;                                   // 0x02A0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Exp;                                               // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Lock(int32 EntryPoint);
	void AlarmDisabledInterfaceCall();
	void BndEvt__Lock_AlertComponent_K2Node_ComponentBoundEvent_3_OnAlarmtriggered__DelegateSignature();
	void UnlockMulti();
	void BndEvt__Lock_ToolOwnerComponent_K2Node_ComponentBoundEvent_2_Open__DelegateSignature();
	void ReceiveBeginPlay();
	void Unlock();
	void Detach_tool();
	void BndEvt__Lock_Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Lock_Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void AttachPick(class AActor* Actor, class UPrimitiveComponent* Component, class APlayerCharacter_C* Player);
	void AlarmTriggeredInterfaceCall();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Lock_C">();
	}
	static class ALock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ALock_C>();
	}
};
static_assert(alignof(ALock_C) == 0x000008, "Wrong alignment on ALock_C");
static_assert(sizeof(ALock_C) == 0x0002A8, "Wrong size on ALock_C");
static_assert(offsetof(ALock_C, UberGraphFrame) == 0x000220, "Member 'ALock_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ALock_C, SteamStatComponent) == 0x000228, "Member 'ALock_C::SteamStatComponent' has a wrong offset!");
static_assert(offsetof(ALock_C, ToolSpotChild) == 0x000230, "Member 'ALock_C::ToolSpotChild' has a wrong offset!");
static_assert(offsetof(ALock_C, AlertComponent) == 0x000238, "Member 'ALock_C::AlertComponent' has a wrong offset!");
static_assert(offsetof(ALock_C, ToolOwnerComponent) == 0x000240, "Member 'ALock_C::ToolOwnerComponent' has a wrong offset!");
static_assert(offsetof(ALock_C, SpottedHighlightcomponent) == 0x000248, "Member 'ALock_C::SpottedHighlightcomponent' has a wrong offset!");
static_assert(offsetof(ALock_C, LookatInfoComponent) == 0x000250, "Member 'ALock_C::LookatInfoComponent' has a wrong offset!");
static_assert(offsetof(ALock_C, PhysicsHandle) == 0x000258, "Member 'ALock_C::PhysicsHandle' has a wrong offset!");
static_assert(offsetof(ALock_C, AttractPoint) == 0x000260, "Member 'ALock_C::AttractPoint' has a wrong offset!");
static_assert(offsetof(ALock_C, Lock) == 0x000268, "Member 'ALock_C::Lock' has a wrong offset!");
static_assert(offsetof(ALock_C, Sphere) == 0x000270, "Member 'ALock_C::Sphere' has a wrong offset!");
static_assert(offsetof(ALock_C, DefaultSceneRoot) == 0x000278, "Member 'ALock_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ALock_C, Lock_mesh) == 0x000280, "Member 'ALock_C::Lock_mesh' has a wrong offset!");
static_assert(offsetof(ALock_C, Tool) == 0x000288, "Member 'ALock_C::Tool' has a wrong offset!");
static_assert(offsetof(ALock_C, Unlocked_) == 0x000290, "Member 'ALock_C::Unlocked_' has a wrong offset!");
static_assert(offsetof(ALock_C, Attaches_) == 0x000291, "Member 'ALock_C::Attaches_' has a wrong offset!");
static_assert(offsetof(ALock_C, AttachComponent) == 0x000298, "Member 'ALock_C::AttachComponent' has a wrong offset!");
static_assert(offsetof(ALock_C, Triggers_alarm_) == 0x0002A0, "Member 'ALock_C::Triggers_alarm_' has a wrong offset!");
static_assert(offsetof(ALock_C, Exp) == 0x0002A4, "Member 'ALock_C::Exp' has a wrong offset!");

}

